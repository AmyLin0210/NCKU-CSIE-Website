/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./apis/announcement.js":
/*!******************************!*\
  !*** ./apis/announcement.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var body_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! body-parser */ "body-parser");
/* harmony import */ var body_parser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(body_parser__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var models_announcement_operation_get_all_announcements_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! models/announcement/operation/get-all-announcements.js */ "./models/announcement/operation/get-all-announcements.js");
/* harmony import */ var models_announcement_operation_get_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! models/announcement/operation/get-announcements-by-tags.js */ "./models/announcement/operation/get-announcements-by-tags.js");
/* harmony import */ var models_announcement_operation_get_all_pinned_announcements_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! models/announcement/operation/get-all-pinned-announcements.js */ "./models/announcement/operation/get-all-pinned-announcements.js");
/* harmony import */ var models_announcement_operation_get_pinned_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! models/announcement/operation/get-pinned-announcements-by-tags.js */ "./models/announcement/operation/get-pinned-announcements-by-tags.js");
/* harmony import */ var models_announcement_operation_get_all_pages_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! models/announcement/operation/get-all-pages.js */ "./models/announcement/operation/get-all-pages.js");
/* harmony import */ var models_announcement_operation_get_pages_by_tags_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! models/announcement/operation/get-pages-by-tags.js */ "./models/announcement/operation/get-pages-by-tags.js");
/* harmony import */ var models_announcement_operation_get_announcement_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! models/announcement/operation/get-announcement.js */ "./models/announcement/operation/get-announcement.js");
/* harmony import */ var models_announcement_operation_get_announcement_all_languages_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! models/announcement/operation/get-announcement-all-languages.js */ "./models/announcement/operation/get-announcement-all-languages.js");
/* harmony import */ var models_announcement_operation_post_announcement_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! models/announcement/operation/post-announcement.js */ "./models/announcement/operation/post-announcement.js");
/* harmony import */ var models_announcement_operation_post_announcementTags_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! models/announcement/operation/post-announcementTags.js */ "./models/announcement/operation/post-announcementTags.js");
/* harmony import */ var models_announcement_operation_post_announcementFile_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! models/announcement/operation/post-announcementFile.js */ "./models/announcement/operation/post-announcementFile.js");
/* harmony import */ var models_announcement_operation_patch_announcement_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! models/announcement/operation/patch-announcement.js */ "./models/announcement/operation/patch-announcement.js");
/* harmony import */ var models_announcement_operation_delete_announcements_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! models/announcement/operation/delete-announcements.js */ "./models/announcement/operation/delete-announcements.js");
/* harmony import */ var models_announcement_operation_delete_announcementTags_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! models/announcement/operation/delete-announcementTags.js */ "./models/announcement/operation/delete-announcementTags.js");
/* harmony import */ var models_announcement_operation_delete_announcementFiles_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! models/announcement/operation/delete-announcementFiles.js */ "./models/announcement/operation/delete-announcementFiles.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


















var apis = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
apis.use(body_parser__WEBPACK_IMPORTED_MODULE_1___default.a.json());
apis.get(/^\/all-announcement$/,
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context.next = 4;
            return Object(models_announcement_operation_get_all_announcements_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              page: req.query.page,
              language: req.query.language
            });

          case 4:
            result = _context.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}());
apis.get(/^\/all-pages$/,
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee2(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context2.next = 4;
            return Object(models_announcement_operation_get_all_pages_js__WEBPACK_IMPORTED_MODULE_6__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime
            });

          case 4:
            result = _context2.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.pageNumber)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function (_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}());
apis.get(/^\/all-pinned$/,
/*#__PURE__*/
function () {
  var _ref3 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee3(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context3.next = 4;
            return Object(models_announcement_operation_get_all_pinned_announcements_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              language: req.query.language
            });

          case 4:
            result = _context3.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function (_x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}());
apis.get(/^\/tags-announcement$/,
/*#__PURE__*/
function () {
  var _ref4 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee4(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context4.next = 4;
            return Object(models_announcement_operation_get_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_3__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              page: req.query.page,
              language: req.query.language
            });

          case 4:
            result = _context4.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function (_x7, _x8) {
    return _ref4.apply(this, arguments);
  };
}());
apis.get(/^\/tags-pages$/,
/*#__PURE__*/
function () {
  var _ref5 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee5(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context5.next = 4;
            return Object(models_announcement_operation_get_pages_by_tags_js__WEBPACK_IMPORTED_MODULE_7__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime
            });

          case 4:
            result = _context5.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.pageNumber)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));

  return function (_x9, _x10) {
    return _ref5.apply(this, arguments);
  };
}());
apis.get(/^\/tags-pinned$/,
/*#__PURE__*/
function () {
  var _ref6 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee6(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context6.next = 4;
            return Object(models_announcement_operation_get_pinned_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_5__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              language: req.query.language
            });

          case 4:
            result = _context6.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));

  return function (_x11, _x12) {
    return _ref6.apply(this, arguments);
  };
}());
apis.get(/^\/all-languages\/(\d+)$/,
/*#__PURE__*/
function () {
  var _ref7 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee7(req, res) {
    return regeneratorRuntime.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.prev = 0;
            _context7.t0 = res;
            _context7.next = 4;
            return Object(models_announcement_operation_get_announcement_all_languages_js__WEBPACK_IMPORTED_MODULE_9__["default"])({
              announcementId: req.params[0]
            });

          case 4:
            _context7.t1 = _context7.sent;

            _context7.t0.json.call(_context7.t0, _context7.t1);

            _context7.next = 11;
            break;

          case 8:
            _context7.prev = 8;
            _context7.t2 = _context7["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(404).end();

          case 11:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, this, [[0, 8]]);
  }));

  return function (_x13, _x14) {
    return _ref7.apply(this, arguments);
  };
}());
apis.get(/^\/(\d+)$/,
/*#__PURE__*/
function () {
  var _ref8 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee8(req, res) {
    return regeneratorRuntime.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.prev = 0;
            _context8.t0 = res;
            _context8.next = 4;
            return Object(models_announcement_operation_get_announcement_js__WEBPACK_IMPORTED_MODULE_8__["default"])({
              announcementId: req.params[0],
              language: req.query.language
            });

          case 4:
            _context8.t1 = _context8.sent;

            _context8.t0.json.call(_context8.t0, _context8.t1);

            _context8.next = 11;
            break;

          case 8:
            _context8.prev = 8;
            _context8.t2 = _context8["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(404).end();

          case 11:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, this, [[0, 8]]);
  }));

  return function (_x15, _x16) {
    return _ref8.apply(this, arguments);
  };
}());
apis.post('/',
/*#__PURE__*/
function () {
  var _ref9 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee9(req, res) {
    return regeneratorRuntime.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.prev = 0;
            _context9.t0 = res;
            _context9.next = 4;
            return Object(models_announcement_operation_post_announcement_js__WEBPACK_IMPORTED_MODULE_10__["default"])({
              announcementData: req.body
            });

          case 4:
            _context9.t1 = _context9.sent;

            _context9.t0.json.call(_context9.t0, _context9.t1);

            _context9.next = 11;
            break;

          case 8:
            _context9.prev = 8;
            _context9.t2 = _context9["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9, this, [[0, 8]]);
  }));

  return function (_x17, _x18) {
    return _ref9.apply(this, arguments);
  };
}());
apis.patch('/:id',
/*#__PURE__*/
function () {
  var _ref10 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee10(req, res) {
    return regeneratorRuntime.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.prev = 0;
            _context10.t0 = res;
            _context10.next = 4;
            return Object(models_announcement_operation_patch_announcement_js__WEBPACK_IMPORTED_MODULE_13__["default"])({
              announcementId: req.params.id,
              announcementData: req.body
            });

          case 4:
            _context10.t1 = _context10.sent;

            _context10.t0.json.call(_context10.t0, _context10.t1);

            _context10.next = 11;
            break;

          case 8:
            _context10.prev = 8;
            _context10.t2 = _context10["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10, this, [[0, 8]]);
  }));

  return function (_x19, _x20) {
    return _ref10.apply(this, arguments);
  };
}());
apis.delete('/:id',
/*#__PURE__*/
function () {
  var _ref11 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee11(req, res) {
    return regeneratorRuntime.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _context11.prev = 0;
            _context11.t0 = res;
            _context11.next = 4;
            return Object(models_announcement_operation_delete_announcements_js__WEBPACK_IMPORTED_MODULE_14__["default"])({
              announcementId: req.params.id
            });

          case 4:
            _context11.t1 = _context11.sent;

            _context11.t0.json.call(_context11.t0, _context11.t1);

            _context11.next = 11;
            break;

          case 8:
            _context11.prev = 8;
            _context11.t2 = _context11["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11, this, [[0, 8]]);
  }));

  return function (_x21, _x22) {
    return _ref11.apply(this, arguments);
  };
}()); // TODO: Not yet finished

apis.post('/:id/file',
/*#__PURE__*/
function () {
  var _ref12 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee12(req, res) {
    return regeneratorRuntime.wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.prev = 0;
            _context12.t0 = res;
            _context12.next = 4;
            return Object(models_announcement_operation_post_announcementFile_js__WEBPACK_IMPORTED_MODULE_12__["default"])({
              announcementFileData: req.body
            });

          case 4:
            _context12.t1 = _context12.sent;

            _context12.t0.json.call(_context12.t0, _context12.t1);

            _context12.next = 11;
            break;

          case 8:
            _context12.prev = 8;
            _context12.t2 = _context12["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12, this, [[0, 8]]);
  }));

  return function (_x23, _x24) {
    return _ref12.apply(this, arguments);
  };
}()); // TODO: Not yet finished

apis.delete('/:id/file/:id',
/*#__PURE__*/
function () {
  var _ref13 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee13(req, res) {
    return regeneratorRuntime.wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            _context13.prev = 0;
            _context13.t0 = res;
            _context13.next = 4;
            return Object(models_announcement_operation_delete_announcementFiles_js__WEBPACK_IMPORTED_MODULE_16__["default"])({
              announcementFileData: req.body
            });

          case 4:
            _context13.t1 = _context13.sent;

            _context13.t0.json.call(_context13.t0, _context13.t1);

            _context13.next = 11;
            break;

          case 8:
            _context13.prev = 8;
            _context13.t2 = _context13["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13, this, [[0, 8]]);
  }));

  return function (_x25, _x26) {
    return _ref13.apply(this, arguments);
  };
}());
apis.post('/:id/tags',
/*#__PURE__*/
function () {
  var _ref14 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee14(req, res) {
    return regeneratorRuntime.wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            _context14.prev = 0;
            _context14.t0 = res;
            _context14.next = 4;
            return Object(models_announcement_operation_post_announcementTags_js__WEBPACK_IMPORTED_MODULE_11__["default"])({
              announcementId: req.params.id,
              tagId: req.body
            });

          case 4:
            _context14.t1 = _context14.sent;

            _context14.t0.json.call(_context14.t0, _context14.t1);

            _context14.next = 11;
            break;

          case 8:
            _context14.prev = 8;
            _context14.t2 = _context14["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14, this, [[0, 8]]);
  }));

  return function (_x27, _x28) {
    return _ref14.apply(this, arguments);
  };
}());
apis.delete('/:id/tags',
/*#__PURE__*/
function () {
  var _ref15 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee15(req, res) {
    var tagId;
    return regeneratorRuntime.wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            tagId = req.query.tagId.split(',').map(function (s) {
              return Number.parseInt(s, 10);
            });
            _context15.prev = 1;
            _context15.t0 = res;
            _context15.next = 5;
            return Object(models_announcement_operation_delete_announcementTags_js__WEBPACK_IMPORTED_MODULE_15__["default"])({
              announcementId: req.params.id,
              tagId: tagId
            });

          case 5:
            _context15.t1 = _context15.sent;

            _context15.t0.json.call(_context15.t0, _context15.t1);

            _context15.next = 12;
            break;

          case 9:
            _context15.prev = 9;
            _context15.t2 = _context15["catch"](1);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 12:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15, this, [[1, 9]]);
  }));

  return function (_x29, _x30) {
    return _ref15.apply(this, arguments);
  };
}());
/* harmony default export */ __webpack_exports__["default"] = (apis);

/***/ }),

/***/ "./apis/faculty.js":
/*!*************************!*\
  !*** ./apis/faculty.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_faculty_operation_get_faculty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/faculty/operation/get-faculty.js */ "./models/faculty/operation/get-faculty.js");
/* harmony import */ var models_faculty_operation_get_faculty_detail_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! models/faculty/operation/get-faculty-detail.js */ "./models/faculty/operation/get-faculty-detail.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




var apis = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
apis.get(/^\/$/,
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(req, res) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = res;
            _context.next = 3;
            return Object(models_faculty_operation_get_faculty_js__WEBPACK_IMPORTED_MODULE_1__["default"])(req.query.language);

          case 3:
            _context.t1 = _context.sent;

            _context.t0.json.call(_context.t0, _context.t1);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}());
apis.get(/^\/(\d+)$/,
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee2(req, res) {
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.t0 = res;
            _context2.next = 3;
            return Object(models_faculty_operation_get_faculty_detail_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
              profileId: req.params[0],
              language: req.query.language
            });

          case 3:
            _context2.t1 = _context2.sent;

            _context2.t0.json.call(_context2.t0, _context2.t1);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function (_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}());
/* harmony default export */ __webpack_exports__["default"] = (apis);

/***/ }),

/***/ "./apis/urls.js":
/*!**********************!*\
  !*** ./apis/urls.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var apis_announcement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! apis/announcement.js */ "./apis/announcement.js");
/* harmony import */ var apis_faculty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! apis/faculty.js */ "./apis/faculty.js");



var apis = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL /api/announcement

apis.use('/announcement', apis_announcement_js__WEBPACK_IMPORTED_MODULE_1__["default"]); // Resolve URL /api/faculty

apis.use('/faculty', apis_faculty_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (apis);

/***/ }),

/***/ "./models/announcement/operation/associations.js":
/*!*******************************************************!*\
  !*** ./models/announcement/operation/associations.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "path");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
/* harmony import */ var settings_database_connect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! settings/database/connect.js */ "./settings/database/connect.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var announcementDatabase, tablesRoot, table;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return Object(settings_database_connect_js__WEBPACK_IMPORTED_MODULE_2__["default"])('announcement');

        case 2:
          announcementDatabase = _context.sent;
          tablesRoot = path__WEBPACK_IMPORTED_MODULE_0___default.a.join(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, 'models/announcement/tables');
          table = {
            announcementFileI18n: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_file_i18n')),
            announcementFile: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_file')),
            announcementI18n: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_i18n')),
            announcement: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement')),
            announcementTag: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_tag')),
            tagI18n: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'tag_i18n')),
            tag: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'tag'))
          }; // Translation relationship.
          // `announcement` has many translations.

          table.announcement.hasMany(table.announcementI18n, {
            as: 'announcementI18n',
            foreignKey: 'announcementId',
            sourceKey: 'announcementId',
            onDelete: 'CASCADE'
          }); // `announcementFile` has many translations.

          table.announcementFile.hasMany(table.announcementFileI18n, {
            as: 'announcementFileI18n',
            foreignKey: 'fileId',
            sourceKey: 'fileId',
            onDelete: 'CASCADE'
          }); // `tag` has many translations.

          table.tag.hasMany(table.tagI18n, {
            as: 'tagI18n',
            foreignKey: 'tagId',
            sourceKey: 'tagId',
            onDelete: 'CASCADE'
          }); // Announcement relationship.
          // `announcement` has many `file`.

          table.announcement.hasMany(table.announcementFile, {
            as: 'announcementFile',
            foreignKey: 'announcementId',
            sourceKey: 'announcementId',
            onDelete: 'CASCADE'
          }); // `announcement` has many `announcementTag`.

          table.announcement.hasMany(table.announcementTag, {
            as: 'announcementTag',
            foreignKey: 'announcementId',
            sourceKey: 'announcementId',
            onDelete: 'CASCADE'
          }); // `announcementTag` has many `tagI18n`.

          table.announcementTag.hasMany(table.tagI18n, {
            as: 'tagI18n',
            foreignKey: 'tagId',
            sourceKey: 'tagId',
            onDelete: 'CASCADE'
          }); // Any one who use this module should remember to close connection,
          // like `table.database.close()`.

          table.database = announcementDatabase;
          return _context.abrupt("return", table);

        case 13:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/delete-announcementFiles.js":
/*!*******************************************************************!*\
  !*** ./models/announcement/operation/delete-announcementFiles.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$language,
      language,
      fileId,
      table,
      rowCount,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? 'zh-TW' : _ref2$language, fileId = _ref2.fileId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcementI18n.destroy({
            where: {
              language: language,
              fileId: fileId
            }
          }).then(function (rowCount) {
            return rowCount;
          });

        case 6:
          rowCount = _context.sent;
          table.database.close();
          return _context.abrupt("return", rowCount);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/delete-announcementTags.js":
/*!******************************************************************!*\
  !*** ./models/announcement/operation/delete-announcementTags.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      tagId,
      table,
      rowCount,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementId = _ref2.announcementId, tagId = _ref2.tagId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcementTag.destroy({
            where: {
              announcementId: announcementId,
              tagId: tagId
            }
          }).then(function (rowCount) {
            return rowCount;
          });

        case 6:
          rowCount = _context.sent;
          table.database.close();
          return _context.abrupt("return", rowCount);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/delete-announcements.js":
/*!***************************************************************!*\
  !*** ./models/announcement/operation/delete-announcements.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      table,
      rowCount,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementId = _ref2.announcementId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcement.destroy({
            where: {
              announcementId: announcementId
            }
          }).then(function (rowCount) {
            return rowCount;
          });

        case 6:
          rowCount = _context.sent;
          table.database.close();
          return _context.abrupt("return", rowCount);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-all-announcements.js":
/*!****************************************************************!*\
  !*** ./models/announcement/operation/get-all-announcements.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$page,
      page,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].page : _ref2$page, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidPage(page)) {
            _context.next = 12;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid page'
          });

        case 12:
          _context.next = 14;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 14:
          table = _context.sent;
          data = [];

          if (!(tags.length === 0)) {
            _context.next = 22;
            break;
          }

          _context.next = 19;
          return table.announcement.findAll({
            attributes: ['announcementId', 'updateTime'],
            where: {
              updateTime: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              isPublished: 1,
              isApproved: 1
            },
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content'],
              where: {
                language: language
              }
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              attributes: ['tagId'],
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['name'],
                where: {
                  language: 'en-US'
                }
              }]
            }],
            offset: (page - 1) * settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
            limit: settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 19:
          data = _context.sent;
          _context.next = 25;
          break;

        case 22:
          _context.next = 24;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, tags),
              'updateTime': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }]
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              offset: (page - 1) * settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              limit: settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 24:
          data = _context.sent;

        case 25:
          table.database.close();
          return _context.abrupt("return", data);

        case 27:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-all-pages.js":
/*!********************************************************!*\
  !*** ./models/announcement/operation/get-all-pages.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      table,
      count,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          count = 0;

          if (!(tags.length === 0)) {
            _context.next = 20;
            break;
          }

          _context.next = 17;
          return table.announcement.count({
            where: {
              updateTime: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              isPublished: 1,
              isApproved: 1
            }
          });

        case 17:
          count = _context.sent;
          _context.next = 23;
          break;

        case 20:
          _context.next = 22;
          return table.announcement.count({
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, tags),
              'updateTime': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n'
              }]
            }],
            distinct: true
          });

        case 22:
          count = _context.sent;

        case 23:
          table.database.close();
          return _context.abrupt("return", {
            pageNumber: Math.ceil(count / settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage)
          });

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-all-pinned-announcements.js":
/*!***********************************************************************!*\
  !*** ./models/announcement/operation/get-all-pinned-announcements.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          data = [];

          if (!(tags.length === 0)) {
            _context.next = 20;
            break;
          }

          _context.next = 17;
          return table.announcement.findAll({
            attributes: ['announcementId', 'updateTime'],
            where: {
              updateTime: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              isPinned: 1,
              isPublished: 1,
              isApproved: 1
            },
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content'],
              where: {
                language: language
              }
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              attributes: ['tagId'],
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['name'],
                where: {
                  language: 'en-US'
                }
              }]
            }]
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 17:
          data = _context.sent;
          _context.next = 23;
          break;

        case 20:
          _context.next = 22;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, tags),
              'updateTime': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              'isPinned': 1,
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }]
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 22:
          data = _context.sent;

        case 23:
          table.database.close();
          return _context.abrupt("return", data);

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-announcement-all-languages.js":
/*!*************************************************************************!*\
  !*** ./models/announcement/operation/get-announcement-all-languages.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$announcementId,
      announcementId,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$announcementId = _ref2.announcementId, announcementId = _ref2$announcementId === void 0 ? 1 : _ref2$announcementId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcement.findOne({
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content']
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['tagId', 'name'],
                where: {
                  language: 'en-US'
                }
              }]
            }, {
              model: table.announcementFile,
              as: 'announcementFile',
              include: [{
                model: table.announcementFileI18n,
                as: 'announcementFileI18n',
                attributes: ['url', 'name']
              }],
              attributes: ['type', 'uploadTime']
            }],
            attributes: ['announcementId', 'author', 'updateTime', 'views', 'isPinned', 'isPublished'],
            where: {
              announcementId: announcementId
            }
          }).then(function (announcement) {
            return {
              'id': announcement.announcementId,
              'author': announcement.author,
              'updateTime': announcement.updateTime,
              'views': announcement.views,
              'isPinned': announcement.isPinned,
              'isPublished': announcement.isPublished,
              'en-US': {
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content
              },
              'zh-TW': {
                title: announcement.announcementI18n[1].title,
                content: announcement.announcementI18n[1].content
              },
              'files': announcement.announcementFile.map(function (announcementFile) {
                return {
                  uploadTime: announcementFile.uploadTime,
                  type: announcementFile.type,
                  url: announcementFile.announcementFileI18n[0].url,
                  name: announcementFile.announcementFileI18n[0].name
                };
              }),
              'tags': announcement.announcementTag.map(function (announcementTag) {
                return announcementTag.tagI18n[0].name;
              })
            };
          });

        case 6:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-announcement.js":
/*!***********************************************************!*\
  !*** ./models/announcement/operation/get-announcement.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$language,
      language,
      _ref2$announcementId,
      announcementId,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].language : _ref2$language, _ref2$announcementId = _ref2.announcementId, announcementId = _ref2$announcementId === void 0 ? 1 : _ref2$announcementId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcement.findOne({
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content'],
              where: {
                language: language
              }
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['tagId', 'name'],
                where: {
                  language: 'en-US'
                }
              }]
            }, {
              model: table.announcementFile,
              as: 'announcementFile',
              include: [{
                model: table.announcementFileI18n,
                as: 'announcementFileI18n',
                attributes: ['url', 'name'],
                where: {
                  language: language
                }
              }],
              attributes: ['type', 'uploadTime']
            }],
            attributes: ['announcementId', 'author', 'publishTime', 'updateTime', 'views', 'isPinned'],
            where: {
              announcementId: announcementId
            }
          }).then(function (announcement) {
            return {
              id: announcement.announcementId,
              title: announcement.announcementI18n[0].title,
              content: announcement.announcementI18n[0].content,
              author: announcement.author,
              publishTime: announcement.publishTime,
              updateTime: announcement.updateTime,
              views: announcement.views,
              isPinned: announcement.isPinned,
              files: announcement.announcementFile.map(function (announcementFile) {
                return {
                  uploadTime: announcementFile.uploadTime,
                  type: announcementFile.type,
                  url: announcementFile.announcementFileI18n[0].url,
                  name: announcementFile.announcementFileI18n[0].name
                };
              }),
              tags: announcement.announcementTag.map(function (announcementTag) {
                return {
                  id: announcementTag.tagI18n[0].tagId,
                  name: announcementTag.tagI18n[0].name
                };
              })
            };
          });

        case 6:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-announcements-by-tags.js":
/*!********************************************************************!*\
  !*** ./models/announcement/operation/get-announcements-by-tags.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var Op = sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.Op;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$page,
      page,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].page : _ref2$page, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidPage(page)) {
            _context.next = 12;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid page'
          });

        case 12:
          _context.next = 14;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 14:
          table = _context.sent;

          if (!(page <= 0)) {
            _context.next = 17;
            break;
          }

          return _context.abrupt("return", []);

        case 17:
          _context.next = 19;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, Op.in, tags),
              'updateTime': _defineProperty({}, Op.between, [new Date(startTime), new Date(endTime)]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }],
            group: 'announcementId',
            having: sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.literal("count(*) = ".concat(tags.length))
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, Op.in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              offset: (page - 1) * settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              limit: settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 19:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 22:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-pages-by-tags.js":
/*!************************************************************!*\
  !*** ./models/announcement/operation/get-pages-by-tags.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var Op = sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.Op;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      table,
      count,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          _context.next = 15;
          return table.announcement.count({
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, Op.in, tags),
              'updateTime': _defineProperty({}, Op.between, [new Date(startTime), new Date(endTime)]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n'
              }]
            }],
            group: '`announcement`.`announcement_id`',
            having: sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.literal("count(*) = ".concat(tags.length))
          }).then(function (count) {
            return count.length;
          });

        case 15:
          count = _context.sent;
          table.database.close();
          return _context.abrupt("return", {
            pageNumber: Math.ceil(count / settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage)
          });

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-pinned-announcements-by-tags.js":
/*!***************************************************************************!*\
  !*** ./models/announcement/operation/get-pinned-announcements-by-tags.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var Op = sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.Op;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2___default.a.isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          _context.next = 15;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, Op.in, tags),
              'updateTime': _defineProperty({}, Op.between, [new Date(startTime), new Date(endTime)]),
              'isPinned': 1,
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }],
            group: 'announcementId',
            having: sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.literal("count(*) = ".concat(tags.length))
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, Op.in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 15:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/patch-announcement.js":
/*!*************************************************************!*\
  !*** ./models/announcement/operation/patch-announcement.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      announcementData,
      table,
      i18n,
      result,
      _loop,
      i,
      _args2 = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _ref2 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, announcementId = _ref2.announcementId, announcementData = _ref2.announcementData;
          _context2.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context2.sent;
          i18n = announcementData.announcementI18n;
          delete announcementData.announcementI18n; // Initialize result object

          result = {};
          result.i18n = {};
          result.i18n.affectedCount = {};
          _loop =
          /*#__PURE__*/
          regeneratorRuntime.mark(function _loop(i) {
            return regeneratorRuntime.wrap(function _loop$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return table.announcementI18n.update(i18n[i], {
                      where: {
                        language: i18n[i].language,
                        announcementId: announcementId
                      }
                    }).then(function (count) {
                      result.i18n.affectedCount[i18n[i].language] = count;
                    });

                  case 2:
                  case "end":
                    return _context.stop();
                }
              }
            }, _loop, this);
          });
          i = 0;

        case 11:
          if (!(i < i18n.length)) {
            _context2.next = 16;
            break;
          }

          return _context2.delegateYield(_loop(i), "t0", 13);

        case 13:
          i++;
          _context2.next = 11;
          break;

        case 16:
          _context2.next = 18;
          return table.announcement.update(announcementData, {
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n'
            }],
            where: {
              announcementId: announcementId
            }
          }).then(function (count) {
            result.affectedCount = count;
          });

        case 18:
          table.database.close();
          return _context2.abrupt("return", result);

        case 20:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/post-announcement.js":
/*!************************************************************!*\
  !*** ./models/announcement/operation/post-announcement.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/language/config.js */ "./settings/language/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




function isLangExist(data, language) {
  for (var i = 0; i < data.length; i++) {
    if (data[i].language === language) return true;
  }

  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementData,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementData = _ref2.announcementData;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].support.forEach(function (lang) {
            if (!isLangExist(announcementData.announcementI18n, lang)) throw new Error("Missing language for announcementI18n: ".concat(lang));
            announcementData.announcementFile.forEach(function (file) {
              if (!isLangExist(file.announcementFileI18n, lang)) throw new Error("Missing language for announcementFileI18n: ".concat(lang));
            });
          });
          _context.next = 7;
          return table.announcement.create(announcementData, {
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n'
            }, {
              model: table.announcementTag,
              as: 'announcementTag'
            }, {
              model: table.announcementFile,
              as: 'announcementFile',
              include: [{
                model: table.announcementFileI18n,
                as: 'announcementFileI18n'
              }]
            }]
          }).then(function (announcement) {
            return {
              id: announcement.announcementId,
              title: announcement.announcementI18n[0].title,
              content: announcement.announcementI18n[0].content,
              author: announcement.author,
              publishTime: announcement.publishTime,
              updateTime: announcement.updateTime,
              views: announcement.views,
              isPinned: announcement.isPinned,
              files: announcement.announcementFile.map(function (announcementFile) {
                return {
                  uploadTime: announcementFile.uploadTime,
                  type: announcementFile.type,
                  url: announcementFile.announcementFileI18n[0].url,
                  name: announcementFile.announcementFileI18n[0].name
                };
              }),
              tags: announcement.announcementTag.map(function (announcementTag) {
                return {
                  id: announcementTag.tagId
                };
              })
            };
          });

        case 7:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/post-announcementFile.js":
/*!****************************************************************!*\
  !*** ./models/announcement/operation/post-announcementFile.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/language/config.js */ "./settings/language/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




function isLangExist(data, language) {
  for (var i = 0; i < data.length; i++) {
    if (data[i].language === language) return true;
  }

  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementFileData,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementFileData = _ref2.announcementFileData;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].support.forEach(function (lang) {
            if (!isLangExist(announcementFileData.announcementFileI18n, lang)) throw new Error("Missing language for announcementFileI18n: ".concat(lang));
          });
          _context.next = 7;
          return table.announcementFile.create(announcementFileData, {
            include: [{
              model: table.announcementFileI18n,
              as: 'announcementFileI18n'
            }]
          }).then(function (announcementFile) {
            return {
              uploadTime: announcementFile.uploadTime,
              type: announcementFile.type,
              url: announcementFile.announcementFileI18n[0].url,
              name: announcementFile.announcementFileI18n[0].name
            };
          });

        case 7:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/post-announcementTags.js":
/*!****************************************************************!*\
  !*** ./models/announcement/operation/post-announcementTags.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      tagId,
      table,
      announcementTagData,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementId = _ref2.announcementId, tagId = _ref2.tagId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          announcementTagData = tagId.map(function (id) {
            return {
              announcementId: announcementId,
              tagId: id
            };
          });
          _context.next = 7;
          return table.announcementTag.bulkCreate(announcementTagData).then(function (announcementTags) {
            return announcementTags.map(function (announcementTag) {
              return {
                announcementId: announcementTag.announcementId,
                tagId: announcementTag.tagId
              };
            });
          });

        case 7:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/faculty/operation/associations.js":
/*!**************************************************!*\
  !*** ./models/faculty/operation/associations.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
/* harmony import */ var settings_database_connect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/database/connect.js */ "./settings/database/connect.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var teacherDatabase, table;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return Object(settings_database_connect_js__WEBPACK_IMPORTED_MODULE_1__["default"])('faculty');

        case 2:
          teacherDatabase = _context.sent;
          table = {
            conferenceI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/conference_i18n")),
            conference: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/conference")),
            departmentI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/department_i18n")),
            department: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/department")),
            educationI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/education_i18n")),
            education: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/education")),
            experienceI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/experience_i18n")),
            experience: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/experience")),
            honorI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/honor_i18n")),
            honor: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/honor")),
            labI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/lab_i18n")),
            lab: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/lab")),
            officeI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/office_i18n")),
            office: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/office")),
            patentI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/patent_i18n")),
            patent: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/patent")),
            profileI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/profile_i18n")),
            profile: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/profile")),
            projectI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/project_i18n")),
            project: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/project")),
            publicationI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/publication_i18n")),
            publication: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/publication")),
            specialty: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/specialty")),
            technologyTransfer: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/technology_transfer")),
            technologyTransferI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/technology_transfer_i18n")),
            titleI18n: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/title_i18n")),
            title: teacherDatabase.import("".concat(projectRoot, "/models/faculty/tables/title"))
          }; // Translation relationship.
          // `conference` has many translations.

          table.conference.hasMany(table.conferenceI18n, {
            as: 'conferenceI18n',
            foreignKey: 'conferenceId',
            sourceKey: 'conferenceId'
          }); // `department` has many translations.

          table.department.hasMany(table.departmentI18n, {
            as: 'departmentI18n',
            foreignKey: 'departmentId',
            sourceKey: 'departmentId'
          }); // `education` has many translations.

          table.education.hasMany(table.educationI18n, {
            as: 'educationI18n',
            foreignKey: 'educationId',
            sourceKey: 'educationId'
          }); // `experience` has many translations.

          table.experience.hasMany(table.experienceI18n, {
            as: 'experienceI18n',
            foreignKey: 'experienceId',
            sourceKey: 'experienceId'
          }); // `honor` has many translations.

          table.honor.hasMany(table.honorI18n, {
            as: 'honorI18n',
            foreignKey: 'honorId',
            sourceKey: 'honorId'
          }); // `lab` has many translations.

          table.lab.hasMany(table.labI18n, {
            as: 'labI18n',
            foreignKey: 'labId',
            sourceKey: 'labId'
          }); // `office` has many translations.

          table.office.hasMany(table.officeI18n, {
            as: 'officeI18n',
            foreignKey: 'officeId',
            sourceKey: 'officeId'
          }); // `patent` has many translations.

          table.patent.hasMany(table.patentI18n, {
            as: 'patentI18n',
            foreignKey: 'patentId',
            sourceKey: 'patentId'
          }); // `profile` has many translations.

          table.profile.hasMany(table.profileI18n, {
            as: 'profileI18n',
            foreignKey: 'profileId',
            sourceKey: 'profileId'
          }); // `project` has many translations.

          table.project.hasMany(table.projectI18n, {
            as: 'projectI18n',
            foreignKey: 'projectId',
            sourceKey: 'projectId'
          }); // `publication` has many translations.

          table.publication.hasMany(table.publicationI18n, {
            as: 'publicationI18n',
            foreignKey: 'publicationId',
            sourceKey: 'publicationId'
          }); // `technologyTransfer` has many translations.

          table.technologyTransfer.hasMany(table.technologyTransferI18n, {
            as: 'technologyTransferI18n',
            foreignKey: 'technologyTransferId',
            sourceKey: 'technologyTransferId'
          }); // `title` has many translations.

          table.title.hasMany(table.titleI18n, {
            as: 'titleI18n',
            foreignKey: 'titleId',
            sourceKey: 'titleId'
          }); // Profile relationship.
          // `profile` has many `conference`.

          table.profile.hasMany(table.conference, {
            as: 'conference',
            foreignKey: 'conferenceId',
            sourceKey: 'profileId'
          }); // `profile` has many `department`.

          table.profile.hasMany(table.department, {
            as: 'department',
            foreignKey: 'departmentId',
            sourceKey: 'profileId'
          }); // `profile` has many `education`.

          table.profile.hasMany(table.education, {
            as: 'education',
            foreignKey: 'educationId',
            sourceKey: 'profileId'
          }); // `profile` has many `experience`.

          table.profile.hasMany(table.experience, {
            as: 'experience',
            foreignKey: 'experienceId',
            sourceKey: 'profileId'
          }); // `profile` has many `honor`.

          table.profile.hasMany(table.honor, {
            as: 'honor',
            foreignKey: 'honorId',
            sourceKey: 'profileId'
          }); // `profile` has many `lab`.

          table.profile.hasMany(table.lab, {
            as: 'lab',
            foreignKey: 'labId',
            sourceKey: 'profileId'
          }); // `profile` has many `office`.

          table.profile.hasMany(table.office, {
            as: 'office',
            foreignKey: 'officeId',
            sourceKey: 'profileId'
          }); // `profile` has many `patent`.

          table.profile.hasMany(table.patent, {
            as: 'patent',
            foreignKey: 'patentId',
            sourceKey: 'profileId'
          }); // `profile` has many `project`.

          table.profile.hasMany(table.project, {
            as: 'project',
            foreignKey: 'projectId',
            sourceKey: 'profileId'
          }); // `profile` has many `publication`.

          table.profile.hasMany(table.publication, {
            as: 'publication',
            foreignKey: 'publicationId',
            sourceKey: 'profileId'
          }); // `profile` has many `specialty`.

          table.profile.hasMany(table.specialty, {
            as: 'specialty',
            foreignKey: 'specialtyId',
            sourceKey: 'profileId'
          }); // `profile` has many `technologyTransfer`.

          table.profile.hasMany(table.technologyTransfer, {
            as: 'technologyTransfer',
            foreignKey: 'technologyTransferId',
            sourceKey: 'profileId'
          }); // `profile` has many `title`.

          table.profile.hasMany(table.title, {
            as: 'title',
            foreignKey: 'titleId',
            sourceKey: 'profileId'
          }); // Any one who use this module should remember to close connection,
          // like `table.database.close()`.

          table.database = teacherDatabase;
          return _context.abrupt("return", table);

        case 32:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/faculty/operation/get-faculty-detail.js":
/*!********************************************************!*\
  !*** ./models/faculty/operation/get-faculty-detail.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/faculty/operation/associations.js */ "./models/faculty/operation/associations.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$language,
      language,
      _ref2$profileId,
      profileId,
      table,
      data,
      _ref3,
      _ref4,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? 'zh-TW' : _ref2$language, _ref2$profileId = _ref2.profileId, profileId = _ref2$profileId === void 0 ? 1 : _ref2$profileId;
          _context.next = 3;
          return Object(models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          data = {}; // Promise.all uses iterator, so it will keep the order of the elements in array that passed in

          _context.next = 7;
          return Promise.all([table.conference.findAll({
            include: [{
              model: table.conferenceI18n,
              as: 'conferenceI18n',
              attributes: ['conference'],
              where: {
                language: language
              }
            }],
            attributes: ['hostDate'],
            where: {
              profileId: profileId
            }
          }).then(function (conferences) {
            return conferences.map(function (conference) {
              return {
                hostDate: conference.hostDate,
                conference: conference.conferenceI18n[0].conference
              };
            });
          }), table.department.findAll({
            include: [{
              model: table.departmentI18n,
              as: 'departmentI18n',
              attributes: ['department'],
              where: {
                language: language
              }
            }],
            attributes: [],
            where: {
              profileId: profileId
            }
          }).then(function (departments) {
            return departments.map(function (department) {
              return {
                department: department.departmentI18n[0].department
              };
            });
          }), table.education.findAll({
            include: [{
              model: table.educationI18n,
              as: 'educationI18n',
              attributes: ['major', 'school'],
              where: {
                language: language
              }
            }],
            attributes: ['degree', 'endYear', 'nation', 'startYear'],
            where: {
              profileId: profileId
            }
          }).then(function (educations) {
            return educations.map(function (education) {
              return {
                degree: education.degree,
                endYear: education.endYear,
                nation: education.nation,
                startYear: education.startYear,
                major: education.educationI18n[0].major,
                school: education.educationI18n[0].school
              };
            });
          }), table.experience.findAll({
            include: [{
              model: table.experienceI18n,
              as: 'experienceI18n',
              attributes: ['department', 'organization', 'title'],
              where: {
                language: language
              }
            }],
            attributes: ['endYear', 'startYear'],
            where: {
              profileId: profileId
            }
          }).then(function (experiences) {
            return experiences.map(function (experience) {
              return {
                endYear: experience.endYear,
                startYear: experience.startYear,
                department: experience.experienceI18n[0].department,
                organization: experience.experienceI18n[0].organization,
                title: experience.experienceI18n[0].title
              };
            });
          }), table.honor.findAll({
            include: [{
              model: table.honorI18n,
              as: 'honorI18n',
              attributes: ['honor'],
              where: {
                language: language
              }
            }],
            attributes: ['honorYear'],
            where: {
              profileId: profileId
            }
          }).then(function (honors) {
            return honors.map(function (honor) {
              return {
                honorYear: honor.honorYear,
                honor: honor.honorI18n[0].honor
              };
            });
          }), table.lab.findAll({
            include: [{
              model: table.labI18n,
              as: 'labI18n',
              attributes: ['address', 'name'],
              where: {
                language: language
              }
            }],
            attributes: ['labWeb', 'tel'],
            where: {
              profileId: profileId
            }
          }).then(function (labs) {
            return labs.map(function (lab) {
              return {
                labWeb: lab.labWeb,
                tel: lab.tel,
                address: lab.labI18n[0].address,
                name: lab.labI18n[0].name
              };
            });
          }), table.office.findAll({
            include: [{
              model: table.officeI18n,
              as: 'officeI18n',
              attributes: ['address'],
              where: {
                language: language
              }
            }],
            attributes: ['tel'],
            where: {
              profileId: profileId
            }
          }).then(function (offices) {
            return offices.map(function (office) {
              return {
                tel: office.tel,
                address: office.officeI18n[0].address
              };
            });
          }), table.patent.findAll({
            include: [{
              model: table.patentI18n,
              as: 'patentI18n',
              attributes: ['inventor', 'patent', 'patentOwner'],
              where: {
                language: language
              }
            }],
            attributes: ['applicationDate', 'certificationNumber', 'expireDate', 'issueDate', 'nation', 'nscNumber'],
            where: {
              profileId: profileId
            }
          }).then(function (patents) {
            return patents.map(function (patent) {
              return {
                applicationDate: patent.applicationDate,
                certificationNumber: patent.certificationNumber,
                expireDate: patent.expireDate,
                issueDate: patent.issueDate,
                nation: patent.nation,
                nscNumber: patent.nscNumber,
                inventor: patent.patentI18n[0].inventor,
                patent: patent.patentI18n[0].patent,
                patentOwner: patent.patentI18n[0].patentOwner
              };
            });
          }), table.profile.findOne({
            include: [{
              model: table.profileI18n,
              as: 'profileI18n',
              attributes: ['name'],
              where: {
                language: language
              }
            }],
            attributes: ['email', 'fax', 'nation', 'personalWeb', 'photo', 'position'],
            where: {
              profileId: profileId
            }
          }).then(function (profile) {
            return {
              email: profile.email,
              fax: profile.fax,
              nation: profile.nation,
              personalWeb: profile.personalWeb,
              photo: profile.photo,
              position: profile.position,
              name: profile.profileI18n[0].name,
              profileId: profileId
            };
          }), table.project.findAll({
            include: [{
              model: table.projectI18n,
              as: 'projectI18n',
              attributes: ['name', 'support'],
              where: {
                language: language
              }
            }],
            attributes: ['category', 'endYear', 'startYear'],
            where: {
              profileId: profileId
            }
          }).then(function (projects) {
            return projects.map(function (project) {
              return {
                category: project.category,
                endYear: project.endYear,
                startYear: project.startYear,
                name: project.projectI18n[0].name,
                support: project.projectI18n[0].support
              };
            });
          }), table.publication.findAll({
            include: [{
              model: table.publicationI18n,
              as: 'publicationI18n',
              attributes: ['publication'],
              where: {
                language: language
              }
            }],
            attributes: ['category', 'issueYear'],
            where: {
              profileId: profileId
            }
          }).then(function (publications) {
            return publications.map(function (publication) {
              return {
                category: publication.category,
                issueYear: publication.issueYear,
                publication: publication.publicationI18n[0].publication
              };
            });
          }), table.specialty.findAll({
            attributes: ['specialty'],
            where: {
              profileId: profileId,
              language: language
            }
          }), table.technologyTransfer.findAll({
            include: [{
              model: table.technologyTransferI18n,
              as: 'technologyTransferI18n',
              attributes: ['authority', 'patent', 'receiver', 'technology'],
              where: {
                language: language
              }
            }],
            attributes: ['endDate', 'nscNumber', 'startDate'],
            where: {
              profileId: profileId
            }
          }).then(function (technologyTransfers) {
            return technologyTransfers.map(function (technologyTransfer) {
              return {
                endDate: technologyTransfer.endDate,
                nscNumber: technologyTransfer.nscNumber,
                startDate: technologyTransfer.startDate,
                authority: technologyTransfer.technologyTransferI18n[0].authority,
                patent: technologyTransfer.technologyTransferI18n[0].patent,
                receiver: technologyTransfer.technologyTransferI18n[0].receiver,
                technology: technologyTransfer.technologyTransferI18n[0].technology
              };
            });
          }), table.title.findAll({
            include: [{
              model: table.titleI18n,
              as: 'titleI18n',
              attributes: ['title'],
              where: {
                language: language
              }
            }],
            attributes: ['endDate', 'startDate'],
            where: {
              profileId: profileId
            }
          }).then(function (titles) {
            return titles.map(function (title) {
              return {
                endDate: title.endDate,
                startDate: title.startDate,
                title: title.titleI18n[0].title
              };
            });
          })]);

        case 7:
          _ref3 = _context.sent;
          _ref4 = _slicedToArray(_ref3, 14);
          data.conferences = _ref4[0];
          data.departments = _ref4[1];
          data.educations = _ref4[2];
          data.experiences = _ref4[3];
          data.honors = _ref4[4];
          data.labs = _ref4[5];
          data.offices = _ref4[6];
          data.patents = _ref4[7];
          data.profile = _ref4[8];
          data.projects = _ref4[9];
          data.publications = _ref4[10];
          data.specialties = _ref4[11];
          data.technologyTransfers = _ref4[12];
          data.titles = _ref4[13];
          table.database.close();
          return _context.abrupt("return", data);

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/faculty/operation/get-faculty.js":
/*!*************************************************!*\
  !*** ./models/faculty/operation/get-faculty.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/faculty/operation/associations.js */ "./models/faculty/operation/associations.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee2() {
  var language,
      table,
      data,
      _args2 = arguments;
  return regeneratorRuntime.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          language = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 'zh-TW';
          _context2.next = 3;
          return Object(models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context2.sent;
          _context2.next = 6;
          return table.profile.findAll({
            attributes: ['email', 'personalWeb', 'photo', 'position', 'profileId']
          }).then(function (profiles) {
            return Promise.all(profiles.map(
            /*#__PURE__*/
            function () {
              var _ref2 = _asyncToGenerator(
              /*#__PURE__*/
              regeneratorRuntime.mark(function _callee(profile) {
                var _ref3, _ref4, departments, offices, labs, profileI18n, titles;

                return regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return Promise.all([table.department.findAll({
                          include: [{
                            model: table.departmentI18n,
                            as: 'departmentI18n',
                            attributes: ['department'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: [],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (departments) {
                          return departments.map(function (department) {
                            return {
                              department: department.departmentI18n[0].department
                            };
                          });
                        }), table.office.findAll({
                          include: [{
                            model: table.officeI18n,
                            as: 'officeI18n',
                            attributes: ['address'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: ['tel'],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (offices) {
                          return offices.map(function (office) {
                            return {
                              tel: office.tel,
                              address: office.officeI18n[0].address
                            };
                          });
                        }), table.lab.findAll({
                          include: [{
                            model: table.labI18n,
                            as: 'labI18n',
                            attributes: ['name'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: ['labWeb'],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (labs) {
                          return labs.map(function (lab) {
                            return {
                              labWeb: lab.labWeb,
                              name: lab.labI18n[0].name
                            };
                          });
                        }), table.profileI18n.findOne({
                          attributes: ['name'],
                          where: {
                            language: language,
                            profileId: profile.profileId
                          }
                        }), table.title.findAll({
                          include: [{
                            model: table.titleI18n,
                            as: 'titleI18n',
                            attributes: ['title'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: ['endDate', 'startDate'],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (titles) {
                          return titles.map(function (title) {
                            return {
                              endDate: title.endDate,
                              startDate: title.startDate,
                              title: title.titleI18n[0].title
                            };
                          });
                        })]);

                      case 2:
                        _ref3 = _context.sent;
                        _ref4 = _slicedToArray(_ref3, 5);
                        departments = _ref4[0];
                        offices = _ref4[1];
                        labs = _ref4[2];
                        profileI18n = _ref4[3];
                        titles = _ref4[4];
                        return _context.abrupt("return", {
                          email: profile.email,
                          name: profileI18n.name,
                          personalWeb: profile.email,
                          photo: profile.photo,
                          position: profile.position,
                          profileId: profile.profileId,
                          titles: titles,
                          departments: departments,
                          offices: offices,
                          labs: labs
                        });

                      case 10:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, this);
              }));

              return function (_x) {
                return _ref2.apply(this, arguments);
              };
            }()));
          });

        case 6:
          data = _context2.sent;
          table.database.close();
          return _context2.abrupt("return", data);

        case 9:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2, this);
})));

/***/ }),

/***/ "./routes/about.js":
/*!*************************!*\
  !*** ./routes/about.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for `/about`


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/about`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/award`

router.get(/^\/award$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/award.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/contact`

router.get(/^\/contact$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/contact.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/intro`

router.get(/^\/intro$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/intro.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/faculty`

router.get(/^\/faculty$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/faculty.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/faculty/[id]`

router.get(/^\/faculty\/[0-9]+$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/faculty-detail.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/staff`

router.get(/^\/staff$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/about/staff.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/announcement.js":
/*!********************************!*\
  !*** ./routes/announcement.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /announcement


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/announcement`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/announcement/index.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/activity

router.get(/^\/activity$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/announcement/activity.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/all

router.get(/^\/all$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/announcement/all.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/recruitment

router.get(/^\/recruitment$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/announcement/recruitment.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/[id]

router.get(/^\/\d+$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/announcement/announcement.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/home.js":
/*!************************!*\
  !*** ./routes/home.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /home


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
}); // Route to login page

router.get('/login', function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
}); // Route to search page

router.get('/search', function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
}); // Route to calender page

router.get('/calendar', function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/research.js":
/*!****************************!*\
  !*** ./routes/research.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /research


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/research`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/research/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/research/groups`

router.get(/^\/groups$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/research/groups.").concat(req.query.language, ".html"));
}); // Resolve URL `/research/labs`

router.get(/^\/labs$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/research/labs.").concat(req.query.language, ".html"));
}); // Resolve URL `/research/publications`

router.get(/^\/publications$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/research/publications.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/resource.js":
/*!****************************!*\
  !*** ./routes/resource.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /resource


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/resource`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/index.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/rule`

router.get(/^\/rule$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/rule.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/rent`

router.get(/^\/rent$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/rent.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/fix`

router.get(/^\/fix$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/fix.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/ieet`

router.get(/^\/ieet$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/ieet.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/sitemap`

router.get(/^\/sitemap$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/sitemap.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/alumni`

router.get(/^\/alumni$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/resource/alumni.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/student.js":
/*!***************************!*\
  !*** ./routes/student.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /student


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/student`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/college`

router.get(/^\/college/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/college.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/course`

router.get(/^\/course$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/course.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/international`

router.get(/^\/international$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/international.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/international`

router.get(/^\/internship$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/internship.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/master`

router.get(/^\/master$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/master.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/phd`

router.get(/^\/phd$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/phd.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/scholarship`

router.get(/^\/scholarship$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/student/scholarship.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/urls.js":
/*!************************!*\
  !*** ./routes/urls.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var routes_home_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! routes/home.js */ "./routes/home.js");
/* harmony import */ var routes_student_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! routes/student.js */ "./routes/student.js");
/* harmony import */ var routes_about_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! routes/about.js */ "./routes/about.js");
/* harmony import */ var routes_research_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! routes/research.js */ "./routes/research.js");
/* harmony import */ var routes_announcement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! routes/announcement.js */ "./routes/announcement.js");
/* harmony import */ var routes_resource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! routes/resource.js */ "./routes/resource.js");
/* harmony import */ var routes_user_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! routes/user.js */ "./routes/user.js");








var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
router.use('/', routes_home_js__WEBPACK_IMPORTED_MODULE_1__["default"]); // Resolve URL /about

router.use('/about', routes_about_js__WEBPACK_IMPORTED_MODULE_3__["default"]); // Resolve URL /announcement

router.use('/announcement', routes_announcement_js__WEBPACK_IMPORTED_MODULE_5__["default"]); // Resolve URL /research

router.use('/research', routes_research_js__WEBPACK_IMPORTED_MODULE_4__["default"]); // Resolve URL /resource

router.use('/resource', routes_resource_js__WEBPACK_IMPORTED_MODULE_6__["default"]); // Resolve URL /student

router.use('/student', routes_student_js__WEBPACK_IMPORTED_MODULE_2__["default"]); // Resolve URL /user

router.use('/user', routes_user_js__WEBPACK_IMPORTED_MODULE_7__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/user.js":
/*!************************!*\
  !*** ./routes/user.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for `/user`


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Resolve URL `/user`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/user/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/profile`

router.get(/^\/profile$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/user/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/announcement`

router.get(/^\/announcement$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/user/announcement/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/announcement`

router.get(/^\/announcement\/add$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/user/announcement/add.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/announcement`

router.get(/^\/announcement\/edit\/(\d+)$/, function (req, res) {
  res.sendFile("".concat(projectRoot, "/static/dist/html/user/announcement/edit.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./server.js":
/*!*******************!*\
  !*** ./server.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
/* harmony import */ var settings_language_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! settings/language/middleware */ "./settings/language/middleware.js");
/* harmony import */ var apis_urls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! apis/urls */ "./apis/urls.js");
/* harmony import */ var routes_urls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! routes/urls */ "./routes/urls.js");





var projectRoot = settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot; // Start server.

var server = express__WEBPACK_IMPORTED_MODULE_0___default()();
server.listen(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].port); // Set static files routes.

server.use('/css', express__WEBPACK_IMPORTED_MODULE_0___default.a.static("".concat(projectRoot, "/static/dist/css")));
server.use('/js', express__WEBPACK_IMPORTED_MODULE_0___default.a.static("".concat(projectRoot, "/static/dist/js"))); // Set language option.

server.use(settings_language_middleware__WEBPACK_IMPORTED_MODULE_2__["default"]); // Set web server routes.

server.use('/', routes_urls__WEBPACK_IMPORTED_MODULE_4__["default"]); // Set web server api routes.

server.use('/api', apis_urls__WEBPACK_IMPORTED_MODULE_3__["default"]);

/***/ }),

/***/ "./settings/database/config.js":
/*!*************************************!*\
  !*** ./settings/database/config.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Database settings.
 * @namespace
 * @readonly {string} username - Database server user account.
 * @readonly {string} password - Database server user password.
 * @readonly {string} host     - Database server host address.
 * @readonly {number} port     - Database server port.
 * @readonly {string} protocol - Which database server is used.
 * @readonly {string} url      - Get database server url.
 */
var config = {};
Object.defineProperties(config, {
  'username': {
    value: 'nckucsie'
  },
  'password': {
    value: 'nckucsie@20180412'
  },
  'host': {
    value: '140.116.245.105'
  },
  'port': {
    value: 3306
  },
  'protocol': {
    value: 'mysql'
  },
  'url': {
    value: function value(databaseName) {
      return "".concat(this.protocol, "://").concat(this.username, ":").concat(this.password, "@").concat(this.host, ":").concat(this.port, "/").concat(databaseName);
    }
  }
});
module.exports = config;

/***/ }),

/***/ "./settings/database/connect.js":
/*!**************************************!*\
  !*** ./settings/database/connect.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ "./settings/database/config.js");
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_config_js__WEBPACK_IMPORTED_MODULE_1__);
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/(function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(databaseName) {
    var debug,
        database,
        _args = arguments;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            debug = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;
            database = new sequelize__WEBPACK_IMPORTED_MODULE_0___default.a(databaseName, _config_js__WEBPACK_IMPORTED_MODULE_1___default.a.username, _config_js__WEBPACK_IMPORTED_MODULE_1___default.a.password, {
              host: _config_js__WEBPACK_IMPORTED_MODULE_1___default.a.host,
              dialect: _config_js__WEBPACK_IMPORTED_MODULE_1___default.a.protocol,
              operatorsAliases: false,
              pool: _config_js__WEBPACK_IMPORTED_MODULE_1___default.a.pool,
              logging: debug,
              dialectOptions: {
                useUTC: false
              },
              timezone: '+08:00'
            });
            _context.prev = 2;
            _context.next = 5;
            return database.authenticate();

          case 5:
            _context.next = 11;
            break;

          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](2);
            console.error('Unable to connect to the database: ', _context.t0);
            throw new Error('database need to be checked.');

          case 11:
            return _context.abrupt("return", database);

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[2, 7]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})());

/***/ }),

/***/ "./settings/default-value/announcement/config.js":
/*!*******************************************************!*\
  !*** ./settings/default-value/announcement/config.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var defaultValue = {};
Object.defineProperties(defaultValue, {
  'startTime': {
    value: new Date('2018/07/01').toISOString()
  },
  'endTime': {
    get: function get() {
      return new Date(Date.now()).toISOString();
    }
  },
  'page': {
    value: 1
  },
  'langauge': {
    value: 'zh-TW'
  },
  'announcementsPerPage': {
    value: 6
  }
});
/* harmony default export */ __webpack_exports__["default"] = (defaultValue);

/***/ }),

/***/ "./settings/language/config.js":
/*!*************************************!*\
  !*** ./settings/language/config.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var language = {
  support: ['zh-TW', 'en-US'],
  default: 'zh-TW'
};
/* harmony default export */ __webpack_exports__["default"] = (language);

/***/ }),

/***/ "./settings/language/middleware.js":
/*!*****************************************!*\
  !*** ./settings/language/middleware.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var settings_language_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! settings/language/config.js */ "./settings/language/config.js");

/* harmony default export */ __webpack_exports__["default"] = (function (req, res, next) {
  // No language option provided, using default option.
  req.query.language = req.query.language || settings_language_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].default; // Invalid language option provided, response with error.

  if (!settings_language_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].support.includes(req.query.language))
    /* eslint no-magic-numbers: 'off' */
    res.status(400).send('invalid language option'); // Valid language option provided, call `next()` to continue routing.
  else next();
});

/***/ }),

/***/ "./settings/server/config.js":
/*!***********************************!*\
  !*** ./settings/server/config.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Web server settings
 * @namespace
 * @readonly {string} host        - Web server host address.
 * @readonly {string} protocol    - Whick protocol web server is using, can be either 'http' or 'https'.
 * @readonly {number} port        - Web server port.
 * @readonly {number} projectRoot - Project root path.
 * @readonly {string} url         - Get web server url.
 * @readonly {string} staticUrl   - Get static file server url.
 */
var config = {};
Object.defineProperties(config, {
  'host': {
    value: 'localhost'
  },
  'protocol': {
    value: 'http'
  },
  'port': {
    value: 3000
  },
  'projectRoot': {
    value: '/Users/profatxuanall/Desktop/NCKU-CSIE-Website'
  },
  'url': {
    get: function get() {
      return "".concat(config.protocol, "://").concat(config.host).concat(config.port === '80' || config.port === '443' ? '' : ":".concat(config.port));
    }
  },
  'staticUrl': {
    get: function get() {
      return config.url;
    }
  }
});
/* harmony default export */ __webpack_exports__["default"] = (config);

/***/ }),

/***/ "./test/models/announcement/operation/validate.js":
/*!********************************************************!*\
  !*** ./test/models/announcement/operation/validate.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var validTags = Object.freeze(['award', 'college', 'competition', 'conference', 'course', 'exhibition', 'faculty', 'international', 'internship', 'master', 'phd', 'recruitment', 'rule', 'scholarship', 'speech']);
module.exports = {
  isValidTags: function isValidTags(tags) {
    return tags.filter(function (tag) {
      return validTags.indexOf(tag) < 0;
    }).length === 0;
  },
  isValidDate: function isValidDate(date) {
    return date instanceof Date && !Number.isNaN(date);
  },
  isValidPage: function isValidPage(page) {
    return !Number.isNaN(Number(page)) && Number.isInteger(Number(page)) && Number(page) > 0;
  }
};

/***/ }),

/***/ 0:
/*!****************************************!*\
  !*** multi babel-polyfill ./server.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! babel-polyfill */"babel-polyfill");
module.exports = __webpack_require__(/*! /Users/profatxuanall/Desktop/NCKU-CSIE-Website/server.js */"./server.js");


/***/ }),

/***/ "babel-polyfill":
/*!*********************************!*\
  !*** external "babel-polyfill" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("babel-polyfill");

/***/ }),

/***/ "body-parser":
/*!******************************!*\
  !*** external "body-parser" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("body-parser");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("express");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),

/***/ "sequelize":
/*!****************************!*\
  !*** external "sequelize" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("sequelize");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,