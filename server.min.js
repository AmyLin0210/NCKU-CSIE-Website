/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./apis/announcement.js":
/*!******************************!*\
  !*** ./apis/announcement.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var body_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! body-parser */ "body-parser");
/* harmony import */ var body_parser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(body_parser__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var models_announcement_operation_get_all_announcements_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! models/announcement/operation/get-all-announcements.js */ "./models/announcement/operation/get-all-announcements.js");
/* harmony import */ var models_announcement_operation_get_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! models/announcement/operation/get-announcements-by-tags.js */ "./models/announcement/operation/get-announcements-by-tags.js");
/* harmony import */ var models_announcement_operation_get_all_pinned_announcements_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! models/announcement/operation/get-all-pinned-announcements.js */ "./models/announcement/operation/get-all-pinned-announcements.js");
/* harmony import */ var models_announcement_operation_get_pinned_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! models/announcement/operation/get-pinned-announcements-by-tags.js */ "./models/announcement/operation/get-pinned-announcements-by-tags.js");
/* harmony import */ var models_announcement_operation_get_all_pages_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! models/announcement/operation/get-all-pages.js */ "./models/announcement/operation/get-all-pages.js");
/* harmony import */ var models_announcement_operation_get_pages_by_tags_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! models/announcement/operation/get-pages-by-tags.js */ "./models/announcement/operation/get-pages-by-tags.js");
/* harmony import */ var models_announcement_operation_get_announcement_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! models/announcement/operation/get-announcement.js */ "./models/announcement/operation/get-announcement.js");
/* harmony import */ var models_announcement_operation_get_announcement_all_languages_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! models/announcement/operation/get-announcement-all-languages.js */ "./models/announcement/operation/get-announcement-all-languages.js");
/* harmony import */ var models_announcement_operation_post_announcement_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! models/announcement/operation/post-announcement.js */ "./models/announcement/operation/post-announcement.js");
/* harmony import */ var models_announcement_operation_post_announcementTags_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! models/announcement/operation/post-announcementTags.js */ "./models/announcement/operation/post-announcementTags.js");
/* harmony import */ var models_announcement_operation_post_announcementFile_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! models/announcement/operation/post-announcementFile.js */ "./models/announcement/operation/post-announcementFile.js");
/* harmony import */ var models_announcement_operation_patch_announcement_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! models/announcement/operation/patch-announcement.js */ "./models/announcement/operation/patch-announcement.js");
/* harmony import */ var models_announcement_operation_delete_announcements_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! models/announcement/operation/delete-announcements.js */ "./models/announcement/operation/delete-announcements.js");
/* harmony import */ var models_announcement_operation_delete_announcementTags_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! models/announcement/operation/delete-announcementTags.js */ "./models/announcement/operation/delete-announcementTags.js");
/* harmony import */ var models_announcement_operation_delete_announcementFiles_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! models/announcement/operation/delete-announcementFiles.js */ "./models/announcement/operation/delete-announcementFiles.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


















var apis = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
apis.use(body_parser__WEBPACK_IMPORTED_MODULE_1___default.a.json());
apis.get(/^\/all-announcement$/,
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context.next = 4;
            return Object(models_announcement_operation_get_all_announcements_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              page: req.query.page,
              language: req.query.language
            });

          case 4:
            result = _context.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}());
apis.get(/^\/all-pages$/,
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee2(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context2.next = 4;
            return Object(models_announcement_operation_get_all_pages_js__WEBPACK_IMPORTED_MODULE_6__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime
            });

          case 4:
            result = _context2.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.pageNumber)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function (_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}());
apis.get(/^\/all-pinned$/,
/*#__PURE__*/
function () {
  var _ref3 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee3(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context3.next = 4;
            return Object(models_announcement_operation_get_all_pinned_announcements_js__WEBPACK_IMPORTED_MODULE_4__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              language: req.query.language
            });

          case 4:
            result = _context3.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function (_x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}());
apis.get(/^\/tags-announcement$/,
/*#__PURE__*/
function () {
  var _ref4 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee4(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context4.next = 4;
            return Object(models_announcement_operation_get_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_3__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              page: req.query.page,
              language: req.query.language
            });

          case 4:
            result = _context4.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function (_x7, _x8) {
    return _ref4.apply(this, arguments);
  };
}());
apis.get(/^\/tags-pages$/,
/*#__PURE__*/
function () {
  var _ref5 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee5(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context5.next = 4;
            return Object(models_announcement_operation_get_pages_by_tags_js__WEBPACK_IMPORTED_MODULE_7__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime
            });

          case 4:
            result = _context5.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.pageNumber)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));

  return function (_x9, _x10) {
    return _ref5.apply(this, arguments);
  };
}());
apis.get(/^\/tags-pinned$/,
/*#__PURE__*/
function () {
  var _ref6 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee6(req, res) {
    var tags, result;
    return regeneratorRuntime.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            tags = req.query.tags;
            if (typeof tags === 'string') tags = Array.of(tags);
            _context6.next = 4;
            return Object(models_announcement_operation_get_pinned_announcements_by_tags_js__WEBPACK_IMPORTED_MODULE_5__["default"])({
              tags: tags,
              startTime: req.query.startTime,
              endTime: req.query.endTime,
              language: req.query.language
            });

          case 4:
            result = _context6.sent;
            if (result.error)
              /* eslint no-magic-numbers: 'off' */
              res.status(400).json(result);else if (!result.length)
              /* eslint no-magic-numbers: 'off' */
              res.status(404).end();else
              /* eslint no-magic-numbers: 'off' */
              res.status(200).json(result);

          case 6:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));

  return function (_x11, _x12) {
    return _ref6.apply(this, arguments);
  };
}());
apis.get(/^\/all-languages\/(\d+)$/,
/*#__PURE__*/
function () {
  var _ref7 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee7(req, res) {
    return regeneratorRuntime.wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            _context7.prev = 0;
            _context7.t0 = res;
            _context7.next = 4;
            return Object(models_announcement_operation_get_announcement_all_languages_js__WEBPACK_IMPORTED_MODULE_9__["default"])({
              announcementId: req.params[0]
            });

          case 4:
            _context7.t1 = _context7.sent;

            _context7.t0.json.call(_context7.t0, _context7.t1);

            _context7.next = 11;
            break;

          case 8:
            _context7.prev = 8;
            _context7.t2 = _context7["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(404).end();

          case 11:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7, this, [[0, 8]]);
  }));

  return function (_x13, _x14) {
    return _ref7.apply(this, arguments);
  };
}());
apis.get(/^\/(\d+)$/,
/*#__PURE__*/
function () {
  var _ref8 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee8(req, res) {
    return regeneratorRuntime.wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.prev = 0;
            _context8.t0 = res;
            _context8.next = 4;
            return Object(models_announcement_operation_get_announcement_js__WEBPACK_IMPORTED_MODULE_8__["default"])({
              announcementId: req.params[0],
              language: req.query.language
            });

          case 4:
            _context8.t1 = _context8.sent;

            _context8.t0.json.call(_context8.t0, _context8.t1);

            _context8.next = 11;
            break;

          case 8:
            _context8.prev = 8;
            _context8.t2 = _context8["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(404).end();

          case 11:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8, this, [[0, 8]]);
  }));

  return function (_x15, _x16) {
    return _ref8.apply(this, arguments);
  };
}());
apis.post('/',
/*#__PURE__*/
function () {
  var _ref9 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee9(req, res) {
    return regeneratorRuntime.wrap(function _callee9$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            _context9.prev = 0;
            _context9.t0 = res;
            _context9.next = 4;
            return Object(models_announcement_operation_post_announcement_js__WEBPACK_IMPORTED_MODULE_10__["default"])({
              announcementData: req.body
            });

          case 4:
            _context9.t1 = _context9.sent;

            _context9.t0.json.call(_context9.t0, _context9.t1);

            _context9.next = 11;
            break;

          case 8:
            _context9.prev = 8;
            _context9.t2 = _context9["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee9, this, [[0, 8]]);
  }));

  return function (_x17, _x18) {
    return _ref9.apply(this, arguments);
  };
}());
apis.patch('/:id',
/*#__PURE__*/
function () {
  var _ref10 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee10(req, res) {
    return regeneratorRuntime.wrap(function _callee10$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _context10.prev = 0;
            _context10.t0 = res;
            _context10.next = 4;
            return Object(models_announcement_operation_patch_announcement_js__WEBPACK_IMPORTED_MODULE_13__["default"])({
              announcementId: req.params.id,
              announcementData: req.body
            });

          case 4:
            _context10.t1 = _context10.sent;

            _context10.t0.json.call(_context10.t0, _context10.t1);

            _context10.next = 11;
            break;

          case 8:
            _context10.prev = 8;
            _context10.t2 = _context10["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee10, this, [[0, 8]]);
  }));

  return function (_x19, _x20) {
    return _ref10.apply(this, arguments);
  };
}());
apis.delete('/:id',
/*#__PURE__*/
function () {
  var _ref11 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee11(req, res) {
    return regeneratorRuntime.wrap(function _callee11$(_context11) {
      while (1) {
        switch (_context11.prev = _context11.next) {
          case 0:
            _context11.prev = 0;
            _context11.t0 = res;
            _context11.next = 4;
            return Object(models_announcement_operation_delete_announcements_js__WEBPACK_IMPORTED_MODULE_14__["default"])({
              announcementId: req.params.id
            });

          case 4:
            _context11.t1 = _context11.sent;

            _context11.t0.json.call(_context11.t0, _context11.t1);

            _context11.next = 11;
            break;

          case 8:
            _context11.prev = 8;
            _context11.t2 = _context11["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context11.stop();
        }
      }
    }, _callee11, this, [[0, 8]]);
  }));

  return function (_x21, _x22) {
    return _ref11.apply(this, arguments);
  };
}()); // TODO: Not yet finished

apis.post('/:id/file',
/*#__PURE__*/
function () {
  var _ref12 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee12(req, res) {
    return regeneratorRuntime.wrap(function _callee12$(_context12) {
      while (1) {
        switch (_context12.prev = _context12.next) {
          case 0:
            _context12.prev = 0;
            _context12.t0 = res;
            _context12.next = 4;
            return Object(models_announcement_operation_post_announcementFile_js__WEBPACK_IMPORTED_MODULE_12__["default"])({
              announcementFileData: req.body
            });

          case 4:
            _context12.t1 = _context12.sent;

            _context12.t0.json.call(_context12.t0, _context12.t1);

            _context12.next = 11;
            break;

          case 8:
            _context12.prev = 8;
            _context12.t2 = _context12["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context12.stop();
        }
      }
    }, _callee12, this, [[0, 8]]);
  }));

  return function (_x23, _x24) {
    return _ref12.apply(this, arguments);
  };
}()); // TODO: Not yet finished

apis.delete('/:id/file/:id',
/*#__PURE__*/
function () {
  var _ref13 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee13(req, res) {
    return regeneratorRuntime.wrap(function _callee13$(_context13) {
      while (1) {
        switch (_context13.prev = _context13.next) {
          case 0:
            _context13.prev = 0;
            _context13.t0 = res;
            _context13.next = 4;
            return Object(models_announcement_operation_delete_announcementFiles_js__WEBPACK_IMPORTED_MODULE_16__["default"])({
              announcementFileData: req.body
            });

          case 4:
            _context13.t1 = _context13.sent;

            _context13.t0.json.call(_context13.t0, _context13.t1);

            _context13.next = 11;
            break;

          case 8:
            _context13.prev = 8;
            _context13.t2 = _context13["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context13.stop();
        }
      }
    }, _callee13, this, [[0, 8]]);
  }));

  return function (_x25, _x26) {
    return _ref13.apply(this, arguments);
  };
}());
apis.post('/:id/tags',
/*#__PURE__*/
function () {
  var _ref14 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee14(req, res) {
    return regeneratorRuntime.wrap(function _callee14$(_context14) {
      while (1) {
        switch (_context14.prev = _context14.next) {
          case 0:
            _context14.prev = 0;
            _context14.t0 = res;
            _context14.next = 4;
            return Object(models_announcement_operation_post_announcementTags_js__WEBPACK_IMPORTED_MODULE_11__["default"])({
              announcementId: req.params.id,
              tagId: req.body
            });

          case 4:
            _context14.t1 = _context14.sent;

            _context14.t0.json.call(_context14.t0, _context14.t1);

            _context14.next = 11;
            break;

          case 8:
            _context14.prev = 8;
            _context14.t2 = _context14["catch"](0);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 11:
          case "end":
            return _context14.stop();
        }
      }
    }, _callee14, this, [[0, 8]]);
  }));

  return function (_x27, _x28) {
    return _ref14.apply(this, arguments);
  };
}());
apis.delete('/:id/tags',
/*#__PURE__*/
function () {
  var _ref15 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee15(req, res) {
    var tagId;
    return regeneratorRuntime.wrap(function _callee15$(_context15) {
      while (1) {
        switch (_context15.prev = _context15.next) {
          case 0:
            tagId = req.query.tagId.split(',').map(function (s) {
              return Number.parseInt(s, 10);
            });
            _context15.prev = 1;
            _context15.t0 = res;
            _context15.next = 5;
            return Object(models_announcement_operation_delete_announcementTags_js__WEBPACK_IMPORTED_MODULE_15__["default"])({
              announcementId: req.params.id,
              tagId: tagId
            });

          case 5:
            _context15.t1 = _context15.sent;

            _context15.t0.json.call(_context15.t0, _context15.t1);

            _context15.next = 12;
            break;

          case 9:
            _context15.prev = 9;
            _context15.t2 = _context15["catch"](1);

            /* eslint no-magic-numbers: 'off' */
            res.status(500).end();

          case 12:
          case "end":
            return _context15.stop();
        }
      }
    }, _callee15, this, [[1, 9]]);
  }));

  return function (_x29, _x30) {
    return _ref15.apply(this, arguments);
  };
}());
/* harmony default export */ __webpack_exports__["default"] = (apis);

/***/ }),

/***/ "./apis/faculty.js":
/*!*************************!*\
  !*** ./apis/faculty.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_faculty_operation_get_faculty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/faculty/operation/get-faculty.js */ "./models/faculty/operation/get-faculty.js");
/* harmony import */ var models_faculty_operation_get_faculty_detail_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! models/faculty/operation/get-faculty-detail.js */ "./models/faculty/operation/get-faculty-detail.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




var apis = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
apis.get(/^\/$/,
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(req, res) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = res;
            _context.next = 3;
            return Object(models_faculty_operation_get_faculty_js__WEBPACK_IMPORTED_MODULE_1__["default"])(req.query.language);

          case 3:
            _context.t1 = _context.sent;

            _context.t0.json.call(_context.t0, _context.t1);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}());
apis.get(/^\/(\d+)$/,
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee2(req, res) {
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.t0 = res;
            _context2.next = 3;
            return Object(models_faculty_operation_get_faculty_detail_js__WEBPACK_IMPORTED_MODULE_2__["default"])({
              profileId: req.params[0],
              language: req.query.language
            });

          case 3:
            _context2.t1 = _context2.sent;

            _context2.t0.json.call(_context2.t0, _context2.t1);

          case 5:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function (_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}());
/* harmony default export */ __webpack_exports__["default"] = (apis);

/***/ }),

/***/ "./apis/urls.js":
/*!**********************!*\
  !*** ./apis/urls.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var apis_announcement_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! apis/announcement.js */ "./apis/announcement.js");
/* harmony import */ var apis_faculty_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! apis/faculty.js */ "./apis/faculty.js");



var apis = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL /api/announcement

apis.use('/announcement', apis_announcement_js__WEBPACK_IMPORTED_MODULE_1__["default"]); // Resolve URL /api/faculty

apis.use('/faculty', apis_faculty_js__WEBPACK_IMPORTED_MODULE_2__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (apis);

/***/ }),

/***/ "./models/announcement/operation/associations.js":
/*!*******************************************************!*\
  !*** ./models/announcement/operation/associations.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ "path");
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
/* harmony import */ var settings_database_connect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! settings/database/connect.js */ "./settings/database/connect.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var announcementDatabase, tablesRoot, table;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return Object(settings_database_connect_js__WEBPACK_IMPORTED_MODULE_2__["default"])('announcement');

        case 2:
          announcementDatabase = _context.sent;
          tablesRoot = path__WEBPACK_IMPORTED_MODULE_0___default.a.join(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, 'models/announcement/tables');
          table = {
            announcementFileI18n: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_file_i18n')),
            announcementFile: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_file')),
            announcementI18n: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_i18n')),
            announcement: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement')),
            announcementTag: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'announcement_tag')),
            tagI18n: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'tag_i18n')),
            tag: announcementDatabase.import(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(tablesRoot, 'tag'))
          }; // Translation relationship.
          // `announcement` has many translations.

          table.announcement.hasMany(table.announcementI18n, {
            as: 'announcementI18n',
            foreignKey: 'announcementId',
            sourceKey: 'announcementId',
            onDelete: 'CASCADE'
          }); // `announcementFile` has many translations.

          table.announcementFile.hasMany(table.announcementFileI18n, {
            as: 'announcementFileI18n',
            foreignKey: 'fileId',
            sourceKey: 'fileId',
            onDelete: 'CASCADE'
          }); // `tag` has many translations.

          table.tag.hasMany(table.tagI18n, {
            as: 'tagI18n',
            foreignKey: 'tagId',
            sourceKey: 'tagId',
            onDelete: 'CASCADE'
          }); // Announcement relationship.
          // `announcement` has many `file`.

          table.announcement.hasMany(table.announcementFile, {
            as: 'announcementFile',
            foreignKey: 'announcementId',
            sourceKey: 'announcementId',
            onDelete: 'CASCADE'
          }); // `announcement` has many `announcementTag`.

          table.announcement.hasMany(table.announcementTag, {
            as: 'announcementTag',
            foreignKey: 'announcementId',
            sourceKey: 'announcementId',
            onDelete: 'CASCADE'
          }); // `announcementTag` has many `tagI18n`.

          table.announcementTag.hasMany(table.tagI18n, {
            as: 'tagI18n',
            foreignKey: 'tagId',
            sourceKey: 'tagId',
            onDelete: 'CASCADE'
          }); // Any one who use this module should remember to close connection,
          // like `table.database.close()`.

          table.database = announcementDatabase;
          return _context.abrupt("return", table);

        case 13:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/delete-announcementFiles.js":
/*!*******************************************************************!*\
  !*** ./models/announcement/operation/delete-announcementFiles.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$language,
      language,
      fileId,
      table,
      rowCount,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? 'zh-TW' : _ref2$language, fileId = _ref2.fileId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcementI18n.destroy({
            where: {
              language: language,
              fileId: fileId
            }
          }).then(function (rowCount) {
            return rowCount;
          });

        case 6:
          rowCount = _context.sent;
          table.database.close();
          return _context.abrupt("return", rowCount);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/delete-announcementTags.js":
/*!******************************************************************!*\
  !*** ./models/announcement/operation/delete-announcementTags.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      tagId,
      table,
      rowCount,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementId = _ref2.announcementId, tagId = _ref2.tagId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcementTag.destroy({
            where: {
              announcementId: announcementId,
              tagId: tagId
            }
          }).then(function (rowCount) {
            return rowCount;
          });

        case 6:
          rowCount = _context.sent;
          table.database.close();
          return _context.abrupt("return", rowCount);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/delete-announcements.js":
/*!***************************************************************!*\
  !*** ./models/announcement/operation/delete-announcements.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      table,
      rowCount,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementId = _ref2.announcementId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcement.destroy({
            where: {
              announcementId: announcementId
            }
          }).then(function (rowCount) {
            return rowCount;
          });

        case 6:
          rowCount = _context.sent;
          table.database.close();
          return _context.abrupt("return", rowCount);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-all-announcements.js":
/*!****************************************************************!*\
  !*** ./models/announcement/operation/get-all-announcements.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$page,
      page,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].page : _ref2$page, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidPage(page)) {
            _context.next = 12;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid page'
          });

        case 12:
          _context.next = 14;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 14:
          table = _context.sent;
          data = [];

          if (!(tags.length === 0)) {
            _context.next = 22;
            break;
          }

          _context.next = 19;
          return table.announcement.findAll({
            attributes: ['announcementId', 'updateTime'],
            where: {
              updateTime: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              isPublished: 1,
              isApproved: 1
            },
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content'],
              where: {
                language: language
              }
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              attributes: ['tagId'],
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['name'],
                where: {
                  language: 'en-US'
                }
              }]
            }],
            offset: (page - 1) * settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
            limit: settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 19:
          data = _context.sent;
          _context.next = 25;
          break;

        case 22:
          _context.next = 24;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, tags),
              'updateTime': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }]
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              offset: (page - 1) * settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              limit: settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 24:
          data = _context.sent;

        case 25:
          table.database.close();
          return _context.abrupt("return", data);

        case 27:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-all-pages.js":
/*!********************************************************!*\
  !*** ./models/announcement/operation/get-all-pages.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      table,
      count,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          count = 0;

          if (!(tags.length === 0)) {
            _context.next = 20;
            break;
          }

          _context.next = 17;
          return table.announcement.count({
            where: {
              updateTime: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              isPublished: 1,
              isApproved: 1
            }
          });

        case 17:
          count = _context.sent;
          _context.next = 23;
          break;

        case 20:
          _context.next = 22;
          return table.announcement.count({
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, tags),
              'updateTime': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n'
              }]
            }],
            distinct: true
          });

        case 22:
          count = _context.sent;

        case 23:
          table.database.close();
          return _context.abrupt("return", {
            pageNumber: Math.ceil(count / settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage)
          });

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-all-pinned-announcements.js":
/*!***********************************************************************!*\
  !*** ./models/announcement/operation/get-all-pinned-announcements.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          data = [];

          if (!(tags.length === 0)) {
            _context.next = 20;
            break;
          }

          _context.next = 17;
          return table.announcement.findAll({
            attributes: ['announcementId', 'updateTime'],
            where: {
              updateTime: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              isPinned: 1,
              isPublished: 1,
              isApproved: 1
            },
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content'],
              where: {
                language: language
              }
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              attributes: ['tagId'],
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['name'],
                where: {
                  language: 'en-US'
                }
              }]
            }]
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 17:
          data = _context.sent;
          _context.next = 23;
          break;

        case 20:
          _context.next = 22;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, tags),
              'updateTime': _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].between, [startTime, endTime]),
              'isPinned': 1,
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }]
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, sequelize__WEBPACK_IMPORTED_MODULE_0__["Op"].in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 22:
          data = _context.sent;

        case 23:
          table.database.close();
          return _context.abrupt("return", data);

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-announcement-all-languages.js":
/*!*************************************************************************!*\
  !*** ./models/announcement/operation/get-announcement-all-languages.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$announcementId,
      announcementId,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$announcementId = _ref2.announcementId, announcementId = _ref2$announcementId === void 0 ? 1 : _ref2$announcementId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcement.findOne({
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content']
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['tagId', 'name'],
                where: {
                  language: 'en-US'
                }
              }]
            }, {
              model: table.announcementFile,
              as: 'announcementFile',
              include: [{
                model: table.announcementFileI18n,
                as: 'announcementFileI18n',
                attributes: ['url', 'name']
              }],
              attributes: ['type', 'uploadTime']
            }],
            attributes: ['announcementId', 'author', 'updateTime', 'views', 'isPinned', 'isPublished'],
            where: {
              announcementId: announcementId
            }
          }).then(function (announcement) {
            return {
              'id': announcement.announcementId,
              'author': announcement.author,
              'updateTime': announcement.updateTime,
              'views': announcement.views,
              'isPinned': announcement.isPinned,
              'isPublished': announcement.isPublished,
              'en-US': {
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content
              },
              'zh-TW': {
                title: announcement.announcementI18n[1].title,
                content: announcement.announcementI18n[1].content
              },
              'files': announcement.announcementFile.map(function (announcementFile) {
                return {
                  uploadTime: announcementFile.uploadTime,
                  type: announcementFile.type,
                  url: announcementFile.announcementFileI18n[0].url,
                  name: announcementFile.announcementFileI18n[0].name
                };
              }),
              'tags': announcement.announcementTag.map(function (announcementTag) {
                return announcementTag.tagI18n[0].name;
              })
            };
          });

        case 6:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-announcement.js":
/*!***********************************************************!*\
  !*** ./models/announcement/operation/get-announcement.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$language,
      language,
      _ref2$announcementId,
      announcementId,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].language : _ref2$language, _ref2$announcementId = _ref2.announcementId, announcementId = _ref2$announcementId === void 0 ? 1 : _ref2$announcementId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          _context.next = 6;
          return table.announcement.findOne({
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n',
              attributes: ['title', 'content'],
              where: {
                language: language
              }
            }, {
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n',
                attributes: ['tagId', 'name'],
                where: {
                  language: 'en-US'
                }
              }]
            }, {
              model: table.announcementFile,
              as: 'announcementFile',
              include: [{
                model: table.announcementFileI18n,
                as: 'announcementFileI18n',
                attributes: ['url', 'name'],
                where: {
                  language: language
                }
              }],
              attributes: ['type', 'uploadTime']
            }],
            attributes: ['announcementId', 'author', 'publishTime', 'updateTime', 'views', 'isPinned'],
            where: {
              announcementId: announcementId
            }
          }).then(function (announcement) {
            return {
              id: announcement.announcementId,
              title: announcement.announcementI18n[0].title,
              content: announcement.announcementI18n[0].content,
              author: announcement.author,
              publishTime: announcement.publishTime,
              updateTime: announcement.updateTime,
              views: announcement.views,
              isPinned: announcement.isPinned,
              files: announcement.announcementFile.map(function (announcementFile) {
                return {
                  uploadTime: announcementFile.uploadTime,
                  type: announcementFile.type,
                  url: announcementFile.announcementFileI18n[0].url,
                  name: announcementFile.announcementFileI18n[0].name
                };
              }),
              tags: announcement.announcementTag.map(function (announcementTag) {
                return {
                  id: announcementTag.tagI18n[0].tagId,
                  name: announcementTag.tagI18n[0].name
                };
              })
            };
          });

        case 6:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-announcements-by-tags.js":
/*!********************************************************************!*\
  !*** ./models/announcement/operation/get-announcements-by-tags.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var Op = sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.Op;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$page,
      page,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$page = _ref2.page, page = _ref2$page === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].page : _ref2$page, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidPage(page)) {
            _context.next = 12;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid page'
          });

        case 12:
          _context.next = 14;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 14:
          table = _context.sent;

          if (!(page <= 0)) {
            _context.next = 17;
            break;
          }

          return _context.abrupt("return", []);

        case 17:
          _context.next = 19;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, Op.in, tags),
              'updateTime': _defineProperty({}, Op.between, [new Date(startTime), new Date(endTime)]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }],
            group: 'announcementId',
            having: sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.literal("count(*) = ".concat(tags.length))
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, Op.in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              offset: (page - 1) * settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              limit: settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage,
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 19:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 22:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-pages-by-tags.js":
/*!************************************************************!*\
  !*** ./models/announcement/operation/get-pages-by-tags.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var Op = sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.Op;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      table,
      count,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          _context.next = 15;
          return table.announcement.count({
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, Op.in, tags),
              'updateTime': _defineProperty({}, Op.between, [new Date(startTime), new Date(endTime)]),
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                as: 'tagI18n'
              }]
            }],
            group: '`announcement`.`announcement_id`',
            having: sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.literal("count(*) = ".concat(tags.length))
          }).then(function (count) {
            return count.length;
          });

        case 15:
          count = _context.sent;
          table.database.close();
          return _context.abrupt("return", {
            pageNumber: Math.ceil(count / settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].announcementsPerPage)
          });

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/get-pinned-announcements-by-tags.js":
/*!***************************************************************************!*\
  !*** ./models/announcement/operation/get-pinned-announcements-by-tags.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test/models/announcement/operation/validate.js */ "./test/models/announcement/operation/validate.js");
/* harmony import */ var settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! settings/default-value/announcement/config.js */ "./settings/default-value/announcement/config.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }





var Op = sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.Op;
/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$tags,
      tags,
      _ref2$startTime,
      startTime,
      _ref2$endTime,
      endTime,
      _ref2$language,
      language,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tags = _ref2.tags, tags = _ref2$tags === void 0 ? [] : _ref2$tags, _ref2$startTime = _ref2.startTime, startTime = _ref2$startTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].startTime : _ref2$startTime, _ref2$endTime = _ref2.endTime, endTime = _ref2$endTime === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].endTime : _ref2$endTime, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? settings_default_value_announcement_config_js__WEBPACK_IMPORTED_MODULE_3__["default"].language : _ref2$language;
          tags = _toConsumableArray(new Set(tags));
          startTime = new Date(startTime);
          endTime = new Date(endTime);

          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidTags(tags)) {
            _context.next = 6;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid tag name'
          });

        case 6:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(startTime)) {
            _context.next = 8;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid start time'
          });

        case 8:
          if (test_models_announcement_operation_validate_js__WEBPACK_IMPORTED_MODULE_2__["default"].isValidDate(endTime)) {
            _context.next = 10;
            break;
          }

          return _context.abrupt("return", {
            error: 'invalid end time'
          });

        case 10:
          _context.next = 12;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_1__["default"])();

        case 12:
          table = _context.sent;
          _context.next = 15;
          return table.announcement.findAll({
            attributes: ['announcementId'],
            where: {
              '$announcementTag.tagI18n.name$': _defineProperty({}, Op.in, tags),
              'updateTime': _defineProperty({}, Op.between, [new Date(startTime), new Date(endTime)]),
              'isPinned': 1,
              'isPublished': 1,
              'isApproved': 1
            },
            include: [{
              model: table.announcementTag,
              attributes: [],
              as: 'announcementTag',
              include: [{
                model: table.tagI18n,
                attributes: [],
                as: 'tagI18n'
              }]
            }],
            group: 'announcementId',
            having: sequelize__WEBPACK_IMPORTED_MODULE_0___default.a.literal("count(*) = ".concat(tags.length))
          }).then(function (ids) {
            return table.announcement.findAll({
              attributes: ['announcementId', 'updateTime'],
              where: {
                announcementId: _defineProperty({}, Op.in, ids.map(function (id) {
                  return id.announcementId;
                }))
              },
              include: [{
                model: table.announcementI18n,
                as: 'announcementI18n',
                attributes: ['title', 'content'],
                where: {
                  language: language
                }
              }, {
                model: table.announcementTag,
                as: 'announcementTag',
                attributes: ['tagId'],
                include: [{
                  model: table.tagI18n,
                  as: 'tagI18n',
                  attributes: ['name'],
                  where: {
                    language: 'en-US'
                  }
                }]
              }]
            });
          }).then(function (announcements) {
            return announcements.map(function (announcement) {
              return {
                id: announcement.announcementId,
                title: announcement.announcementI18n[0].title,
                content: announcement.announcementI18n[0].content,
                updateTime: announcement.updateTime,
                tags: announcement.announcementTag.map(function (tag) {
                  return {
                    id: tag.tagId,
                    name: tag.tagI18n[0].name
                  };
                })
              };
            });
          });

        case 15:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 18:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/patch-announcement.js":
/*!*************************************************************!*\
  !*** ./models/announcement/operation/patch-announcement.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      announcementData,
      table,
      i18n,
      result,
      _loop,
      i,
      _args2 = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _ref2 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, announcementId = _ref2.announcementId, announcementData = _ref2.announcementData;
          _context2.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context2.sent;
          i18n = announcementData.announcementI18n;
          delete announcementData.announcementI18n; // Initialize result object

          result = {};
          result.i18n = {};
          result.i18n.affectedCount = {};
          _loop =
          /*#__PURE__*/
          regeneratorRuntime.mark(function _loop(i) {
            return regeneratorRuntime.wrap(function _loop$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return table.announcementI18n.update(i18n[i], {
                      where: {
                        language: i18n[i].language,
                        announcementId: announcementId
                      }
                    }).then(function (count) {
                      result.i18n.affectedCount[i18n[i].language] = count;
                    });

                  case 2:
                  case "end":
                    return _context.stop();
                }
              }
            }, _loop, this);
          });
          i = 0;

        case 11:
          if (!(i < i18n.length)) {
            _context2.next = 16;
            break;
          }

          return _context2.delegateYield(_loop(i), "t0", 13);

        case 13:
          i++;
          _context2.next = 11;
          break;

        case 16:
          _context2.next = 18;
          return table.announcement.update(announcementData, {
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n'
            }],
            where: {
              announcementId: announcementId
            }
          }).then(function (count) {
            result.affectedCount = count;
          });

        case 18:
          table.database.close();
          return _context2.abrupt("return", result);

        case 20:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/post-announcement.js":
/*!************************************************************!*\
  !*** ./models/announcement/operation/post-announcement.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/language/config.js */ "./settings/language/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




function isLangExist(data, language) {
  for (var i = 0; i < data.length; i++) {
    if (data[i].language === language) return true;
  }

  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementData,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementData = _ref2.announcementData;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].support.forEach(function (lang) {
            if (!isLangExist(announcementData.announcementI18n, lang)) throw new Error("Missing language for announcementI18n: ".concat(lang));
            announcementData.announcementFile.forEach(function (file) {
              if (!isLangExist(file.announcementFileI18n, lang)) throw new Error("Missing language for announcementFileI18n: ".concat(lang));
            });
          });
          _context.next = 7;
          return table.announcement.create(announcementData, {
            include: [{
              model: table.announcementI18n,
              as: 'announcementI18n'
            }, {
              model: table.announcementTag,
              as: 'announcementTag'
            }, {
              model: table.announcementFile,
              as: 'announcementFile',
              include: [{
                model: table.announcementFileI18n,
                as: 'announcementFileI18n'
              }]
            }]
          }).then(function (announcement) {
            return {
              id: announcement.announcementId,
              title: announcement.announcementI18n[0].title,
              content: announcement.announcementI18n[0].content,
              author: announcement.author,
              publishTime: announcement.publishTime,
              updateTime: announcement.updateTime,
              views: announcement.views,
              isPinned: announcement.isPinned,
              files: announcement.announcementFile.map(function (announcementFile) {
                return {
                  uploadTime: announcementFile.uploadTime,
                  type: announcementFile.type,
                  url: announcementFile.announcementFileI18n[0].url,
                  name: announcementFile.announcementFileI18n[0].name
                };
              }),
              tags: announcement.announcementTag.map(function (announcementTag) {
                return {
                  id: announcementTag.tagId
                };
              })
            };
          });

        case 7:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/post-announcementFile.js":
/*!****************************************************************!*\
  !*** ./models/announcement/operation/post-announcementFile.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
/* harmony import */ var settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/language/config.js */ "./settings/language/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




function isLangExist(data, language) {
  for (var i = 0; i < data.length; i++) {
    if (data[i].language === language) return true;
  }

  return false;
}

/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementFileData,
      table,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementFileData = _ref2.announcementFileData;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          settings_language_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].support.forEach(function (lang) {
            if (!isLangExist(announcementFileData.announcementFileI18n, lang)) throw new Error("Missing language for announcementFileI18n: ".concat(lang));
          });
          _context.next = 7;
          return table.announcementFile.create(announcementFileData, {
            include: [{
              model: table.announcementFileI18n,
              as: 'announcementFileI18n'
            }]
          }).then(function (announcementFile) {
            return {
              uploadTime: announcementFile.uploadTime,
              type: announcementFile.type,
              url: announcementFile.announcementFileI18n[0].url,
              name: announcementFile.announcementFileI18n[0].name
            };
          });

        case 7:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/announcement/operation/post-announcementTags.js":
/*!****************************************************************!*\
  !*** ./models/announcement/operation/post-announcementTags.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/announcement/operation/associations.js */ "./models/announcement/operation/associations.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      announcementId,
      tagId,
      table,
      announcementTagData,
      data,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, announcementId = _ref2.announcementId, tagId = _ref2.tagId;
          _context.next = 3;
          return Object(models_announcement_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          announcementTagData = tagId.map(function (id) {
            return {
              announcementId: announcementId,
              tagId: id
            };
          });
          _context.next = 7;
          return table.announcementTag.bulkCreate(announcementTagData).then(function (announcementTags) {
            return announcementTags.map(function (announcementTag) {
              return {
                announcementId: announcementTag.announcementId,
                tagId: announcementTag.tagId
              };
            });
          });

        case 7:
          data = _context.sent;
          table.database.close();
          return _context.abrupt("return", data);

        case 10:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/faculty/operation/associations.js":
/*!**************************************************!*\
  !*** ./models/faculty/operation/associations.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
/* harmony import */ var settings_database_connect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/database/connect.js */ "./settings/database/connect.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var teacherDatabase, table;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return Object(settings_database_connect_js__WEBPACK_IMPORTED_MODULE_1__["default"])('faculty');

        case 2:
          teacherDatabase = _context.sent;
          table = {
            conferenceI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/conference_i18n")),
            conference: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/conference")),
            departmentI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/department_i18n")),
            department: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/department")),
            educationI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/education_i18n")),
            education: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/education")),
            experienceI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/experience_i18n")),
            experience: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/experience")),
            honorI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/honor_i18n")),
            honor: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/honor")),
            labI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/lab_i18n")),
            lab: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/lab")),
            officeI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/office_i18n")),
            office: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/office")),
            patentI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/patent_i18n")),
            patent: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/patent")),
            profileI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/profile_i18n")),
            profile: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/profile")),
            projectI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/project_i18n")),
            project: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/project")),
            publicationI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/publication_i18n")),
            publication: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/publication")),
            specialty: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/specialty")),
            technologyTransfer: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/technology_transfer")),
            technologyTransferI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/technology_transfer_i18n")),
            titleI18n: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/title_i18n")),
            title: teacherDatabase.import("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].projectRoot, "/models/faculty/tables/title"))
          }; // Translation relationship.
          // `conference` has many translations.

          table.conference.hasMany(table.conferenceI18n, {
            as: 'conferenceI18n',
            foreignKey: 'conferenceId',
            sourceKey: 'conferenceId'
          }); // `department` has many translations.

          table.department.hasMany(table.departmentI18n, {
            as: 'departmentI18n',
            foreignKey: 'departmentId',
            sourceKey: 'departmentId'
          }); // `education` has many translations.

          table.education.hasMany(table.educationI18n, {
            as: 'educationI18n',
            foreignKey: 'educationId',
            sourceKey: 'educationId'
          }); // `experience` has many translations.

          table.experience.hasMany(table.experienceI18n, {
            as: 'experienceI18n',
            foreignKey: 'experienceId',
            sourceKey: 'experienceId'
          }); // `honor` has many translations.

          table.honor.hasMany(table.honorI18n, {
            as: 'honorI18n',
            foreignKey: 'honorId',
            sourceKey: 'honorId'
          }); // `lab` has many translations.

          table.lab.hasMany(table.labI18n, {
            as: 'labI18n',
            foreignKey: 'labId',
            sourceKey: 'labId'
          }); // `office` has many translations.

          table.office.hasMany(table.officeI18n, {
            as: 'officeI18n',
            foreignKey: 'officeId',
            sourceKey: 'officeId'
          }); // `patent` has many translations.

          table.patent.hasMany(table.patentI18n, {
            as: 'patentI18n',
            foreignKey: 'patentId',
            sourceKey: 'patentId'
          }); // `profile` has many translations.

          table.profile.hasMany(table.profileI18n, {
            as: 'profileI18n',
            foreignKey: 'profileId',
            sourceKey: 'profileId'
          }); // `project` has many translations.

          table.project.hasMany(table.projectI18n, {
            as: 'projectI18n',
            foreignKey: 'projectId',
            sourceKey: 'projectId'
          }); // `publication` has many translations.

          table.publication.hasMany(table.publicationI18n, {
            as: 'publicationI18n',
            foreignKey: 'publicationId',
            sourceKey: 'publicationId'
          }); // `technologyTransfer` has many translations.

          table.technologyTransfer.hasMany(table.technologyTransferI18n, {
            as: 'technologyTransferI18n',
            foreignKey: 'technologyTransferId',
            sourceKey: 'technologyTransferId'
          }); // `title` has many translations.

          table.title.hasMany(table.titleI18n, {
            as: 'titleI18n',
            foreignKey: 'titleId',
            sourceKey: 'titleId'
          }); // Profile relationship.
          // `profile` has many `conference`.

          table.profile.hasMany(table.conference, {
            as: 'conference',
            foreignKey: 'conferenceId',
            sourceKey: 'profileId'
          }); // `profile` has many `department`.

          table.profile.hasMany(table.department, {
            as: 'department',
            foreignKey: 'departmentId',
            sourceKey: 'profileId'
          }); // `profile` has many `education`.

          table.profile.hasMany(table.education, {
            as: 'education',
            foreignKey: 'educationId',
            sourceKey: 'profileId'
          }); // `profile` has many `experience`.

          table.profile.hasMany(table.experience, {
            as: 'experience',
            foreignKey: 'experienceId',
            sourceKey: 'profileId'
          }); // `profile` has many `honor`.

          table.profile.hasMany(table.honor, {
            as: 'honor',
            foreignKey: 'honorId',
            sourceKey: 'profileId'
          }); // `profile` has many `lab`.

          table.profile.hasMany(table.lab, {
            as: 'lab',
            foreignKey: 'labId',
            sourceKey: 'profileId'
          }); // `profile` has many `office`.

          table.profile.hasMany(table.office, {
            as: 'office',
            foreignKey: 'officeId',
            sourceKey: 'profileId'
          }); // `profile` has many `patent`.

          table.profile.hasMany(table.patent, {
            as: 'patent',
            foreignKey: 'patentId',
            sourceKey: 'profileId'
          }); // `profile` has many `project`.

          table.profile.hasMany(table.project, {
            as: 'project',
            foreignKey: 'projectId',
            sourceKey: 'profileId'
          }); // `profile` has many `publication`.

          table.profile.hasMany(table.publication, {
            as: 'publication',
            foreignKey: 'publicationId',
            sourceKey: 'profileId'
          }); // `profile` has many `specialty`.

          table.profile.hasMany(table.specialty, {
            as: 'specialty',
            foreignKey: 'specialtyId',
            sourceKey: 'profileId'
          }); // `profile` has many `technologyTransfer`.

          table.profile.hasMany(table.technologyTransfer, {
            as: 'technologyTransfer',
            foreignKey: 'technologyTransferId',
            sourceKey: 'profileId'
          }); // `profile` has many `title`.

          table.profile.hasMany(table.title, {
            as: 'title',
            foreignKey: 'titleId',
            sourceKey: 'profileId'
          }); // Any one who use this module should remember to close connection,
          // like `table.database.close()`.

          table.database = teacherDatabase;
          return _context.abrupt("return", table);

        case 32:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/faculty/operation/get-faculty-detail.js":
/*!********************************************************!*\
  !*** ./models/faculty/operation/get-faculty-detail.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/faculty/operation/associations.js */ "./models/faculty/operation/associations.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee() {
  var _ref2,
      _ref2$language,
      language,
      _ref2$profileId,
      profileId,
      table,
      data,
      _ref3,
      _ref4,
      _args = arguments;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$language = _ref2.language, language = _ref2$language === void 0 ? 'zh-TW' : _ref2$language, _ref2$profileId = _ref2.profileId, profileId = _ref2$profileId === void 0 ? 1 : _ref2$profileId;
          _context.next = 3;
          return Object(models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context.sent;
          data = {}; // Promise.all uses iterator, so it will keep the order of the elements in array that passed in

          _context.next = 7;
          return Promise.all([table.conference.findAll({
            include: [{
              model: table.conferenceI18n,
              as: 'conferenceI18n',
              attributes: ['conference'],
              where: {
                language: language
              }
            }],
            attributes: ['hostDate'],
            where: {
              profileId: profileId
            }
          }).then(function (conferences) {
            return conferences.map(function (conference) {
              return {
                hostDate: conference.hostDate,
                conference: conference.conferenceI18n[0].conference
              };
            });
          }), table.department.findAll({
            include: [{
              model: table.departmentI18n,
              as: 'departmentI18n',
              attributes: ['department'],
              where: {
                language: language
              }
            }],
            attributes: [],
            where: {
              profileId: profileId
            }
          }).then(function (departments) {
            return departments.map(function (department) {
              return {
                department: department.departmentI18n[0].department
              };
            });
          }), table.education.findAll({
            include: [{
              model: table.educationI18n,
              as: 'educationI18n',
              attributes: ['major', 'school'],
              where: {
                language: language
              }
            }],
            attributes: ['degree', 'endYear', 'nation', 'startYear'],
            where: {
              profileId: profileId
            }
          }).then(function (educations) {
            return educations.map(function (education) {
              return {
                degree: education.degree,
                endYear: education.endYear,
                nation: education.nation,
                startYear: education.startYear,
                major: education.educationI18n[0].major,
                school: education.educationI18n[0].school
              };
            });
          }), table.experience.findAll({
            include: [{
              model: table.experienceI18n,
              as: 'experienceI18n',
              attributes: ['department', 'organization', 'title'],
              where: {
                language: language
              }
            }],
            attributes: ['endYear', 'startYear'],
            where: {
              profileId: profileId
            }
          }).then(function (experiences) {
            return experiences.map(function (experience) {
              return {
                endYear: experience.endYear,
                startYear: experience.startYear,
                department: experience.experienceI18n[0].department,
                organization: experience.experienceI18n[0].organization,
                title: experience.experienceI18n[0].title
              };
            });
          }), table.honor.findAll({
            include: [{
              model: table.honorI18n,
              as: 'honorI18n',
              attributes: ['honor'],
              where: {
                language: language
              }
            }],
            attributes: ['honorYear'],
            where: {
              profileId: profileId
            }
          }).then(function (honors) {
            return honors.map(function (honor) {
              return {
                honorYear: honor.honorYear,
                honor: honor.honorI18n[0].honor
              };
            });
          }), table.lab.findAll({
            include: [{
              model: table.labI18n,
              as: 'labI18n',
              attributes: ['address', 'name'],
              where: {
                language: language
              }
            }],
            attributes: ['labWeb', 'tel'],
            where: {
              profileId: profileId
            }
          }).then(function (labs) {
            return labs.map(function (lab) {
              return {
                labWeb: lab.labWeb,
                tel: lab.tel,
                address: lab.labI18n[0].address,
                name: lab.labI18n[0].name
              };
            });
          }), table.office.findAll({
            include: [{
              model: table.officeI18n,
              as: 'officeI18n',
              attributes: ['address'],
              where: {
                language: language
              }
            }],
            attributes: ['tel'],
            where: {
              profileId: profileId
            }
          }).then(function (offices) {
            return offices.map(function (office) {
              return {
                tel: office.tel,
                address: office.officeI18n[0].address
              };
            });
          }), table.patent.findAll({
            include: [{
              model: table.patentI18n,
              as: 'patentI18n',
              attributes: ['inventor', 'patent', 'patentOwner'],
              where: {
                language: language
              }
            }],
            attributes: ['applicationDate', 'certificationNumber', 'expireDate', 'issueDate', 'nation', 'nscNumber'],
            where: {
              profileId: profileId
            }
          }).then(function (patents) {
            return patents.map(function (patent) {
              return {
                applicationDate: patent.applicationDate,
                certificationNumber: patent.certificationNumber,
                expireDate: patent.expireDate,
                issueDate: patent.issueDate,
                nation: patent.nation,
                nscNumber: patent.nscNumber,
                inventor: patent.patentI18n[0].inventor,
                patent: patent.patentI18n[0].patent,
                patentOwner: patent.patentI18n[0].patentOwner
              };
            });
          }), table.profile.findOne({
            include: [{
              model: table.profileI18n,
              as: 'profileI18n',
              attributes: ['name'],
              where: {
                language: language
              }
            }],
            attributes: ['email', 'fax', 'nation', 'personalWeb', 'photo', 'position'],
            where: {
              profileId: profileId
            }
          }).then(function (profile) {
            return {
              email: profile.email,
              fax: profile.fax,
              nation: profile.nation,
              personalWeb: profile.personalWeb,
              photo: profile.photo,
              position: profile.position,
              name: profile.profileI18n[0].name,
              profileId: profileId
            };
          }), table.project.findAll({
            include: [{
              model: table.projectI18n,
              as: 'projectI18n',
              attributes: ['name', 'support'],
              where: {
                language: language
              }
            }],
            attributes: ['category', 'endYear', 'startYear'],
            where: {
              profileId: profileId
            }
          }).then(function (projects) {
            return projects.map(function (project) {
              return {
                category: project.category,
                endYear: project.endYear,
                startYear: project.startYear,
                name: project.projectI18n[0].name,
                support: project.projectI18n[0].support
              };
            });
          }), table.publication.findAll({
            include: [{
              model: table.publicationI18n,
              as: 'publicationI18n',
              attributes: ['publication'],
              where: {
                language: language
              }
            }],
            attributes: ['category', 'issueYear'],
            where: {
              profileId: profileId
            }
          }).then(function (publications) {
            return publications.map(function (publication) {
              return {
                category: publication.category,
                issueYear: publication.issueYear,
                publication: publication.publicationI18n[0].publication
              };
            });
          }), table.specialty.findAll({
            attributes: ['specialty'],
            where: {
              profileId: profileId,
              language: language
            }
          }), table.technologyTransfer.findAll({
            include: [{
              model: table.technologyTransferI18n,
              as: 'technologyTransferI18n',
              attributes: ['authority', 'patent', 'receiver', 'technology'],
              where: {
                language: language
              }
            }],
            attributes: ['endDate', 'nscNumber', 'startDate'],
            where: {
              profileId: profileId
            }
          }).then(function (technologyTransfers) {
            return technologyTransfers.map(function (technologyTransfer) {
              return {
                endDate: technologyTransfer.endDate,
                nscNumber: technologyTransfer.nscNumber,
                startDate: technologyTransfer.startDate,
                authority: technologyTransfer.technologyTransferI18n[0].authority,
                patent: technologyTransfer.technologyTransferI18n[0].patent,
                receiver: technologyTransfer.technologyTransferI18n[0].receiver,
                technology: technologyTransfer.technologyTransferI18n[0].technology
              };
            });
          }), table.title.findAll({
            include: [{
              model: table.titleI18n,
              as: 'titleI18n',
              attributes: ['title'],
              where: {
                language: language
              }
            }],
            attributes: ['endDate', 'startDate'],
            where: {
              profileId: profileId
            }
          }).then(function (titles) {
            return titles.map(function (title) {
              return {
                endDate: title.endDate,
                startDate: title.startDate,
                title: title.titleI18n[0].title
              };
            });
          })]);

        case 7:
          _ref3 = _context.sent;
          _ref4 = _slicedToArray(_ref3, 14);
          data.conferences = _ref4[0];
          data.departments = _ref4[1];
          data.educations = _ref4[2];
          data.experiences = _ref4[3];
          data.honors = _ref4[4];
          data.labs = _ref4[5];
          data.offices = _ref4[6];
          data.patents = _ref4[7];
          data.profile = _ref4[8];
          data.projects = _ref4[9];
          data.publications = _ref4[10];
          data.specialties = _ref4[11];
          data.technologyTransfers = _ref4[12];
          data.titles = _ref4[13];
          table.database.close();
          return _context.abrupt("return", data);

        case 25:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));

/***/ }),

/***/ "./models/faculty/operation/get-faculty.js":
/*!*************************************************!*\
  !*** ./models/faculty/operation/get-faculty.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! models/faculty/operation/associations.js */ "./models/faculty/operation/associations.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/_asyncToGenerator(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee2() {
  var language,
      table,
      data,
      _args2 = arguments;
  return regeneratorRuntime.wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          language = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 'zh-TW';
          _context2.next = 3;
          return Object(models_faculty_operation_associations_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        case 3:
          table = _context2.sent;
          _context2.next = 6;
          return table.profile.findAll({
            attributes: ['email', 'personalWeb', 'photo', 'position', 'profileId']
          }).then(function (profiles) {
            return Promise.all(profiles.map(
            /*#__PURE__*/
            function () {
              var _ref2 = _asyncToGenerator(
              /*#__PURE__*/
              regeneratorRuntime.mark(function _callee(profile) {
                var _ref3, _ref4, departments, offices, labs, profileI18n, titles;

                return regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return Promise.all([table.department.findAll({
                          include: [{
                            model: table.departmentI18n,
                            as: 'departmentI18n',
                            attributes: ['department'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: [],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (departments) {
                          return departments.map(function (department) {
                            return {
                              department: department.departmentI18n[0].department
                            };
                          });
                        }), table.office.findAll({
                          include: [{
                            model: table.officeI18n,
                            as: 'officeI18n',
                            attributes: ['address'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: ['tel'],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (offices) {
                          return offices.map(function (office) {
                            return {
                              tel: office.tel,
                              address: office.officeI18n[0].address
                            };
                          });
                        }), table.lab.findAll({
                          include: [{
                            model: table.labI18n,
                            as: 'labI18n',
                            attributes: ['name'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: ['labWeb'],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (labs) {
                          return labs.map(function (lab) {
                            return {
                              labWeb: lab.labWeb,
                              name: lab.labI18n[0].name
                            };
                          });
                        }), table.profileI18n.findOne({
                          attributes: ['name'],
                          where: {
                            language: language,
                            profileId: profile.profileId
                          }
                        }), table.title.findAll({
                          include: [{
                            model: table.titleI18n,
                            as: 'titleI18n',
                            attributes: ['title'],
                            where: {
                              language: language
                            }
                          }],
                          attributes: ['endDate', 'startDate'],
                          where: {
                            profileId: profile.profileId
                          }
                        }).then(function (titles) {
                          return titles.map(function (title) {
                            return {
                              endDate: title.endDate,
                              startDate: title.startDate,
                              title: title.titleI18n[0].title
                            };
                          });
                        })]);

                      case 2:
                        _ref3 = _context.sent;
                        _ref4 = _slicedToArray(_ref3, 5);
                        departments = _ref4[0];
                        offices = _ref4[1];
                        labs = _ref4[2];
                        profileI18n = _ref4[3];
                        titles = _ref4[4];
                        return _context.abrupt("return", {
                          email: profile.email,
                          name: profileI18n.name,
                          personalWeb: profile.email,
                          photo: profile.photo,
                          position: profile.position,
                          profileId: profile.profileId,
                          titles: titles,
                          departments: departments,
                          offices: offices,
                          labs: labs
                        });

                      case 10:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, this);
              }));

              return function (_x) {
                return _ref2.apply(this, arguments);
              };
            }()));
          });

        case 6:
          data = _context2.sent;
          table.database.close();
          return _context2.abrupt("return", data);

        case 9:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2, this);
})));

/***/ }),

/***/ "./routes/about.js":
/*!*************************!*\
  !*** ./routes/about.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for `/about`


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/about`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/award`

router.get(/^\/award$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/award.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/contact`

router.get(/^\/contact$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/contact.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/intro`

router.get(/^\/intro$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/intro.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/faculty`

router.get(/^\/faculty$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/faculty.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/faculty/[id]`

router.get(/^\/faculty\/[0-9]+$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/faculty-detail.").concat(req.query.language, ".html"));
}); // Resolve URL `/about/staff`

router.get(/^\/staff$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/about/staff.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/announcement.js":
/*!********************************!*\
  !*** ./routes/announcement.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /announcement


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/announcement`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/announcement/index.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/activity

router.get(/^\/activity$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/announcement/activity.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/all

router.get(/^\/all$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/announcement/all.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/recruitment

router.get(/^\/recruitment$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/announcement/recruitment.").concat(req.query.language, ".html"));
}); // Resolve URL /announcement/[id]

router.get(/^\/\d+$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/announcement/announcement.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/home.js":
/*!************************!*\
  !*** ./routes/home.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /home


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
}); // Route to login page

router.get('/login', function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
}); // Route to search page

router.get('/search', function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
}); // Route to calender page

router.get('/calendar', function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/home/index.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/research.js":
/*!****************************!*\
  !*** ./routes/research.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /research


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/research`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/research/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/research/groups`

router.get(/^\/groups$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/research/groups.").concat(req.query.language, ".html"));
}); // Resolve URL `/research/labs`

router.get(/^\/labs$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/research/labs.").concat(req.query.language, ".html"));
}); // Resolve URL `/research/publications`

router.get(/^\/publications$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/research/publications.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/resource.js":
/*!****************************!*\
  !*** ./routes/resource.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /resource


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/resource`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/index.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/rule`

router.get(/^\/rule$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/rule.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/rent`

router.get(/^\/rent$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/rent.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/fix`

router.get(/^\/fix$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/fix.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/ieet`

router.get(/^\/ieet$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/ieet.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/sitemap`

router.get(/^\/sitemap$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/sitemap.").concat(req.query.language, ".html"));
}); // Resolve URL `resource/alumni`

router.get(/^\/alumni$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/resource/alumni.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/student.js":
/*!***************************!*\
  !*** ./routes/student.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for /student


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/student`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/college`

router.get(/^\/college/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/college.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/course`

router.get(/^\/course$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/course.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/international`

router.get(/^\/international$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/international.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/international`

router.get(/^\/internship$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/internship.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/master`

router.get(/^\/master$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/master.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/phd`

router.get(/^\/phd$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/phd.").concat(req.query.language, ".html"));
}); // Resolve URL `/student/scholarship`

router.get(/^\/scholarship$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/student/scholarship.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/urls.js":
/*!************************!*\
  !*** ./routes/urls.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var routes_home_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! routes/home.js */ "./routes/home.js");
/* harmony import */ var routes_student_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! routes/student.js */ "./routes/student.js");
/* harmony import */ var routes_about_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! routes/about.js */ "./routes/about.js");
/* harmony import */ var routes_research_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! routes/research.js */ "./routes/research.js");
/* harmony import */ var routes_announcement_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! routes/announcement.js */ "./routes/announcement.js");
/* harmony import */ var routes_resource_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! routes/resource.js */ "./routes/resource.js");
/* harmony import */ var routes_user_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! routes/user.js */ "./routes/user.js");








var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router();
router.use('/', routes_home_js__WEBPACK_IMPORTED_MODULE_1__["default"]); // Resolve URL /about

router.use('/about', routes_about_js__WEBPACK_IMPORTED_MODULE_3__["default"]); // Resolve URL /announcement

router.use('/announcement', routes_announcement_js__WEBPACK_IMPORTED_MODULE_5__["default"]); // Resolve URL /research

router.use('/research', routes_research_js__WEBPACK_IMPORTED_MODULE_4__["default"]); // Resolve URL /resource

router.use('/resource', routes_resource_js__WEBPACK_IMPORTED_MODULE_6__["default"]); // Resolve URL /student

router.use('/student', routes_student_js__WEBPACK_IMPORTED_MODULE_2__["default"]); // Resolve URL /user

router.use('/user', routes_user_js__WEBPACK_IMPORTED_MODULE_7__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./routes/user.js":
/*!************************!*\
  !*** ./routes/user.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
// Router for `/user`


var router = express__WEBPACK_IMPORTED_MODULE_0___default.a.Router(); // Resolve URL `/user`

router.get(/^\/$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/user/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/profile`

router.get(/^\/profile$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/user/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/announcement`

router.get(/^\/announcement$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/user/announcement/index.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/announcement`

router.get(/^\/announcement\/add$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/user/announcement/add.").concat(req.query.language, ".html"));
}); // Resolve URL `/user/announcement`

router.get(/^\/announcement\/edit\/(\d+)$/, function (req, res) {
  res.sendFile("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/html/user/announcement/edit.").concat(req.query.language, ".html"));
});
/* harmony default export */ __webpack_exports__["default"] = (router);

/***/ }),

/***/ "./server.js":
/*!*******************!*\
  !*** ./server.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ "express");
/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! settings/server/config.js */ "./settings/server/config.js");
/* harmony import */ var settings_language_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! settings/language/middleware */ "./settings/language/middleware.js");
/* harmony import */ var apis_urls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! apis/urls */ "./apis/urls.js");
/* harmony import */ var routes_urls__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! routes/urls */ "./routes/urls.js");




 // Start server.

var server = express__WEBPACK_IMPORTED_MODULE_0___default()();
server.listen(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].port); // Set static files routes.

server.use('/css', express__WEBPACK_IMPORTED_MODULE_0___default.a.static("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/css")));
server.use('/js', express__WEBPACK_IMPORTED_MODULE_0___default.a.static("".concat(settings_server_config_js__WEBPACK_IMPORTED_MODULE_1__["default"].projectRoot, "/static/dist/js"))); // Set language option.

server.use(settings_language_middleware__WEBPACK_IMPORTED_MODULE_2__["default"]); // Set web server routes.

server.use('/', routes_urls__WEBPACK_IMPORTED_MODULE_4__["default"]); // Set web server api routes.

server.use('/api', apis_urls__WEBPACK_IMPORTED_MODULE_3__["default"]);

/***/ }),

/***/ "./settings/database/config.js":
/*!*************************************!*\
  !*** ./settings/database/config.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Database settings.
 * @namespace
 * @readonly {string} username   - Database server user account.
 * @readonly {string} password   - Database server user password.
 * @readonly {string} domainName - Database server host address.
 * @readonly {number} port       - Database server port.
 * @readonly {string} protocol   - Which database server is used.
 * @readonly {string} host       - Get database server url.
 */
var config = {};
Object.defineProperties(config, {
  'username': {
    value: 'backend'
  },
  'password': {
    value: 'nckucsie@20180412'
  },
  'domainName': {
    value: '140.116.245.105'
  },
  'port': {
    value: 3306
  },
  'protocol': {
    value: 'mysql'
  },
  'host': {
    value: function value(databaseName) {
      return "".concat(this.protocol, "://").concat(this.username, ":").concat(this.password, "@").concat(this.domainName, ":").concat(this.port, "/").concat(databaseName);
    }
  },
  'projectRoot': {
    get: function get() {
      return '/home/kinoe/Desktop/NCKU-CSIE-Website';
    }
  }
});
/* harmony default export */ __webpack_exports__["default"] = (config);

/***/ }),

/***/ "./settings/database/connect.js":
/*!**************************************!*\
  !*** ./settings/database/connect.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sequelize */ "sequelize");
/* harmony import */ var sequelize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sequelize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ "./settings/database/config.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



/* harmony default export */ __webpack_exports__["default"] = (/*#__PURE__*/(function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(databaseName) {
    var debug,
        database,
        _args = arguments;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            debug = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;
            database = new sequelize__WEBPACK_IMPORTED_MODULE_0___default.a(databaseName, _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].username, _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].password, {
              host: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].domainName,
              dialect: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].protocol,
              operatorsAliases: false,
              pool: _config_js__WEBPACK_IMPORTED_MODULE_1__["default"].pool,
              logging: debug,
              dialectOptions: {
                useUTC: false
              },
              timezone: '+08:00'
            });
            _context.prev = 2;
            _context.next = 5;
            return database.authenticate();

          case 5:
            _context.next = 11;
            break;

          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](2);
            console.error('Unable to connect to the database: ', _context.t0);
            throw new Error('database need to be checked.');

          case 11:
            return _context.abrupt("return", database);

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[2, 7]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})());

/***/ }),

/***/ "./settings/default-value/announcement/config.js":
/*!*******************************************************!*\
  !*** ./settings/default-value/announcement/config.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var defaultValue = {};
Object.defineProperties(defaultValue, {
  'startTime': {
    value: new Date('2018/07/01').toISOString()
  },
  'endTime': {
    get: function get() {
      return new Date(Date.now()).toISOString();
    }
  },
  'page': {
    value: 1
  },
  'langauge': {
    value: 'zh-TW'
  },
  'announcementsPerPage': {
    value: 6
  }
});
/* harmony default export */ __webpack_exports__["default"] = (defaultValue);

/***/ }),

/***/ "./settings/language/config.js":
/*!*************************************!*\
  !*** ./settings/language/config.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var language = {
  support: ['zh-TW', 'en-US'],
  default: 'zh-TW'
};
/* harmony default export */ __webpack_exports__["default"] = (language);

/***/ }),

/***/ "./settings/language/middleware.js":
/*!*****************************************!*\
  !*** ./settings/language/middleware.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var settings_language_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! settings/language/config.js */ "./settings/language/config.js");

/* harmony default export */ __webpack_exports__["default"] = (function (req, res, next) {
  // No language option provided, using default option.
  req.query.language = req.query.language || settings_language_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].default; // Invalid language option provided, response with error.

  if (!settings_language_config_js__WEBPACK_IMPORTED_MODULE_0__["default"].support.includes(req.query.language))
    /* eslint no-magic-numbers: 'off' */
    res.status(400).send('invalid language option'); // Valid language option provided, call `next()` to continue routing.
  else next();
});

/***/ }),

/***/ "./settings/server/config.js":
/*!***********************************!*\
  !*** ./settings/server/config.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Web server settings
 * @namespace
 * @readonly {string} domainName - Web server host address.
 * @readonly {string} protocol   - Whick protocol web server is using, can be either 'http' or 'https'.
 * @readonly {number} port       - Web server port.
 * @readonly {string} host       - Get web server url.
 * @readonly {string} staticHost - Get static file server url.
 */
var config = {};
Object.defineProperties(config, {
  'domainName': {
    value: 'localhost'
  },
  'protocol': {
    value: 'http'
  },
  'port': {
    value: 3000
  },
  'host': {
    get: function get() {
      return ''.concat(config.protocol, '://').concat(config.domainName).concat(config.port === '80' || config.port === '443' ? '' : ':'.concat(config.port));
    }
  },
  'staticHost': {
    get: function get() {
      return config.host;
    }
  },
  'projectRoot': {
    get: function get() {
      return '/home/kinoe/Desktop/NCKU-CSIE-Website';
    }
  }
});
/* harmony default export */ __webpack_exports__["default"] = (config);

/***/ }),

/***/ "./test/models/announcement/operation/validate.js":
/*!********************************************************!*\
  !*** ./test/models/announcement/operation/validate.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var validTags = Object.freeze(['award', 'college', 'competition', 'conference', 'course', 'exhibition', 'faculty', 'international', 'internship', 'master', 'phd', 'recruitment', 'rule', 'scholarship', 'speech']);
/* harmony default export */ __webpack_exports__["default"] = ({
  isValidTags: function isValidTags(tags) {
    return tags.filter(function (tag) {
      return validTags.indexOf(tag) < 0;
    }).length === 0;
  },
  isValidDate: function isValidDate(date) {
    return date instanceof Date && !Number.isNaN(date);
  },
  isValidPage: function isValidPage(page) {
    return !Number.isNaN(Number(page)) && Number.isInteger(Number(page)) && Number(page) > 0;
  }
});

/***/ }),

/***/ 0:
/*!****************************************!*\
  !*** multi babel-polyfill ./server.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! babel-polyfill */"babel-polyfill");
module.exports = __webpack_require__(/*! /home/kinoe/Desktop/NCKU-CSIE-Website/server.js */"./server.js");


/***/ }),

/***/ "babel-polyfill":
/*!*********************************!*\
  !*** external "babel-polyfill" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("babel-polyfill");

/***/ }),

/***/ "body-parser":
/*!******************************!*\
  !*** external "body-parser" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("body-parser");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("express");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),

/***/ "sequelize":
/*!****************************!*\
  !*** external "sequelize" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("sequelize");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYXBpcy9hbm5vdW5jZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vYXBpcy9mYWN1bHR5LmpzIiwid2VicGFjazovLy8uL2FwaXMvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9tb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vZGVsZXRlLWFubm91bmNlbWVudEZpbGVzLmpzIiwid2VicGFjazovLy8uL21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2RlbGV0ZS1hbm5vdW5jZW1lbnRUYWdzLmpzIiwid2VicGFjazovLy8uL21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2RlbGV0ZS1hbm5vdW5jZW1lbnRzLmpzIiwid2VicGFjazovLy8uL21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbGwtYW5ub3VuY2VtZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9tb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9nZXQtYWxsLXBhZ2VzLmpzIiwid2VicGFjazovLy8uL21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbGwtcGlubmVkLWFubm91bmNlbWVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vZ2V0LWFubm91bmNlbWVudC1hbGwtbGFuZ3VhZ2VzLmpzIiwid2VicGFjazovLy8uL21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbm5vdW5jZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vZ2V0LWFubm91bmNlbWVudHMtYnktdGFncy5qcyIsIndlYnBhY2s6Ly8vLi9tb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9nZXQtcGFnZXMtYnktdGFncy5qcyIsIndlYnBhY2s6Ly8vLi9tb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9nZXQtcGlubmVkLWFubm91bmNlbWVudHMtYnktdGFncy5qcyIsIndlYnBhY2s6Ly8vLi9tb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9wYXRjaC1hbm5vdW5jZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vcG9zdC1hbm5vdW5jZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vcG9zdC1hbm5vdW5jZW1lbnRGaWxlLmpzIiwid2VicGFjazovLy8uL21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL3Bvc3QtYW5ub3VuY2VtZW50VGFncy5qcyIsIndlYnBhY2s6Ly8vLi9tb2RlbHMvZmFjdWx0eS9vcGVyYXRpb24vYXNzb2NpYXRpb25zLmpzIiwid2VicGFjazovLy8uL21vZGVscy9mYWN1bHR5L29wZXJhdGlvbi9nZXQtZmFjdWx0eS1kZXRhaWwuanMiLCJ3ZWJwYWNrOi8vLy4vbW9kZWxzL2ZhY3VsdHkvb3BlcmF0aW9uL2dldC1mYWN1bHR5LmpzIiwid2VicGFjazovLy8uL3JvdXRlcy9hYm91dC5qcyIsIndlYnBhY2s6Ly8vLi9yb3V0ZXMvYW5ub3VuY2VtZW50LmpzIiwid2VicGFjazovLy8uL3JvdXRlcy9ob21lLmpzIiwid2VicGFjazovLy8uL3JvdXRlcy9yZXNlYXJjaC5qcyIsIndlYnBhY2s6Ly8vLi9yb3V0ZXMvcmVzb3VyY2UuanMiLCJ3ZWJwYWNrOi8vLy4vcm91dGVzL3N0dWRlbnQuanMiLCJ3ZWJwYWNrOi8vLy4vcm91dGVzL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vcm91dGVzL3VzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc2VydmVyLmpzIiwid2VicGFjazovLy8uL3NldHRpbmdzL2RhdGFiYXNlL2NvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9zZXR0aW5ncy9kYXRhYmFzZS9jb25uZWN0LmpzIiwid2VicGFjazovLy8uL3NldHRpbmdzL2RlZmF1bHQtdmFsdWUvYW5ub3VuY2VtZW50L2NvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9zZXR0aW5ncy9sYW5ndWFnZS9jb25maWcuanMiLCJ3ZWJwYWNrOi8vLy4vc2V0dGluZ3MvbGFuZ3VhZ2UvbWlkZGxld2FyZS5qcyIsIndlYnBhY2s6Ly8vLi9zZXR0aW5ncy9zZXJ2ZXIvY29uZmlnLmpzIiwid2VicGFjazovLy8uL3Rlc3QvbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vdmFsaWRhdGUuanMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcG9seWZpbGxcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJib2R5LXBhcnNlclwiIiwid2VicGFjazovLy9leHRlcm5hbCBcImV4cHJlc3NcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwYXRoXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwic2VxdWVsaXplXCIiXSwibmFtZXMiOlsiYXBpcyIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsInRhZ3MiLCJxdWVyeSIsIkFycmF5Iiwib2YiLCJnZXRBbGxBbm5vdW5jZW1lbnRzIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsInBhZ2UiLCJsYW5ndWFnZSIsInJlc3VsdCIsImVycm9yIiwic3RhdHVzIiwibGVuZ3RoIiwiZW5kIiwiZ2V0QWxsUGFnZXMiLCJwYWdlTnVtYmVyIiwiZ2V0QWxsUGlubmVkQW5ub3VuY2VtZW50cyIsImdldEFubm91bmNlbWVudHNCeVRhZ3MiLCJnZXRQYWdlc0J5VGFncyIsImdldFBpbm5lZEFubm91bmNlbWVudHNCeVRhZ3MiLCJnZXRBbm5vdW5jZW1lbnRBbGxMYW5ndWFnZXMiLCJhbm5vdW5jZW1lbnRJZCIsInBhcmFtcyIsImdldEFubm91bmNlbWVudCIsInBvc3QiLCJwb3N0QW5ub3VuY2VtZW50IiwiYW5ub3VuY2VtZW50RGF0YSIsImJvZHkiLCJwYXRjaCIsInBhdGNoQW5ub3VuY2VtZW50IiwiaWQiLCJkZWxldGUiLCJkZWxldGVBbm5vdW5jZW1lbnQiLCJwb3N0QW5ub3VuY2VtZW50RmlsZSIsImFubm91bmNlbWVudEZpbGVEYXRhIiwiZGVsZXRlQW5ub3VuY2VtZW50RmlsZXMiLCJwb3N0QW5ub3VuY2VtZW50VGFncyIsInRhZ0lkIiwic3BsaXQiLCJtYXAiLCJzIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJkZWxldGVBbm5vdW5jZW1lbnRUYWdzIiwiZ2V0RmFjdWx0eSIsImdldEZhY3VsdHlEZXRhaWwiLCJwcm9maWxlSWQiLCJhbm5vdW5jZW1lbnQiLCJmYWN1bHR5IiwiY29ubmVjdCIsImFubm91bmNlbWVudERhdGFiYXNlIiwidGFibGVzUm9vdCIsInBhdGgiLCJqb2luIiwiY29uZmlnIiwicHJvamVjdFJvb3QiLCJ0YWJsZSIsImFubm91bmNlbWVudEZpbGVJMThuIiwiaW1wb3J0IiwiYW5ub3VuY2VtZW50RmlsZSIsImFubm91bmNlbWVudEkxOG4iLCJhbm5vdW5jZW1lbnRUYWciLCJ0YWdJMThuIiwidGFnIiwiaGFzTWFueSIsImFzIiwiZm9yZWlnbktleSIsInNvdXJjZUtleSIsIm9uRGVsZXRlIiwiZGF0YWJhc2UiLCJmaWxlSWQiLCJhc3NvY2lhdGlvbnMiLCJkZXN0cm95Iiwid2hlcmUiLCJ0aGVuIiwicm93Q291bnQiLCJjbG9zZSIsImRlZmF1bHRWYWx1ZSIsIlNldCIsIkRhdGUiLCJ2YWxpZGF0ZSIsImlzVmFsaWRUYWdzIiwiaXNWYWxpZERhdGUiLCJpc1ZhbGlkUGFnZSIsImRhdGEiLCJmaW5kQWxsIiwiYXR0cmlidXRlcyIsInVwZGF0ZVRpbWUiLCJPcCIsImJldHdlZW4iLCJpc1B1Ymxpc2hlZCIsImlzQXBwcm92ZWQiLCJpbmNsdWRlIiwibW9kZWwiLCJvZmZzZXQiLCJhbm5vdW5jZW1lbnRzUGVyUGFnZSIsImxpbWl0IiwiYW5ub3VuY2VtZW50cyIsInRpdGxlIiwiY29udGVudCIsIm5hbWUiLCJpbiIsImlkcyIsImNvdW50IiwiZGlzdGluY3QiLCJNYXRoIiwiY2VpbCIsImlzUGlubmVkIiwiZmluZE9uZSIsImF1dGhvciIsInZpZXdzIiwidXBsb2FkVGltZSIsInR5cGUiLCJ1cmwiLCJwdWJsaXNoVGltZSIsImZpbGVzIiwic2VxdWVsaXplIiwiZ3JvdXAiLCJoYXZpbmciLCJsaXRlcmFsIiwiaTE4biIsImFmZmVjdGVkQ291bnQiLCJpIiwidXBkYXRlIiwiaXNMYW5nRXhpc3QiLCJsYW5ndWFnZVNldHRpbmdzIiwic3VwcG9ydCIsImZvckVhY2giLCJsYW5nIiwiRXJyb3IiLCJmaWxlIiwiY3JlYXRlIiwiYW5ub3VuY2VtZW50VGFnRGF0YSIsImJ1bGtDcmVhdGUiLCJhbm5vdW5jZW1lbnRUYWdzIiwidGVhY2hlckRhdGFiYXNlIiwiY29uZmVyZW5jZUkxOG4iLCJjb25mZXJlbmNlIiwiZGVwYXJ0bWVudEkxOG4iLCJkZXBhcnRtZW50IiwiZWR1Y2F0aW9uSTE4biIsImVkdWNhdGlvbiIsImV4cGVyaWVuY2VJMThuIiwiZXhwZXJpZW5jZSIsImhvbm9ySTE4biIsImhvbm9yIiwibGFiSTE4biIsImxhYiIsIm9mZmljZUkxOG4iLCJvZmZpY2UiLCJwYXRlbnRJMThuIiwicGF0ZW50IiwicHJvZmlsZUkxOG4iLCJwcm9maWxlIiwicHJvamVjdEkxOG4iLCJwcm9qZWN0IiwicHVibGljYXRpb25JMThuIiwicHVibGljYXRpb24iLCJzcGVjaWFsdHkiLCJ0ZWNobm9sb2d5VHJhbnNmZXIiLCJ0ZWNobm9sb2d5VHJhbnNmZXJJMThuIiwidGl0bGVJMThuIiwiUHJvbWlzZSIsImFsbCIsImNvbmZlcmVuY2VzIiwiaG9zdERhdGUiLCJkZXBhcnRtZW50cyIsImVkdWNhdGlvbnMiLCJkZWdyZWUiLCJlbmRZZWFyIiwibmF0aW9uIiwic3RhcnRZZWFyIiwibWFqb3IiLCJzY2hvb2wiLCJleHBlcmllbmNlcyIsIm9yZ2FuaXphdGlvbiIsImhvbm9ycyIsImhvbm9yWWVhciIsImxhYnMiLCJsYWJXZWIiLCJ0ZWwiLCJhZGRyZXNzIiwib2ZmaWNlcyIsInBhdGVudHMiLCJhcHBsaWNhdGlvbkRhdGUiLCJjZXJ0aWZpY2F0aW9uTnVtYmVyIiwiZXhwaXJlRGF0ZSIsImlzc3VlRGF0ZSIsIm5zY051bWJlciIsImludmVudG9yIiwicGF0ZW50T3duZXIiLCJlbWFpbCIsImZheCIsInBlcnNvbmFsV2ViIiwicGhvdG8iLCJwb3NpdGlvbiIsInByb2plY3RzIiwiY2F0ZWdvcnkiLCJwdWJsaWNhdGlvbnMiLCJpc3N1ZVllYXIiLCJ0ZWNobm9sb2d5VHJhbnNmZXJzIiwiZW5kRGF0ZSIsInN0YXJ0RGF0ZSIsImF1dGhvcml0eSIsInJlY2VpdmVyIiwidGVjaG5vbG9neSIsInRpdGxlcyIsInNwZWNpYWx0aWVzIiwicHJvZmlsZXMiLCJyb3V0ZXIiLCJzZW5kRmlsZSIsImhvbWUiLCJhYm91dCIsInJlc2VhcmNoIiwicmVzb3VyY2UiLCJzdHVkZW50IiwidXNlciIsInNlcnZlciIsImxpc3RlbiIsInBvcnQiLCJzdGF0aWMiLCJyb3V0ZXMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidmFsdWUiLCJkYXRhYmFzZU5hbWUiLCJwcm90b2NvbCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJkb21haW5OYW1lIiwiZGVidWciLCJTZXF1ZWxpemUiLCJob3N0IiwiZGlhbGVjdCIsIm9wZXJhdG9yc0FsaWFzZXMiLCJwb29sIiwibG9nZ2luZyIsImRpYWxlY3RPcHRpb25zIiwidXNlVVRDIiwidGltZXpvbmUiLCJhdXRoZW50aWNhdGUiLCJjb25zb2xlIiwidG9JU09TdHJpbmciLCJub3ciLCJkZWZhdWx0IiwibmV4dCIsImluY2x1ZGVzIiwic2VuZCIsImNvbmNhdCIsInZhbGlkVGFncyIsImZyZWV6ZSIsImZpbHRlciIsImluZGV4T2YiLCJkYXRlIiwiaXNOYU4iLCJpc0ludGVnZXIiXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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QUFtQ2tDLE1BQU0sQ0FBQ3NOLFNBQVAsQ0FBa0J0TixNQUFNLENBQUVsQyxJQUFGLENBQXhCLENBQW5DLElBQXlFa0MsTUFBTSxDQUFFbEMsSUFBRixDQUFOLEdBQWlCLENBQWpHO0FBQ0g7QUFYVSxDQUFmLEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2xCQSwyQzs7Ozs7Ozs7Ozs7QUNBQSx3Qzs7Ozs7Ozs7Ozs7QUNBQSxvQzs7Ozs7Ozs7Ozs7QUNBQSxpQzs7Ozs7Ozs7Ozs7QUNBQSxzQyIsImZpbGUiOiJzZXJ2ZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5cbmltcG9ydCBnZXRBbGxBbm5vdW5jZW1lbnRzIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbGwtYW5ub3VuY2VtZW50cy5qcyc7XG5pbXBvcnQgZ2V0QW5ub3VuY2VtZW50c0J5VGFncyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9nZXQtYW5ub3VuY2VtZW50cy1ieS10YWdzLmpzJztcbmltcG9ydCBnZXRBbGxQaW5uZWRBbm5vdW5jZW1lbnRzIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbGwtcGlubmVkLWFubm91bmNlbWVudHMuanMnO1xuaW1wb3J0IGdldFBpbm5lZEFubm91bmNlbWVudHNCeVRhZ3MgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vZ2V0LXBpbm5lZC1hbm5vdW5jZW1lbnRzLWJ5LXRhZ3MuanMnO1xuaW1wb3J0IGdldEFsbFBhZ2VzIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbGwtcGFnZXMuanMnO1xuaW1wb3J0IGdldFBhZ2VzQnlUYWdzIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1wYWdlcy1ieS10YWdzLmpzJztcbmltcG9ydCBnZXRBbm5vdW5jZW1lbnQgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vZ2V0LWFubm91bmNlbWVudC5qcyc7XG5pbXBvcnQgZ2V0QW5ub3VuY2VtZW50QWxsTGFuZ3VhZ2VzIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2dldC1hbm5vdW5jZW1lbnQtYWxsLWxhbmd1YWdlcy5qcyc7XG5cbmltcG9ydCBwb3N0QW5ub3VuY2VtZW50IGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL3Bvc3QtYW5ub3VuY2VtZW50LmpzJztcbmltcG9ydCBwb3N0QW5ub3VuY2VtZW50VGFncyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9wb3N0LWFubm91bmNlbWVudFRhZ3MuanMnO1xuaW1wb3J0IHBvc3RBbm5vdW5jZW1lbnRGaWxlIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL3Bvc3QtYW5ub3VuY2VtZW50RmlsZS5qcyc7XG5cbmltcG9ydCBwYXRjaEFubm91bmNlbWVudCBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9wYXRjaC1hbm5vdW5jZW1lbnQuanMnO1xuXG5pbXBvcnQgZGVsZXRlQW5ub3VuY2VtZW50IGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2RlbGV0ZS1hbm5vdW5jZW1lbnRzLmpzJztcbmltcG9ydCBkZWxldGVBbm5vdW5jZW1lbnRUYWdzIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2RlbGV0ZS1hbm5vdW5jZW1lbnRUYWdzLmpzJztcbmltcG9ydCBkZWxldGVBbm5vdW5jZW1lbnRGaWxlcyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9kZWxldGUtYW5ub3VuY2VtZW50RmlsZXMuanMnO1xuXG5jb25zdCBhcGlzID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuYXBpcy51c2UoIGJvZHlQYXJzZXIuanNvbigpICk7XG5cbmFwaXMuZ2V0KCAvXlxcL2FsbC1hbm5vdW5jZW1lbnQkLywgYXN5bmMgKCByZXEsIHJlcyApID0+IHtcbiAgICBsZXQgdGFncyA9IHJlcS5xdWVyeS50YWdzO1xuICAgIGlmICggdHlwZW9mIHRhZ3MgPT09ICdzdHJpbmcnIClcbiAgICAgICAgdGFncyA9IEFycmF5Lm9mKCB0YWdzICk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBnZXRBbGxBbm5vdW5jZW1lbnRzKCB7XG4gICAgICAgIHRhZ3MsXG4gICAgICAgIHN0YXJ0VGltZTogcmVxLnF1ZXJ5LnN0YXJ0VGltZSxcbiAgICAgICAgZW5kVGltZTogICByZXEucXVlcnkuZW5kVGltZSxcbiAgICAgICAgcGFnZTogICAgICByZXEucXVlcnkucGFnZSxcbiAgICAgICAgbGFuZ3VhZ2U6ICByZXEucXVlcnkubGFuZ3VhZ2UsXG4gICAgfSApO1xuXG4gICAgaWYgKCByZXN1bHQuZXJyb3IgKVxuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNDAwICkuanNvbiggcmVzdWx0ICk7XG4gICAgZWxzZSBpZiAoICFyZXN1bHQubGVuZ3RoIClcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDQwNCApLmVuZCgpO1xuICAgIGVsc2VcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDIwMCApLmpzb24oIHJlc3VsdCApO1xufSApO1xuXG5hcGlzLmdldCggL15cXC9hbGwtcGFnZXMkLywgYXN5bmMgKCByZXEsIHJlcyApID0+IHtcbiAgICBsZXQgdGFncyA9IHJlcS5xdWVyeS50YWdzO1xuICAgIGlmICggdHlwZW9mIHRhZ3MgPT09ICdzdHJpbmcnIClcbiAgICAgICAgdGFncyA9IEFycmF5Lm9mKCB0YWdzICk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBnZXRBbGxQYWdlcygge1xuICAgICAgICB0YWdzLFxuICAgICAgICBzdGFydFRpbWU6IHJlcS5xdWVyeS5zdGFydFRpbWUsXG4gICAgICAgIGVuZFRpbWU6ICAgcmVxLnF1ZXJ5LmVuZFRpbWUsXG4gICAgfSApO1xuXG4gICAgaWYgKCByZXN1bHQuZXJyb3IgKVxuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNDAwICkuanNvbiggcmVzdWx0ICk7XG4gICAgZWxzZSBpZiAoICFyZXN1bHQucGFnZU51bWJlciApXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA0MDQgKS5lbmQoKTtcbiAgICBlbHNlXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCAyMDAgKS5qc29uKCByZXN1bHQgKTtcbn0gKTtcblxuYXBpcy5nZXQoIC9eXFwvYWxsLXBpbm5lZCQvLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIGxldCB0YWdzID0gcmVxLnF1ZXJ5LnRhZ3M7XG4gICAgaWYgKCB0eXBlb2YgdGFncyA9PT0gJ3N0cmluZycgKVxuICAgICAgICB0YWdzID0gQXJyYXkub2YoIHRhZ3MgKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdldEFsbFBpbm5lZEFubm91bmNlbWVudHMoIHtcbiAgICAgICAgdGFncyxcbiAgICAgICAgc3RhcnRUaW1lOiByZXEucXVlcnkuc3RhcnRUaW1lLFxuICAgICAgICBlbmRUaW1lOiAgIHJlcS5xdWVyeS5lbmRUaW1lLFxuICAgICAgICBsYW5ndWFnZTogIHJlcS5xdWVyeS5sYW5ndWFnZSxcbiAgICB9ICk7XG5cbiAgICBpZiAoIHJlc3VsdC5lcnJvciApXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA0MDAgKS5qc29uKCByZXN1bHQgKTtcbiAgICBlbHNlIGlmICggIXJlc3VsdC5sZW5ndGggKVxuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNDA0ICkuZW5kKCk7XG4gICAgZWxzZVxuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggMjAwICkuanNvbiggcmVzdWx0ICk7XG59ICk7XG5cbmFwaXMuZ2V0KCAvXlxcL3RhZ3MtYW5ub3VuY2VtZW50JC8sIGFzeW5jICggcmVxLCByZXMgKSA9PiB7XG4gICAgbGV0IHRhZ3MgPSByZXEucXVlcnkudGFncztcbiAgICBpZiAoIHR5cGVvZiB0YWdzID09PSAnc3RyaW5nJyApXG4gICAgICAgIHRhZ3MgPSBBcnJheS5vZiggdGFncyApO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZ2V0QW5ub3VuY2VtZW50c0J5VGFncygge1xuICAgICAgICB0YWdzLFxuICAgICAgICBzdGFydFRpbWU6IHJlcS5xdWVyeS5zdGFydFRpbWUsXG4gICAgICAgIGVuZFRpbWU6ICAgcmVxLnF1ZXJ5LmVuZFRpbWUsXG4gICAgICAgIHBhZ2U6ICAgICAgcmVxLnF1ZXJ5LnBhZ2UsXG4gICAgICAgIGxhbmd1YWdlOiAgcmVxLnF1ZXJ5Lmxhbmd1YWdlLFxuICAgIH0gKTtcblxuICAgIGlmICggcmVzdWx0LmVycm9yIClcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDQwMCApLmpzb24oIHJlc3VsdCApO1xuICAgIGVsc2UgaWYgKCAhcmVzdWx0Lmxlbmd0aCApXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA0MDQgKS5lbmQoKTtcbiAgICBlbHNlXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCAyMDAgKS5qc29uKCByZXN1bHQgKTtcbn0gKTtcblxuYXBpcy5nZXQoIC9eXFwvdGFncy1wYWdlcyQvLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIGxldCB0YWdzID0gcmVxLnF1ZXJ5LnRhZ3M7XG4gICAgaWYgKCB0eXBlb2YgdGFncyA9PT0gJ3N0cmluZycgKVxuICAgICAgICB0YWdzID0gQXJyYXkub2YoIHRhZ3MgKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdldFBhZ2VzQnlUYWdzKCB7XG4gICAgICAgIHRhZ3MsXG4gICAgICAgIHN0YXJ0VGltZTogcmVxLnF1ZXJ5LnN0YXJ0VGltZSxcbiAgICAgICAgZW5kVGltZTogICByZXEucXVlcnkuZW5kVGltZSxcbiAgICB9ICk7XG5cbiAgICBpZiAoIHJlc3VsdC5lcnJvciApXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA0MDAgKS5qc29uKCByZXN1bHQgKTtcbiAgICBlbHNlIGlmICggIXJlc3VsdC5wYWdlTnVtYmVyIClcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDQwNCApLmVuZCgpO1xuICAgIGVsc2VcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDIwMCApLmpzb24oIHJlc3VsdCApO1xufSApO1xuXG5hcGlzLmdldCggL15cXC90YWdzLXBpbm5lZCQvLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIGxldCB0YWdzID0gcmVxLnF1ZXJ5LnRhZ3M7XG4gICAgaWYgKCB0eXBlb2YgdGFncyA9PT0gJ3N0cmluZycgKVxuICAgICAgICB0YWdzID0gQXJyYXkub2YoIHRhZ3MgKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdldFBpbm5lZEFubm91bmNlbWVudHNCeVRhZ3MoIHtcbiAgICAgICAgdGFncyxcbiAgICAgICAgc3RhcnRUaW1lOiByZXEucXVlcnkuc3RhcnRUaW1lLFxuICAgICAgICBlbmRUaW1lOiAgIHJlcS5xdWVyeS5lbmRUaW1lLFxuICAgICAgICBsYW5ndWFnZTogIHJlcS5xdWVyeS5sYW5ndWFnZSxcbiAgICB9ICk7XG5cbiAgICBpZiAoIHJlc3VsdC5lcnJvciApXG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA0MDAgKS5qc29uKCByZXN1bHQgKTtcbiAgICBlbHNlIGlmICggIXJlc3VsdC5sZW5ndGggKVxuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNDA0ICkuZW5kKCk7XG4gICAgZWxzZVxuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggMjAwICkuanNvbiggcmVzdWx0ICk7XG59ICk7XG5cbmFwaXMuZ2V0KCAvXlxcL2FsbC1sYW5ndWFnZXNcXC8oXFxkKykkLywgYXN5bmMgKCByZXEsIHJlcyApID0+IHtcbiAgICB0cnkge1xuICAgICAgICByZXMuanNvbiggYXdhaXQgZ2V0QW5ub3VuY2VtZW50QWxsTGFuZ3VhZ2VzKCB7IGFubm91bmNlbWVudElkOiByZXEucGFyYW1zWyAwIF0sIH0gKSApO1xuICAgIH1cbiAgICBjYXRjaCAoIGUgKSB7XG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA0MDQgKS5lbmQoKTtcbiAgICB9XG59ICk7XG5cbmFwaXMuZ2V0KCAvXlxcLyhcXGQrKSQvLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIHJlcy5qc29uKCBhd2FpdCBnZXRBbm5vdW5jZW1lbnQoIHsgYW5ub3VuY2VtZW50SWQ6IHJlcS5wYXJhbXNbIDAgXSwgbGFuZ3VhZ2U6IHJlcS5xdWVyeS5sYW5ndWFnZSwgfSApICk7XG4gICAgfVxuICAgIGNhdGNoICggZSApIHtcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDQwNCApLmVuZCgpO1xuICAgIH1cbn0gKTtcblxuYXBpcy5wb3N0KCAnLycsIGFzeW5jICggcmVxLCByZXMgKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzLmpzb24oIGF3YWl0IHBvc3RBbm5vdW5jZW1lbnQoIHsgYW5ub3VuY2VtZW50RGF0YTogcmVxLmJvZHksIH0gKSApO1xuICAgIH1cbiAgICBjYXRjaCAoIGUgKSB7XG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA1MDAgKS5lbmQoKTtcbiAgICB9XG59ICk7XG5cbmFwaXMucGF0Y2goICcvOmlkJywgYXN5bmMgKCByZXEsIHJlcyApID0+IHtcbiAgICB0cnkge1xuICAgICAgICByZXMuanNvbiggYXdhaXQgcGF0Y2hBbm5vdW5jZW1lbnQoIHsgYW5ub3VuY2VtZW50SWQ6IHJlcS5wYXJhbXMuaWQsIGFubm91bmNlbWVudERhdGE6IHJlcS5ib2R5LCB9ICkgKTtcbiAgICB9XG4gICAgY2F0Y2ggKCBlICkge1xuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNTAwICkuZW5kKCk7XG4gICAgfVxufSApO1xuXG5hcGlzLmRlbGV0ZSggJy86aWQnLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIHJlcy5qc29uKCBhd2FpdCBkZWxldGVBbm5vdW5jZW1lbnQoIHsgYW5ub3VuY2VtZW50SWQ6IHJlcS5wYXJhbXMuaWQsIH0gKSApO1xuICAgIH1cbiAgICBjYXRjaCAoIGUgKSB7XG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA1MDAgKS5lbmQoKTtcbiAgICB9XG59ICk7XG5cbi8vIFRPRE86IE5vdCB5ZXQgZmluaXNoZWRcbmFwaXMucG9zdCggJy86aWQvZmlsZScsIGFzeW5jICggcmVxLCByZXMgKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzLmpzb24oIGF3YWl0IHBvc3RBbm5vdW5jZW1lbnRGaWxlKCB7IGFubm91bmNlbWVudEZpbGVEYXRhOiByZXEuYm9keSwgfSApICk7XG4gICAgfVxuICAgIGNhdGNoICggZSApIHtcbiAgICAgICAgLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6ICdvZmYnICovXG4gICAgICAgIHJlcy5zdGF0dXMoIDUwMCApLmVuZCgpO1xuICAgIH1cbn0gKTtcblxuLy8gVE9ETzogTm90IHlldCBmaW5pc2hlZFxuYXBpcy5kZWxldGUoICcvOmlkL2ZpbGUvOmlkJywgYXN5bmMgKCByZXEsIHJlcyApID0+IHtcbiAgICB0cnkge1xuICAgICAgICByZXMuanNvbiggYXdhaXQgZGVsZXRlQW5ub3VuY2VtZW50RmlsZXMoIHsgYW5ub3VuY2VtZW50RmlsZURhdGE6IHJlcS5ib2R5LCB9ICkgKTtcbiAgICB9XG4gICAgY2F0Y2ggKCBlICkge1xuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNTAwICkuZW5kKCk7XG4gICAgfVxufSApO1xuXG5hcGlzLnBvc3QoICcvOmlkL3RhZ3MnLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIHJlcy5qc29uKCBhd2FpdCBwb3N0QW5ub3VuY2VtZW50VGFncyggeyBhbm5vdW5jZW1lbnRJZDogcmVxLnBhcmFtcy5pZCwgdGFnSWQ6IHJlcS5ib2R5LCB9ICkgKTtcbiAgICB9XG4gICAgY2F0Y2ggKCBlICkge1xuICAgICAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNTAwICkuZW5kKCk7XG4gICAgfVxufSApO1xuXG5hcGlzLmRlbGV0ZSggJy86aWQvdGFncycsIGFzeW5jICggcmVxLCByZXMgKSA9PiB7XG4gICAgY29uc3QgdGFnSWQgPSByZXEucXVlcnkudGFnSWQuc3BsaXQoICcsJyApLm1hcCggcyA9PiBOdW1iZXIucGFyc2VJbnQoIHMsIDEwICkgKTtcbiAgICB0cnkge1xuICAgICAgICByZXMuanNvbiggYXdhaXQgZGVsZXRlQW5ub3VuY2VtZW50VGFncyggeyBhbm5vdW5jZW1lbnRJZDogcmVxLnBhcmFtcy5pZCwgdGFnSWQsIH0gKSApO1xuICAgIH1cbiAgICBjYXRjaCAoIGUgKSB7XG4gICAgICAgIC8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiAnb2ZmJyAqL1xuICAgICAgICByZXMuc3RhdHVzKCA1MDAgKS5lbmQoKTtcbiAgICB9XG59ICk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwaXM7XG4iLCJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IGdldEZhY3VsdHkgZnJvbSAnbW9kZWxzL2ZhY3VsdHkvb3BlcmF0aW9uL2dldC1mYWN1bHR5LmpzJztcbmltcG9ydCBnZXRGYWN1bHR5RGV0YWlsIGZyb20gJ21vZGVscy9mYWN1bHR5L29wZXJhdGlvbi9nZXQtZmFjdWx0eS1kZXRhaWwuanMnO1xuXG5jb25zdCBhcGlzID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuYXBpcy5nZXQoIC9eXFwvJC8sIGFzeW5jICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLmpzb24oIGF3YWl0IGdldEZhY3VsdHkoIHJlcS5xdWVyeS5sYW5ndWFnZSApICk7XG59ICk7XG5cbmFwaXMuZ2V0KCAvXlxcLyhcXGQrKSQvLCBhc3luYyAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5qc29uKCBhd2FpdCBnZXRGYWN1bHR5RGV0YWlsKCB7IHByb2ZpbGVJZDogcmVxLnBhcmFtc1sgMCBdLCBsYW5ndWFnZTogcmVxLnF1ZXJ5Lmxhbmd1YWdlLCB9ICkgKTtcbn0gKTtcblxuZXhwb3J0IGRlZmF1bHQgYXBpcztcbiIsImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5pbXBvcnQgYW5ub3VuY2VtZW50IGZyb20gJ2FwaXMvYW5ub3VuY2VtZW50LmpzJztcbmltcG9ydCBmYWN1bHR5IGZyb20gJ2FwaXMvZmFjdWx0eS5qcyc7XG5cbmNvbnN0IGFwaXMgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBSZXNvbHZlIFVSTCAvYXBpL2Fubm91bmNlbWVudFxuYXBpcy51c2UoICcvYW5ub3VuY2VtZW50JywgYW5ub3VuY2VtZW50ICk7XG5cbi8vIFJlc29sdmUgVVJMIC9hcGkvZmFjdWx0eVxuYXBpcy51c2UoICcvZmFjdWx0eScsIGZhY3VsdHkgKTtcblxuZXhwb3J0IGRlZmF1bHQgYXBpcztcbiIsImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IGNvbmZpZyBmcm9tICdzZXR0aW5ncy9zZXJ2ZXIvY29uZmlnLmpzJztcbmltcG9ydCBjb25uZWN0IGZyb20gJ3NldHRpbmdzL2RhdGFiYXNlL2Nvbm5lY3QuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYW5ub3VuY2VtZW50RGF0YWJhc2UgPSBhd2FpdCBjb25uZWN0KCAnYW5ub3VuY2VtZW50JyApO1xuICAgIGNvbnN0IHRhYmxlc1Jvb3QgPSBwYXRoLmpvaW4oIGNvbmZpZy5wcm9qZWN0Um9vdCwgJ21vZGVscy9hbm5vdW5jZW1lbnQvdGFibGVzJyApO1xuICAgIGNvbnN0IHRhYmxlID0ge1xuICAgICAgICBhbm5vdW5jZW1lbnRGaWxlSTE4bjogYW5ub3VuY2VtZW50RGF0YWJhc2UuaW1wb3J0KCBwYXRoLmpvaW4oIHRhYmxlc1Jvb3QsICdhbm5vdW5jZW1lbnRfZmlsZV9pMThuJyApICksXG4gICAgICAgIGFubm91bmNlbWVudEZpbGU6ICAgICBhbm5vdW5jZW1lbnREYXRhYmFzZS5pbXBvcnQoIHBhdGguam9pbiggdGFibGVzUm9vdCwgJ2Fubm91bmNlbWVudF9maWxlJyApICksXG4gICAgICAgIGFubm91bmNlbWVudEkxOG46ICAgICBhbm5vdW5jZW1lbnREYXRhYmFzZS5pbXBvcnQoIHBhdGguam9pbiggdGFibGVzUm9vdCwgJ2Fubm91bmNlbWVudF9pMThuJyApICksXG4gICAgICAgIGFubm91bmNlbWVudDogICAgICAgICBhbm5vdW5jZW1lbnREYXRhYmFzZS5pbXBvcnQoIHBhdGguam9pbiggdGFibGVzUm9vdCwgJ2Fubm91bmNlbWVudCcgKSApLFxuICAgICAgICBhbm5vdW5jZW1lbnRUYWc6ICAgICAgYW5ub3VuY2VtZW50RGF0YWJhc2UuaW1wb3J0KCBwYXRoLmpvaW4oIHRhYmxlc1Jvb3QsICdhbm5vdW5jZW1lbnRfdGFnJyApICksXG4gICAgICAgIHRhZ0kxOG46ICAgICAgICAgICAgICBhbm5vdW5jZW1lbnREYXRhYmFzZS5pbXBvcnQoIHBhdGguam9pbiggdGFibGVzUm9vdCwgJ3RhZ19pMThuJyApICksXG4gICAgICAgIHRhZzogICAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnREYXRhYmFzZS5pbXBvcnQoIHBhdGguam9pbiggdGFibGVzUm9vdCwgJ3RhZycgKSApLFxuICAgIH07XG5cbiAgICAvLyBUcmFuc2xhdGlvbiByZWxhdGlvbnNoaXAuXG4gICAgLy8gYGFubm91bmNlbWVudGAgaGFzIG1hbnkgdHJhbnNsYXRpb25zLlxuICAgIHRhYmxlLmFubm91bmNlbWVudC5oYXNNYW55KCB0YWJsZS5hbm5vdW5jZW1lbnRJMThuLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdhbm5vdW5jZW1lbnRJMThuJyxcbiAgICAgICAgZm9yZWlnbktleTogJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgb25EZWxldGU6ICAgJ0NBU0NBREUnLFxuICAgIH0gKTtcblxuICAgIC8vIGBhbm5vdW5jZW1lbnRGaWxlYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUuYW5ub3VuY2VtZW50RmlsZS5oYXNNYW55KCB0YWJsZS5hbm5vdW5jZW1lbnRGaWxlSTE4biwge1xuICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50RmlsZUkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAnZmlsZUlkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ2ZpbGVJZCcsXG4gICAgICAgIG9uRGVsZXRlOiAgICdDQVNDQURFJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgdGFnYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUudGFnLmhhc01hbnkoIHRhYmxlLnRhZ0kxOG4sIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ3RhZ0kxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAndGFnSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAndGFnSWQnLFxuICAgICAgICBvbkRlbGV0ZTogICAnQ0FTQ0FERScsXG4gICAgfSApO1xuXG4gICAgLy8gQW5ub3VuY2VtZW50IHJlbGF0aW9uc2hpcC5cbiAgICAvLyBgYW5ub3VuY2VtZW50YCBoYXMgbWFueSBgZmlsZWAuXG4gICAgdGFibGUuYW5ub3VuY2VtZW50Lmhhc01hbnkoIHRhYmxlLmFubm91bmNlbWVudEZpbGUsIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudEZpbGUnLFxuICAgICAgICBmb3JlaWduS2V5OiAnYW5ub3VuY2VtZW50SWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAnYW5ub3VuY2VtZW50SWQnLFxuICAgICAgICBvbkRlbGV0ZTogICAnQ0FTQ0FERScsXG4gICAgfSApO1xuXG4gICAgLy8gYGFubm91bmNlbWVudGAgaGFzIG1hbnkgYGFubm91bmNlbWVudFRhZ2AuXG4gICAgdGFibGUuYW5ub3VuY2VtZW50Lmhhc01hbnkoIHRhYmxlLmFubm91bmNlbWVudFRhZywge1xuICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50VGFnJyxcbiAgICAgICAgZm9yZWlnbktleTogJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgb25EZWxldGU6ICAgJ0NBU0NBREUnLFxuICAgIH0gKTtcblxuICAgIC8vIGBhbm5vdW5jZW1lbnRUYWdgIGhhcyBtYW55IGB0YWdJMThuYC5cbiAgICB0YWJsZS5hbm5vdW5jZW1lbnRUYWcuaGFzTWFueSggdGFibGUudGFnSTE4biwge1xuICAgICAgICBhczogICAgICAgICAndGFnSTE4bicsXG4gICAgICAgIGZvcmVpZ25LZXk6ICd0YWdJZCcsXG4gICAgICAgIHNvdXJjZUtleTogICd0YWdJZCcsXG4gICAgICAgIG9uRGVsZXRlOiAgICdDQVNDQURFJyxcbiAgICB9ICk7XG5cbiAgICAvLyBBbnkgb25lIHdobyB1c2UgdGhpcyBtb2R1bGUgc2hvdWxkIHJlbWVtYmVyIHRvIGNsb3NlIGNvbm5lY3Rpb24sXG4gICAgLy8gbGlrZSBgdGFibGUuZGF0YWJhc2UuY2xvc2UoKWAuXG4gICAgdGFibGUuZGF0YWJhc2UgPSBhbm5vdW5jZW1lbnREYXRhYmFzZTtcblxuICAgIHJldHVybiB0YWJsZTtcbn07XG4iLCJpbXBvcnQgYXNzb2NpYXRpb25zIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2Fzc29jaWF0aW9ucy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICggeyBsYW5ndWFnZSA9ICd6aC1UVycsIGZpbGVJZCwgfSA9IHt9ICkgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG5cbiAgICBjb25zdCByb3dDb3VudCA9IGF3YWl0IHRhYmxlLmFubm91bmNlbWVudEkxOG4uZGVzdHJveSgge1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICBmaWxlSWQsXG4gICAgICAgIH0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIHJvd0NvdW50ID0+IHJvd0NvdW50XG4gICAgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gcm93Q291bnQ7XG59O1xuIiwiaW1wb3J0IGFzc29jaWF0aW9ucyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHsgYW5ub3VuY2VtZW50SWQsIHRhZ0lkLCB9ID0ge30gKSA9PiB7XG4gICAgY29uc3QgdGFibGUgPSBhd2FpdCBhc3NvY2lhdGlvbnMoKTtcblxuICAgIGNvbnN0IHJvd0NvdW50ID0gYXdhaXQgdGFibGUuYW5ub3VuY2VtZW50VGFnLmRlc3Ryb3koIHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgIGFubm91bmNlbWVudElkLFxuICAgICAgICAgICAgdGFnSWQsXG4gICAgICAgIH0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIHJvd0NvdW50ID0+IHJvd0NvdW50XG4gICAgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gcm93Q291bnQ7XG59O1xuIiwiaW1wb3J0IGFzc29jaWF0aW9ucyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHsgYW5ub3VuY2VtZW50SWQsIH0gPSB7fSApID0+IHtcbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuXG4gICAgY29uc3Qgcm93Q291bnQgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuZGVzdHJveSgge1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgYW5ub3VuY2VtZW50SWQsXG4gICAgICAgIH0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIHJvd0NvdW50ID0+IHJvd0NvdW50XG4gICAgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gcm93Q291bnQ7XG59O1xuIiwiaW1wb3J0IHsgT3AsIH0gZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBhc3NvY2lhdGlvbnMgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vYXNzb2NpYXRpb25zLmpzJztcbmltcG9ydCB2YWxpZGF0ZSBmcm9tICd0ZXN0L21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL3ZhbGlkYXRlLmpzJztcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSAnc2V0dGluZ3MvZGVmYXVsdC12YWx1ZS9hbm5vdW5jZW1lbnQvY29uZmlnLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCB7XG4gICAgdGFncyA9IFtdLFxuICAgIHN0YXJ0VGltZSA9IGRlZmF1bHRWYWx1ZS5zdGFydFRpbWUsXG4gICAgZW5kVGltZSA9IGRlZmF1bHRWYWx1ZS5lbmRUaW1lLFxuICAgIHBhZ2UgPSBkZWZhdWx0VmFsdWUucGFnZSxcbiAgICBsYW5ndWFnZSA9IGRlZmF1bHRWYWx1ZS5sYW5ndWFnZSxcbn0gPSB7fSApID0+IHtcbiAgICB0YWdzID0gWyAuLi5uZXcgU2V0KCB0YWdzICksIF07XG4gICAgc3RhcnRUaW1lID0gbmV3IERhdGUoIHN0YXJ0VGltZSApO1xuICAgIGVuZFRpbWUgPSBuZXcgRGF0ZSggZW5kVGltZSApO1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZFRhZ3MoIHRhZ3MgKSApXG4gICAgICAgIHJldHVybiB7IGVycm9yOiAnaW52YWxpZCB0YWcgbmFtZScsIH07XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkRGF0ZSggc3RhcnRUaW1lICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgc3RhcnQgdGltZScsIH07XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkRGF0ZSggZW5kVGltZSApIClcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6ICdpbnZhbGlkIGVuZCB0aW1lJywgfTtcblxuICAgIGlmICggIXZhbGlkYXRlLmlzVmFsaWRQYWdlKCBwYWdlICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgcGFnZScsIH07XG5cbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuICAgIGxldCBkYXRhID0gW107XG4gICAgaWYgKCB0YWdzLmxlbmd0aCA9PT0gMCApIHtcbiAgICAgICAgZGF0YSA9IGF3YWl0IHRhYmxlLmFubm91bmNlbWVudC5maW5kQWxsKCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgICAgICAgICAndXBkYXRlVGltZScsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICB1cGRhdGVUaW1lOiB7XG4gICAgICAgICAgICAgICAgICAgIFsgT3AuYmV0d2VlbiBdOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRUaW1lLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaXNQdWJsaXNoZWQ6IDEsXG4gICAgICAgICAgICAgICAgaXNBcHByb3ZlZDogIDEsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50STE4bixcbiAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudEkxOG4nLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAndGl0bGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQnLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmFubm91bmNlbWVudFRhZyxcbiAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFsgJ3RhZ0lkJywgXSxcbiAgICAgICAgICAgICAgICAgICAgaW5jbHVkZTogICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLnRhZ0kxOG4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ3RhZ0kxOG4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFsgJ25hbWUnLCBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2U6ICdlbi1VUycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIG9mZnNldDogICggcGFnZSAtIDEgKSAqIGRlZmF1bHRWYWx1ZS5hbm5vdW5jZW1lbnRzUGVyUGFnZSxcbiAgICAgICAgICAgIGxpbWl0OiAgIGRlZmF1bHRWYWx1ZS5hbm5vdW5jZW1lbnRzUGVyUGFnZSxcbiAgICAgICAgfSApXG4gICAgICAgIC50aGVuKCBhbm5vdW5jZW1lbnRzID0+IGFubm91bmNlbWVudHMubWFwKCBhbm5vdW5jZW1lbnQgPT4gKCB7XG4gICAgICAgICAgICBpZDogICAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50SWQsXG4gICAgICAgICAgICB0aXRsZTogICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMCBdLnRpdGxlLFxuICAgICAgICAgICAgY29udGVudDogICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS5jb250ZW50LFxuICAgICAgICAgICAgdXBkYXRlVGltZTogYW5ub3VuY2VtZW50LnVwZGF0ZVRpbWUsXG4gICAgICAgICAgICB0YWdzOiAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50VGFnLm1hcCggdGFnID0+ICgge1xuICAgICAgICAgICAgICAgIGlkOiAgIHRhZy50YWdJZCxcbiAgICAgICAgICAgICAgICBuYW1lOiB0YWcudGFnSTE4blsgMCBdLm5hbWUsXG4gICAgICAgICAgICB9ICkgKSxcbiAgICAgICAgfSApICkgKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRhdGEgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuZmluZEFsbCgge1xuICAgICAgICAgICAgYXR0cmlidXRlczogWyAnYW5ub3VuY2VtZW50SWQnLCBdLFxuICAgICAgICAgICAgd2hlcmU6ICAgICAge1xuICAgICAgICAgICAgICAgICckYW5ub3VuY2VtZW50VGFnLnRhZ0kxOG4ubmFtZSQnOiB7XG4gICAgICAgICAgICAgICAgICAgIFsgT3AuaW4gXTogdGFncyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICd1cGRhdGVUaW1lJzogICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgWyBPcC5iZXR3ZWVuIF06IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0VGltZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZFRpbWUsXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnaXNQdWJsaXNoZWQnOiAxLFxuICAgICAgICAgICAgICAgICdpc0FwcHJvdmVkJzogIDEsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICAgICAgICAgIGluY2x1ZGU6ICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0gKVxuICAgICAgICAudGhlbiggaWRzID0+IHRhYmxlLmFubm91bmNlbWVudC5maW5kQWxsKCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgICAgICAgICAndXBkYXRlVGltZScsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnRJZDoge1xuICAgICAgICAgICAgICAgICAgICBbIE9wLmluIF06IGlkcy5tYXAoIGlkID0+IGlkLmFubm91bmNlbWVudElkICksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvZmZzZXQ6ICAoIHBhZ2UgLSAxICkgKiBkZWZhdWx0VmFsdWUuYW5ub3VuY2VtZW50c1BlclBhZ2UsXG4gICAgICAgICAgICBsaW1pdDogICBkZWZhdWx0VmFsdWUuYW5ub3VuY2VtZW50c1BlclBhZ2UsXG4gICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRJMThuLFxuICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50STE4bicsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICd0aXRsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAnY29udGVudCcsXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50VGFnJyxcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogWyAndGFnSWQnLCBdLFxuICAgICAgICAgICAgICAgICAgICBpbmNsdWRlOiAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUudGFnSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAndGFnSTE4bicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogWyAnbmFtZScsIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6ICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZTogJ2VuLVVTJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9ICkgKVxuICAgICAgICAudGhlbiggYW5ub3VuY2VtZW50cyA9PiBhbm5vdW5jZW1lbnRzLm1hcCggYW5ub3VuY2VtZW50ID0+ICgge1xuICAgICAgICAgICAgaWQ6ICAgICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudElkLFxuICAgICAgICAgICAgdGl0bGU6ICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS50aXRsZSxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJMThuWyAwIF0uY29udGVudCxcbiAgICAgICAgICAgIHVwZGF0ZVRpbWU6IGFubm91bmNlbWVudC51cGRhdGVUaW1lLFxuICAgICAgICAgICAgdGFnczogICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudFRhZy5tYXAoIHRhZyA9PiAoIHtcbiAgICAgICAgICAgICAgICBpZDogICB0YWcudGFnSWQsXG4gICAgICAgICAgICAgICAgbmFtZTogdGFnLnRhZ0kxOG5bIDAgXS5uYW1lLFxuICAgICAgICAgICAgfSApICksXG4gICAgICAgIH0gKSApICk7XG4gICAgfVxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbn07XG4iLCJpbXBvcnQgeyBPcCwgfSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IGFzc29jaWF0aW9ucyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuaW1wb3J0IHZhbGlkYXRlIGZyb20gJ3Rlc3QvbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vdmFsaWRhdGUuanMnO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tICdzZXR0aW5ncy9kZWZhdWx0LXZhbHVlL2Fubm91bmNlbWVudC9jb25maWcuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHtcbiAgICB0YWdzID0gW10sXG4gICAgc3RhcnRUaW1lID0gZGVmYXVsdFZhbHVlLnN0YXJ0VGltZSxcbiAgICBlbmRUaW1lID0gZGVmYXVsdFZhbHVlLmVuZFRpbWUsXG59ID0ge30gKSA9PiB7XG4gICAgdGFncyA9IFsgLi4ubmV3IFNldCggdGFncyApLCBdO1xuICAgIHN0YXJ0VGltZSA9IG5ldyBEYXRlKCBzdGFydFRpbWUgKTtcbiAgICBlbmRUaW1lID0gbmV3IERhdGUoIGVuZFRpbWUgKTtcblxuICAgIGlmICggIXZhbGlkYXRlLmlzVmFsaWRUYWdzKCB0YWdzICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgdGFnIG5hbWUnLCB9O1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZERhdGUoIHN0YXJ0VGltZSApIClcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6ICdpbnZhbGlkIHN0YXJ0IHRpbWUnLCB9O1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZERhdGUoIGVuZFRpbWUgKSApXG4gICAgICAgIHJldHVybiB7IGVycm9yOiAnaW52YWxpZCBlbmQgdGltZScsIH07XG5cbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuICAgIGxldCBjb3VudCA9IDA7XG4gICAgaWYgKCB0YWdzLmxlbmd0aCA9PT0gMCApIHtcbiAgICAgICAgY291bnQgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuY291bnQoIHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgdXBkYXRlVGltZToge1xuICAgICAgICAgICAgICAgICAgICBbIE9wLmJldHdlZW4gXTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRUaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kVGltZSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGlzUHVibGlzaGVkOiAxLFxuICAgICAgICAgICAgICAgIGlzQXBwcm92ZWQ6ICAxLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY291bnQgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuY291bnQoIHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgJyRhbm5vdW5jZW1lbnRUYWcudGFnSTE4bi5uYW1lJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgWyBPcC5pbiBdOiB0YWdzLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnOiB7XG4gICAgICAgICAgICAgICAgICAgIFsgT3AuYmV0d2VlbiBdOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRUaW1lLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2lzUHVibGlzaGVkJzogMSxcbiAgICAgICAgICAgICAgICAnaXNBcHByb3ZlZCc6ICAxLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgIHRhYmxlLmFubm91bmNlbWVudFRhZyxcbiAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogdGFibGUudGFnSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogICAgJ3RhZ0kxOG4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGRpc3RpbmN0OiB0cnVlLFxuICAgICAgICB9ICk7XG4gICAgfVxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4geyBwYWdlTnVtYmVyOiBNYXRoLmNlaWwoIGNvdW50IC8gZGVmYXVsdFZhbHVlLmFubm91bmNlbWVudHNQZXJQYWdlICksIH07XG59O1xuIiwiaW1wb3J0IHsgT3AsIH0gZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBhc3NvY2lhdGlvbnMgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vYXNzb2NpYXRpb25zLmpzJztcbmltcG9ydCB2YWxpZGF0ZSBmcm9tICd0ZXN0L21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL3ZhbGlkYXRlLmpzJztcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSAnc2V0dGluZ3MvZGVmYXVsdC12YWx1ZS9hbm5vdW5jZW1lbnQvY29uZmlnLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCB7XG4gICAgdGFncyA9IFtdLFxuICAgIHN0YXJ0VGltZSA9IGRlZmF1bHRWYWx1ZS5zdGFydFRpbWUsXG4gICAgZW5kVGltZSA9IGRlZmF1bHRWYWx1ZS5lbmRUaW1lLFxuICAgIGxhbmd1YWdlID0gZGVmYXVsdFZhbHVlLmxhbmd1YWdlLFxufSA9IHt9ICkgPT4ge1xuICAgIHRhZ3MgPSBbIC4uLm5ldyBTZXQoIHRhZ3MgKSwgXTtcbiAgICBzdGFydFRpbWUgPSBuZXcgRGF0ZSggc3RhcnRUaW1lICk7XG4gICAgZW5kVGltZSA9IG5ldyBEYXRlKCBlbmRUaW1lICk7XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkVGFncyggdGFncyApIClcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6ICdpbnZhbGlkIHRhZyBuYW1lJywgfTtcblxuICAgIGlmICggIXZhbGlkYXRlLmlzVmFsaWREYXRlKCBzdGFydFRpbWUgKSApXG4gICAgICAgIHJldHVybiB7IGVycm9yOiAnaW52YWxpZCBzdGFydCB0aW1lJywgfTtcblxuICAgIGlmICggIXZhbGlkYXRlLmlzVmFsaWREYXRlKCBlbmRUaW1lICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgZW5kIHRpbWUnLCB9O1xuXG4gICAgY29uc3QgdGFibGUgPSBhd2FpdCBhc3NvY2lhdGlvbnMoKTtcbiAgICBsZXQgZGF0YSA9IFtdO1xuICAgIGlmICggdGFncy5sZW5ndGggPT09IDAgKSB7XG4gICAgICAgIGRhdGEgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuZmluZEFsbCgge1xuICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICdhbm5vdW5jZW1lbnRJZCcsXG4gICAgICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgdXBkYXRlVGltZToge1xuICAgICAgICAgICAgICAgICAgICBbIE9wLmJldHdlZW4gXTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRUaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kVGltZSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGlzUGlubmVkOiAgICAxLFxuICAgICAgICAgICAgICAgIGlzUHVibGlzaGVkOiAxLFxuICAgICAgICAgICAgICAgIGlzQXBwcm92ZWQ6ICAxLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmFubm91bmNlbWVudEkxOG4sXG4gICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdhbm5vdW5jZW1lbnRJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdjb250ZW50JyxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRUYWcsXG4gICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdhbm5vdW5jZW1lbnRUYWcnLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbICd0YWdJZCcsIF0sXG4gICAgICAgICAgICAgICAgICAgIGluY2x1ZGU6ICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbICduYW1lJywgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlOiAnZW4tVVMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9IClcbiAgICAgICAgLnRoZW4oIGFubm91bmNlbWVudHMgPT4gYW5ub3VuY2VtZW50cy5tYXAoIGFubm91bmNlbWVudCA9PiAoIHtcbiAgICAgICAgICAgIGlkOiAgICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgICAgIHRpdGxlOiAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJMThuWyAwIF0udGl0bGUsXG4gICAgICAgICAgICBjb250ZW50OiAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMCBdLmNvbnRlbnQsXG4gICAgICAgICAgICB1cGRhdGVUaW1lOiBhbm5vdW5jZW1lbnQudXBkYXRlVGltZSxcbiAgICAgICAgICAgIHRhZ3M6ICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRUYWcubWFwKCB0YWcgPT4gKCB7XG4gICAgICAgICAgICAgICAgaWQ6ICAgdGFnLnRhZ0lkLFxuICAgICAgICAgICAgICAgIG5hbWU6IHRhZy50YWdJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgICAgIH0gKSApLFxuICAgICAgICB9ICkgKSApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZGF0YSA9IGF3YWl0IHRhYmxlLmFubm91bmNlbWVudC5maW5kQWxsKCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbICdhbm5vdW5jZW1lbnRJZCcsIF0sXG4gICAgICAgICAgICB3aGVyZTogICAgICB7XG4gICAgICAgICAgICAgICAgJyRhbm5vdW5jZW1lbnRUYWcudGFnSTE4bi5uYW1lJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgWyBPcC5pbiBdOiB0YWdzLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnOiAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBbIE9wLmJldHdlZW4gXTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRUaW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kVGltZSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdpc1Bpbm5lZCc6ICAgICAgMSxcbiAgICAgICAgICAgICAgICAnaXNQdWJsaXNoZWQnOiAxLFxuICAgICAgICAgICAgICAgICdpc0FwcHJvdmVkJzogIDEsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICAgICAgICAgIGluY2x1ZGU6ICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0gKVxuICAgICAgICAudGhlbiggaWRzID0+IHRhYmxlLmFubm91bmNlbWVudC5maW5kQWxsKCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgICAgICAgICAndXBkYXRlVGltZScsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnRJZDoge1xuICAgICAgICAgICAgICAgICAgICBbIE9wLmluIF06IGlkcy5tYXAoIGlkID0+IGlkLmFubm91bmNlbWVudElkICksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRJMThuLFxuICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50STE4bicsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICd0aXRsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAnY29udGVudCcsXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50VGFnJyxcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogWyAndGFnSWQnLCBdLFxuICAgICAgICAgICAgICAgICAgICBpbmNsdWRlOiAgICBbIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLnRhZ0kxOG4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAndGFnSTE4bicsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbICduYW1lJywgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZTogJ2VuLVVTJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0gKSApXG4gICAgICAgIC50aGVuKCBhbm5vdW5jZW1lbnRzID0+IGFubm91bmNlbWVudHMubWFwKCBhbm5vdW5jZW1lbnQgPT4gKCB7XG4gICAgICAgICAgICBpZDogICAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50SWQsXG4gICAgICAgICAgICB0aXRsZTogICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMCBdLnRpdGxlLFxuICAgICAgICAgICAgY29udGVudDogICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS5jb250ZW50LFxuICAgICAgICAgICAgdXBkYXRlVGltZTogYW5ub3VuY2VtZW50LnVwZGF0ZVRpbWUsXG4gICAgICAgICAgICB0YWdzOiAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50VGFnLm1hcCggdGFnID0+ICgge1xuICAgICAgICAgICAgICAgIGlkOiAgIHRhZy50YWdJZCxcbiAgICAgICAgICAgICAgICBuYW1lOiB0YWcudGFnSTE4blsgMCBdLm5hbWUsXG4gICAgICAgICAgICB9ICkgKSxcbiAgICAgICAgfSApICkgKTtcbiAgICB9XG5cbiAgICB0YWJsZS5kYXRhYmFzZS5jbG9zZSgpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG59O1xuIiwiaW1wb3J0IGFzc29jaWF0aW9ucyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHsgYW5ub3VuY2VtZW50SWQgPSAxLCB9ID0ge30gKSA9PiB7XG4gICAgY29uc3QgdGFibGUgPSBhd2FpdCBhc3NvY2lhdGlvbnMoKTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuZmluZE9uZSgge1xuICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50STE4bixcbiAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50STE4bicsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAndGl0bGUnLFxuICAgICAgICAgICAgICAgICAgICAnY29udGVudCcsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbW9kZWw6ICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICdhbm5vdW5jZW1lbnRUYWcnLFxuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUudGFnSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGFnSWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlOiAnZW4tVVMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICB0YWJsZS5hbm5vdW5jZW1lbnRGaWxlLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICdhbm5vdW5jZW1lbnRGaWxlJyxcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmFubm91bmNlbWVudEZpbGVJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudEZpbGVJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndXJsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAndHlwZScsXG4gICAgICAgICAgICAgICAgICAgICd1cGxvYWRUaW1lJyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgICAgICdhdXRob3InLFxuICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnLFxuICAgICAgICAgICAgJ3ZpZXdzJyxcbiAgICAgICAgICAgICdpc1Bpbm5lZCcsXG4gICAgICAgICAgICAnaXNQdWJsaXNoZWQnLFxuICAgICAgICBdLFxuICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgYW5ub3VuY2VtZW50SWQsXG4gICAgICAgIH0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIGFubm91bmNlbWVudCA9PiAoIHtcbiAgICAgICAgICAgICdpZCc6ICAgICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgICAgICdhdXRob3InOiAgICAgIGFubm91bmNlbWVudC5hdXRob3IsXG4gICAgICAgICAgICAndXBkYXRlVGltZSc6ICBhbm5vdW5jZW1lbnQudXBkYXRlVGltZSxcbiAgICAgICAgICAgICd2aWV3cyc6ICAgICAgIGFubm91bmNlbWVudC52aWV3cyxcbiAgICAgICAgICAgICdpc1Bpbm5lZCc6ICAgIGFubm91bmNlbWVudC5pc1Bpbm5lZCxcbiAgICAgICAgICAgICdpc1B1Ymxpc2hlZCc6IGFubm91bmNlbWVudC5pc1B1Ymxpc2hlZCxcbiAgICAgICAgICAgICdlbi1VUyc6ICAgICAgIHtcbiAgICAgICAgICAgICAgICB0aXRsZTogICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMCBdLnRpdGxlLFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJMThuWyAwIF0uY29udGVudCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnemgtVFcnOiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDEgXS50aXRsZSxcbiAgICAgICAgICAgICAgICBjb250ZW50OiBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMSBdLmNvbnRlbnQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2ZpbGVzJzogICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEZpbGUubWFwKFxuICAgICAgICAgICAgICAgIGFubm91bmNlbWVudEZpbGUgPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgIHVwbG9hZFRpbWU6IGFubm91bmNlbWVudEZpbGUudXBsb2FkVGltZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogICAgICAgYW5ub3VuY2VtZW50RmlsZS50eXBlLFxuICAgICAgICAgICAgICAgICAgICB1cmw6ICAgICAgICBhbm5vdW5jZW1lbnRGaWxlLmFubm91bmNlbWVudEZpbGVJMThuWyAwIF0udXJsLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAgICAgICBhbm5vdW5jZW1lbnRGaWxlLmFubm91bmNlbWVudEZpbGVJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgICAgICAgICB9ICksXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgJ3RhZ3MnOiAgICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudFRhZy5tYXAoXG4gICAgICAgICAgICAgICAgYW5ub3VuY2VtZW50VGFnID0+IGFubm91bmNlbWVudFRhZy50YWdJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgICAgICksXG4gICAgICAgIH0gKVxuICAgICk7XG5cbiAgICB0YWJsZS5kYXRhYmFzZS5jbG9zZSgpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG59O1xuIiwiaW1wb3J0IGFzc29jaWF0aW9ucyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tICdzZXR0aW5ncy9kZWZhdWx0LXZhbHVlL2Fubm91bmNlbWVudC9jb25maWcuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHsgbGFuZ3VhZ2UgPSBkZWZhdWx0VmFsdWUubGFuZ3VhZ2UsIGFubm91bmNlbWVudElkID0gMSwgfSA9IHt9ICkgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGFibGUuYW5ub3VuY2VtZW50LmZpbmRPbmUoIHtcbiAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmFubm91bmNlbWVudEkxOG4sXG4gICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudEkxOG4nLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQnLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbW9kZWw6ICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICdhbm5vdW5jZW1lbnRUYWcnLFxuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUudGFnSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGFnSWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlOiAnZW4tVVMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICB0YWJsZS5hbm5vdW5jZW1lbnRGaWxlLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICdhbm5vdW5jZW1lbnRGaWxlJyxcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmFubm91bmNlbWVudEZpbGVJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudEZpbGVJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndXJsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICd0eXBlJyxcbiAgICAgICAgICAgICAgICAgICAgJ3VwbG9hZFRpbWUnLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAnYW5ub3VuY2VtZW50SWQnLFxuICAgICAgICAgICAgJ2F1dGhvcicsXG4gICAgICAgICAgICAncHVibGlzaFRpbWUnLFxuICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnLFxuICAgICAgICAgICAgJ3ZpZXdzJyxcbiAgICAgICAgICAgICdpc1Bpbm5lZCcsXG4gICAgICAgIF0sXG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICBhbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgfSxcbiAgICB9IClcbiAgICAudGhlbihcbiAgICAgICAgYW5ub3VuY2VtZW50ID0+ICgge1xuICAgICAgICAgICAgaWQ6ICAgICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgICAgIHRpdGxlOiAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMCBdLnRpdGxlLFxuICAgICAgICAgICAgY29udGVudDogICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJMThuWyAwIF0uY29udGVudCxcbiAgICAgICAgICAgIGF1dGhvcjogICAgICBhbm5vdW5jZW1lbnQuYXV0aG9yLFxuICAgICAgICAgICAgcHVibGlzaFRpbWU6IGFubm91bmNlbWVudC5wdWJsaXNoVGltZSxcbiAgICAgICAgICAgIHVwZGF0ZVRpbWU6ICBhbm5vdW5jZW1lbnQudXBkYXRlVGltZSxcbiAgICAgICAgICAgIHZpZXdzOiAgICAgICBhbm5vdW5jZW1lbnQudmlld3MsXG4gICAgICAgICAgICBpc1Bpbm5lZDogICAgYW5ub3VuY2VtZW50LmlzUGlubmVkLFxuICAgICAgICAgICAgZmlsZXM6ICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRGaWxlLm1hcChcbiAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnRGaWxlID0+ICgge1xuICAgICAgICAgICAgICAgICAgICB1cGxvYWRUaW1lOiBhbm5vdW5jZW1lbnRGaWxlLnVwbG9hZFRpbWUsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICAgICAgIGFubm91bmNlbWVudEZpbGUudHlwZSxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAgICAgICAgYW5ub3VuY2VtZW50RmlsZS5hbm5vdW5jZW1lbnRGaWxlSTE4blsgMCBdLnVybCxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogICAgICAgYW5ub3VuY2VtZW50RmlsZS5hbm5vdW5jZW1lbnRGaWxlSTE4blsgMCBdLm5hbWUsXG4gICAgICAgICAgICAgICAgfSApLFxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIHRhZ3M6ICAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50VGFnLm1hcChcbiAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnRUYWcgPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiAgIGFubm91bmNlbWVudFRhZy50YWdJMThuWyAwIF0udGFnSWQsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGFubm91bmNlbWVudFRhZy50YWdJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICksXG4gICAgICAgIH0gKVxuICAgICk7XG5cbiAgICB0YWJsZS5kYXRhYmFzZS5jbG9zZSgpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG59O1xuIiwiaW1wb3J0IHNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IGFzc29jaWF0aW9ucyBmcm9tICdtb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuaW1wb3J0IHZhbGlkYXRlIGZyb20gJ3Rlc3QvbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vdmFsaWRhdGUuanMnO1xuaW1wb3J0IGRlZmF1bHRWYWx1ZSBmcm9tICdzZXR0aW5ncy9kZWZhdWx0LXZhbHVlL2Fubm91bmNlbWVudC9jb25maWcuanMnO1xuXG5jb25zdCBPcCA9IHNlcXVlbGl6ZS5PcDtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCB7XG4gICAgdGFncyA9IFtdLFxuICAgIHN0YXJ0VGltZSA9IGRlZmF1bHRWYWx1ZS5zdGFydFRpbWUsXG4gICAgZW5kVGltZSA9IGRlZmF1bHRWYWx1ZS5lbmRUaW1lLFxuICAgIHBhZ2UgPSBkZWZhdWx0VmFsdWUucGFnZSxcbiAgICBsYW5ndWFnZSA9IGRlZmF1bHRWYWx1ZS5sYW5ndWFnZSxcbn0gPSB7fSApID0+IHtcbiAgICB0YWdzID0gWyAuLi5uZXcgU2V0KCB0YWdzICksIF07XG4gICAgc3RhcnRUaW1lID0gbmV3IERhdGUoIHN0YXJ0VGltZSApO1xuICAgIGVuZFRpbWUgPSBuZXcgRGF0ZSggZW5kVGltZSApO1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZFRhZ3MoIHRhZ3MgKSApXG4gICAgICAgIHJldHVybiB7IGVycm9yOiAnaW52YWxpZCB0YWcgbmFtZScsIH07XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkRGF0ZSggc3RhcnRUaW1lICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgc3RhcnQgdGltZScsIH07XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkRGF0ZSggZW5kVGltZSApIClcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6ICdpbnZhbGlkIGVuZCB0aW1lJywgfTtcblxuICAgIGlmICggIXZhbGlkYXRlLmlzVmFsaWRQYWdlKCBwYWdlICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgcGFnZScsIH07XG5cbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuICAgIGlmICggcGFnZSA8PSAwIClcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQuZmluZEFsbCgge1xuICAgICAgICBhdHRyaWJ1dGVzOiBbICdhbm5vdW5jZW1lbnRJZCcsIF0sXG4gICAgICAgIHdoZXJlOiAgICAgIHtcbiAgICAgICAgICAgICckYW5ub3VuY2VtZW50VGFnLnRhZ0kxOG4ubmFtZSQnOiB7XG4gICAgICAgICAgICAgICAgWyBPcC5pbiBdOiB0YWdzLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICd1cGRhdGVUaW1lJzoge1xuICAgICAgICAgICAgICAgIFsgT3AuYmV0d2VlbiBdOiBbXG4gICAgICAgICAgICAgICAgICAgIG5ldyBEYXRlKCBzdGFydFRpbWUgKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoIGVuZFRpbWUgKSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdpc1B1Ymxpc2hlZCc6IDEsXG4gICAgICAgICAgICAnaXNBcHByb3ZlZCc6ICAxLFxuICAgICAgICB9LFxuICAgICAgICBpbmNsdWRlOiBbIHtcbiAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmFubm91bmNlbWVudFRhZyxcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtdLFxuICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICBpbmNsdWRlOiAgICBbIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtdLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgIH0sIF0sXG4gICAgICAgIH0sIF0sXG4gICAgICAgIGdyb3VwOiAgJ2Fubm91bmNlbWVudElkJyxcbiAgICAgICAgaGF2aW5nOiBzZXF1ZWxpemUubGl0ZXJhbCggYGNvdW50KCopID0gJHsgdGFncy5sZW5ndGggfWAgKSxcbiAgICB9IClcbiAgICAudGhlbiggaWRzID0+IHRhYmxlLmFubm91bmNlbWVudC5maW5kQWxsKCB7XG4gICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICdhbm5vdW5jZW1lbnRJZCcsXG4gICAgICAgICAgICAndXBkYXRlVGltZScsXG4gICAgICAgIF0sXG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICBhbm5vdW5jZW1lbnRJZDoge1xuICAgICAgICAgICAgICAgIFsgT3AuaW4gXTogaWRzLm1hcCggaWQgPT4gaWQuYW5ub3VuY2VtZW50SWQgKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIG9mZnNldDogICggcGFnZSAtIDEgKSAqIGRlZmF1bHRWYWx1ZS5hbm5vdW5jZW1lbnRzUGVyUGFnZSxcbiAgICAgICAgbGltaXQ6ICAgZGVmYXVsdFZhbHVlLmFubm91bmNlbWVudHNQZXJQYWdlLFxuICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50STE4bixcbiAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50STE4bicsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAndGl0bGUnLFxuICAgICAgICAgICAgICAgICAgICAnY29udGVudCcsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRUYWcsXG4gICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogWyAndGFnSWQnLCBdLFxuICAgICAgICAgICAgICAgIGluY2x1ZGU6ICAgIFsge1xuICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAndGFnSTE4bicsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFsgJ25hbWUnLCBdLFxuICAgICAgICAgICAgICAgICAgICB3aGVyZTogICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZTogJ2VuLVVTJyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LCBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9ICkgKVxuICAgIC50aGVuKCBhbm5vdW5jZW1lbnRzID0+IGFubm91bmNlbWVudHMubWFwKCBhbm5vdW5jZW1lbnQgPT4gKCB7XG4gICAgICAgIGlkOiAgICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgdGl0bGU6ICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS50aXRsZSxcbiAgICAgICAgY29udGVudDogICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS5jb250ZW50LFxuICAgICAgICB1cGRhdGVUaW1lOiBhbm5vdW5jZW1lbnQudXBkYXRlVGltZSxcbiAgICAgICAgdGFnczogICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudFRhZy5tYXAoIHRhZyA9PiAoIHtcbiAgICAgICAgICAgIGlkOiAgIHRhZy50YWdJZCxcbiAgICAgICAgICAgIG5hbWU6IHRhZy50YWdJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgfSApICksXG4gICAgfSApICkgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbn07XG4iLCJpbXBvcnQgc2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgYXNzb2NpYXRpb25zIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2Fzc29jaWF0aW9ucy5qcyc7XG5pbXBvcnQgdmFsaWRhdGUgZnJvbSAndGVzdC9tb2RlbHMvYW5ub3VuY2VtZW50L29wZXJhdGlvbi92YWxpZGF0ZS5qcyc7XG5pbXBvcnQgZGVmYXVsdFZhbHVlIGZyb20gJ3NldHRpbmdzL2RlZmF1bHQtdmFsdWUvYW5ub3VuY2VtZW50L2NvbmZpZy5qcyc7XG5cbmNvbnN0IE9wID0gc2VxdWVsaXplLk9wO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHtcbiAgICB0YWdzID0gW10sXG4gICAgc3RhcnRUaW1lID0gZGVmYXVsdFZhbHVlLnN0YXJ0VGltZSxcbiAgICBlbmRUaW1lID0gZGVmYXVsdFZhbHVlLmVuZFRpbWUsXG59ID0ge30gKSA9PiB7XG4gICAgdGFncyA9IFsgLi4ubmV3IFNldCggdGFncyApLCBdO1xuICAgIHN0YXJ0VGltZSA9IG5ldyBEYXRlKCBzdGFydFRpbWUgKTtcbiAgICBlbmRUaW1lID0gbmV3IERhdGUoIGVuZFRpbWUgKTtcblxuICAgIGlmICggIXZhbGlkYXRlLmlzVmFsaWRUYWdzKCB0YWdzICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgdGFnIG5hbWUnLCB9O1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZERhdGUoIHN0YXJ0VGltZSApIClcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6ICdpbnZhbGlkIHN0YXJ0IHRpbWUnLCB9O1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZERhdGUoIGVuZFRpbWUgKSApXG4gICAgICAgIHJldHVybiB7IGVycm9yOiAnaW52YWxpZCBlbmQgdGltZScsIH07XG5cbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuICAgIGNvbnN0IGNvdW50ID0gYXdhaXQgdGFibGUuYW5ub3VuY2VtZW50LmNvdW50KCB7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAnJGFubm91bmNlbWVudFRhZy50YWdJMThuLm5hbWUkJzoge1xuICAgICAgICAgICAgICAgIFsgT3AuaW4gXTogdGFncyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAndXBkYXRlVGltZSc6ICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgWyBPcC5iZXR3ZWVuIF06IFtcbiAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoIHN0YXJ0VGltZSApLFxuICAgICAgICAgICAgICAgICAgICBuZXcgRGF0ZSggZW5kVGltZSApLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2lzUHVibGlzaGVkJzogMSxcbiAgICAgICAgICAgICdpc0FwcHJvdmVkJzogIDEsXG4gICAgICAgIH0sXG4gICAgICAgIGluY2x1ZGU6IFsge1xuICAgICAgICAgICAgbW9kZWw6ICAgdGFibGUuYW5ub3VuY2VtZW50VGFnLFxuICAgICAgICAgICAgYXM6ICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICBpbmNsdWRlOiBbIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0YWdJMThuJyxcbiAgICAgICAgICAgIH0sIF0sXG4gICAgICAgIH0sIF0sXG4gICAgICAgIGdyb3VwOiAgJ2Bhbm5vdW5jZW1lbnRgLmBhbm5vdW5jZW1lbnRfaWRgJyxcbiAgICAgICAgaGF2aW5nOiBzZXF1ZWxpemUubGl0ZXJhbCggYGNvdW50KCopID0gJHsgdGFncy5sZW5ndGggfWAgKSxcbiAgICB9IClcbiAgICAudGhlbiggY291bnQgPT4gY291bnQubGVuZ3RoICk7XG5cbiAgICB0YWJsZS5kYXRhYmFzZS5jbG9zZSgpO1xuXG4gICAgcmV0dXJuIHsgcGFnZU51bWJlcjogTWF0aC5jZWlsKCBjb3VudCAvIGRlZmF1bHRWYWx1ZS5hbm5vdW5jZW1lbnRzUGVyUGFnZSApLCB9O1xufTtcbiIsImltcG9ydCBzZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBhc3NvY2lhdGlvbnMgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vYXNzb2NpYXRpb25zLmpzJztcbmltcG9ydCB2YWxpZGF0ZSBmcm9tICd0ZXN0L21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL3ZhbGlkYXRlLmpzJztcbmltcG9ydCBkZWZhdWx0VmFsdWUgZnJvbSAnc2V0dGluZ3MvZGVmYXVsdC12YWx1ZS9hbm5vdW5jZW1lbnQvY29uZmlnLmpzJztcblxuY29uc3QgT3AgPSBzZXF1ZWxpemUuT3A7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICgge1xuICAgIHRhZ3MgPSBbXSxcbiAgICBzdGFydFRpbWUgPSBkZWZhdWx0VmFsdWUuc3RhcnRUaW1lLFxuICAgIGVuZFRpbWUgPSBkZWZhdWx0VmFsdWUuZW5kVGltZSxcbiAgICBsYW5ndWFnZSA9IGRlZmF1bHRWYWx1ZS5sYW5ndWFnZSxcbn0gPSB7fSApID0+IHtcbiAgICB0YWdzID0gWyAuLi5uZXcgU2V0KCB0YWdzICksIF07XG4gICAgc3RhcnRUaW1lID0gbmV3IERhdGUoIHN0YXJ0VGltZSApO1xuICAgIGVuZFRpbWUgPSBuZXcgRGF0ZSggZW5kVGltZSApO1xuXG4gICAgaWYgKCAhdmFsaWRhdGUuaXNWYWxpZFRhZ3MoIHRhZ3MgKSApXG4gICAgICAgIHJldHVybiB7IGVycm9yOiAnaW52YWxpZCB0YWcgbmFtZScsIH07XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkRGF0ZSggc3RhcnRUaW1lICkgKVxuICAgICAgICByZXR1cm4geyBlcnJvcjogJ2ludmFsaWQgc3RhcnQgdGltZScsIH07XG5cbiAgICBpZiAoICF2YWxpZGF0ZS5pc1ZhbGlkRGF0ZSggZW5kVGltZSApIClcbiAgICAgICAgcmV0dXJuIHsgZXJyb3I6ICdpbnZhbGlkIGVuZCB0aW1lJywgfTtcblxuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRhYmxlLmFubm91bmNlbWVudC5maW5kQWxsKCB7XG4gICAgICAgIGF0dHJpYnV0ZXM6IFsgJ2Fubm91bmNlbWVudElkJywgXSxcbiAgICAgICAgd2hlcmU6ICAgICAge1xuICAgICAgICAgICAgJyRhbm5vdW5jZW1lbnRUYWcudGFnSTE4bi5uYW1lJCc6IHtcbiAgICAgICAgICAgICAgICBbIE9wLmluIF06IHRhZ3MsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnOiAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFsgT3AuYmV0d2VlbiBdOiBbXG4gICAgICAgICAgICAgICAgICAgIG5ldyBEYXRlKCBzdGFydFRpbWUgKSxcbiAgICAgICAgICAgICAgICAgICAgbmV3IERhdGUoIGVuZFRpbWUgKSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdpc1Bpbm5lZCc6ICAgIDEsXG4gICAgICAgICAgICAnaXNQdWJsaXNoZWQnOiAxLFxuICAgICAgICAgICAgJ2lzQXBwcm92ZWQnOiAgMSxcbiAgICAgICAgfSxcbiAgICAgICAgaW5jbHVkZTogWyB7XG4gICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRUYWcsXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXSxcbiAgICAgICAgICAgIGFzOiAgICAgICAgICdhbm5vdW5jZW1lbnRUYWcnLFxuICAgICAgICAgICAgaW5jbHVkZTogICAgWyB7XG4gICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUudGFnSTE4bixcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXSxcbiAgICAgICAgICAgICAgICBhczogICAgICAgICAndGFnSTE4bicsXG4gICAgICAgICAgICB9LCBdLFxuICAgICAgICB9LCBdLFxuICAgICAgICBncm91cDogICdhbm5vdW5jZW1lbnRJZCcsXG4gICAgICAgIGhhdmluZzogc2VxdWVsaXplLmxpdGVyYWwoIGBjb3VudCgqKSA9ICR7IHRhZ3MubGVuZ3RoIH1gICksXG4gICAgfSApXG4gICAgLnRoZW4oIGlkcyA9PiB0YWJsZS5hbm5vdW5jZW1lbnQuZmluZEFsbCgge1xuICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAnYW5ub3VuY2VtZW50SWQnLFxuICAgICAgICAgICAgJ3VwZGF0ZVRpbWUnLFxuICAgICAgICBdLFxuICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgYW5ub3VuY2VtZW50SWQ6IHtcbiAgICAgICAgICAgICAgICBbIE9wLmluIF06IGlkcy5tYXAoIGlkID0+IGlkLmFubm91bmNlbWVudElkICksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuYW5ub3VuY2VtZW50STE4bixcbiAgICAgICAgICAgICAgICBhczogICAgICAgICAnYW5ub3VuY2VtZW50STE4bicsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAndGl0bGUnLFxuICAgICAgICAgICAgICAgICAgICAnY29udGVudCcsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRUYWcsXG4gICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogWyAndGFnSWQnLCBdLFxuICAgICAgICAgICAgICAgIGluY2x1ZGU6ICAgIFsge1xuICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS50YWdJMThuLFxuICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAndGFnSTE4bicsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFsgJ25hbWUnLCBdLFxuICAgICAgICAgICAgICAgICAgICB3aGVyZTogICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZTogJ2VuLVVTJyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LCBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9ICkgKVxuICAgIC50aGVuKCBhbm5vdW5jZW1lbnRzID0+IGFubm91bmNlbWVudHMubWFwKCBhbm5vdW5jZW1lbnQgPT4gKCB7XG4gICAgICAgIGlkOiAgICAgICAgIGFubm91bmNlbWVudC5hbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgdGl0bGU6ICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS50aXRsZSxcbiAgICAgICAgY29udGVudDogICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS5jb250ZW50LFxuICAgICAgICB1cGRhdGVUaW1lOiBhbm5vdW5jZW1lbnQudXBkYXRlVGltZSxcbiAgICAgICAgdGFnczogICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudFRhZy5tYXAoIHRhZyA9PiAoIHtcbiAgICAgICAgICAgIGlkOiAgIHRhZy50YWdJZCxcbiAgICAgICAgICAgIG5hbWU6IHRhZy50YWdJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgfSApICksXG4gICAgfSApICkgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbn07XG4iLCJpbXBvcnQgYXNzb2NpYXRpb25zIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2Fzc29jaWF0aW9ucy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICggeyBhbm5vdW5jZW1lbnRJZCwgYW5ub3VuY2VtZW50RGF0YSwgfSA9IHt9ICkgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG5cbiAgICBjb25zdCBpMThuID0gYW5ub3VuY2VtZW50RGF0YS5hbm5vdW5jZW1lbnRJMThuO1xuICAgIGRlbGV0ZSBhbm5vdW5jZW1lbnREYXRhLmFubm91bmNlbWVudEkxOG47XG5cbiAgICAvLyBJbml0aWFsaXplIHJlc3VsdCBvYmplY3RcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICByZXN1bHQuaTE4biA9IHt9O1xuICAgIHJlc3VsdC5pMThuLmFmZmVjdGVkQ291bnQgPSB7fTtcblxuICAgIGZvciAoIGxldCBpID0gMDsgaSA8IGkxOG4ubGVuZ3RoOyBpKysgKSB7XG4gICAgICAgIGF3YWl0IHRhYmxlLmFubm91bmNlbWVudEkxOG4udXBkYXRlKCBpMThuWyBpIF0sIHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgbGFuZ3VhZ2U6IGkxOG5bIGkgXS5sYW5ndWFnZSxcbiAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0gKVxuICAgICAgICAudGhlbihcbiAgICAgICAgICAgICggY291bnQgKSA9PiB7IHJlc3VsdC5pMThuLmFmZmVjdGVkQ291bnRbIGkxOG5bIGkgXS5sYW5ndWFnZSBdID0gY291bnQ7IH1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnQudXBkYXRlKCBhbm5vdW5jZW1lbnREYXRhLCB7XG4gICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5hbm5vdW5jZW1lbnRJMThuLFxuICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdhbm5vdW5jZW1lbnRJMThuJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICBhbm5vdW5jZW1lbnRJZCxcbiAgICAgICAgfSxcbiAgICB9IClcbiAgICAudGhlbihcbiAgICAgICAgKCBjb3VudCApID0+IHsgcmVzdWx0LmFmZmVjdGVkQ291bnQgPSBjb3VudDsgfVxuICAgICk7XG5cbiAgICB0YWJsZS5kYXRhYmFzZS5jbG9zZSgpO1xuXG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCJpbXBvcnQgYXNzb2NpYXRpb25zIGZyb20gJ21vZGVscy9hbm5vdW5jZW1lbnQvb3BlcmF0aW9uL2Fzc29jaWF0aW9ucy5qcyc7XG5pbXBvcnQgbGFuZ3VhZ2VTZXR0aW5ncyBmcm9tICdzZXR0aW5ncy9sYW5ndWFnZS9jb25maWcuanMnO1xuXG5mdW5jdGlvbiBpc0xhbmdFeGlzdCAoIGRhdGEsIGxhbmd1YWdlICkge1xuICAgIGZvciAoIGxldCBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKysgKSB7XG4gICAgICAgIGlmICggZGF0YVsgaSBdLmxhbmd1YWdlID09PSBsYW5ndWFnZSApXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIHsgYW5ub3VuY2VtZW50RGF0YSwgfSA9IHt9ICkgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG5cbiAgICBsYW5ndWFnZVNldHRpbmdzLnN1cHBvcnQuZm9yRWFjaCggKCBsYW5nICkgPT4ge1xuICAgICAgICBpZiAoICFpc0xhbmdFeGlzdCggYW5ub3VuY2VtZW50RGF0YS5hbm5vdW5jZW1lbnRJMThuLCBsYW5nICkgKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCBgTWlzc2luZyBsYW5ndWFnZSBmb3IgYW5ub3VuY2VtZW50STE4bjogJHsgbGFuZyB9YCApO1xuXG4gICAgICAgIGFubm91bmNlbWVudERhdGEuYW5ub3VuY2VtZW50RmlsZS5mb3JFYWNoKCAoIGZpbGUgKSA9PiB7XG4gICAgICAgICAgICBpZiAoICFpc0xhbmdFeGlzdCggZmlsZS5hbm5vdW5jZW1lbnRGaWxlSTE4biwgbGFuZyApIClcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIGBNaXNzaW5nIGxhbmd1YWdlIGZvciBhbm5vdW5jZW1lbnRGaWxlSTE4bjogJHsgbGFuZyB9YCApO1xuICAgICAgICB9ICk7XG4gICAgfSApO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRhYmxlLmFubm91bmNlbWVudC5jcmVhdGUoIGFubm91bmNlbWVudERhdGEsIHtcbiAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG1vZGVsOiAgIHRhYmxlLmFubm91bmNlbWVudEkxOG4sXG4gICAgICAgICAgICAgICAgYXM6ICAgICAgJ2Fubm91bmNlbWVudEkxOG4nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBtb2RlbDogICB0YWJsZS5hbm5vdW5jZW1lbnRUYWcsXG4gICAgICAgICAgICAgICAgYXM6ICAgICAgJ2Fubm91bmNlbWVudFRhZycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG1vZGVsOiAgIHRhYmxlLmFubm91bmNlbWVudEZpbGUsXG4gICAgICAgICAgICAgICAgYXM6ICAgICAgJ2Fubm91bmNlbWVudEZpbGUnLFxuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHRhYmxlLmFubm91bmNlbWVudEZpbGVJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICdhbm5vdW5jZW1lbnRGaWxlSTE4bicsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIGFubm91bmNlbWVudCA9PiAoIHtcbiAgICAgICAgICAgIGlkOiAgICAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50SWQsXG4gICAgICAgICAgICB0aXRsZTogICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudEkxOG5bIDAgXS50aXRsZSxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50STE4blsgMCBdLmNvbnRlbnQsXG4gICAgICAgICAgICBhdXRob3I6ICAgICAgYW5ub3VuY2VtZW50LmF1dGhvcixcbiAgICAgICAgICAgIHB1Ymxpc2hUaW1lOiBhbm5vdW5jZW1lbnQucHVibGlzaFRpbWUsXG4gICAgICAgICAgICB1cGRhdGVUaW1lOiAgYW5ub3VuY2VtZW50LnVwZGF0ZVRpbWUsXG4gICAgICAgICAgICB2aWV3czogICAgICAgYW5ub3VuY2VtZW50LnZpZXdzLFxuICAgICAgICAgICAgaXNQaW5uZWQ6ICAgIGFubm91bmNlbWVudC5pc1Bpbm5lZCxcbiAgICAgICAgICAgIGZpbGVzOiAgICAgICBhbm5vdW5jZW1lbnQuYW5ub3VuY2VtZW50RmlsZS5tYXAoXG4gICAgICAgICAgICAgICAgYW5ub3VuY2VtZW50RmlsZSA9PiAoIHtcbiAgICAgICAgICAgICAgICAgICAgdXBsb2FkVGltZTogYW5ub3VuY2VtZW50RmlsZS51cGxvYWRUaW1lLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAgICAgICBhbm5vdW5jZW1lbnRGaWxlLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIHVybDogICAgICAgIGFubm91bmNlbWVudEZpbGUuYW5ub3VuY2VtZW50RmlsZUkxOG5bIDAgXS51cmwsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICAgICAgIGFubm91bmNlbWVudEZpbGUuYW5ub3VuY2VtZW50RmlsZUkxOG5bIDAgXS5uYW1lLFxuICAgICAgICAgICAgICAgIH0gKSxcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWdzOiAgICAgICAgYW5ub3VuY2VtZW50LmFubm91bmNlbWVudFRhZy5tYXAoXG4gICAgICAgICAgICAgICAgYW5ub3VuY2VtZW50VGFnID0+ICgge1xuICAgICAgICAgICAgICAgICAgICBpZDogICBhbm5vdW5jZW1lbnRUYWcudGFnSWQsXG4gICAgICAgICAgICAgICAgfSApXG4gICAgICAgICAgICApLFxuICAgICAgICB9IClcbiAgICApO1xuXG4gICAgdGFibGUuZGF0YWJhc2UuY2xvc2UoKTtcblxuICAgIHJldHVybiBkYXRhO1xufTtcbiIsImltcG9ydCBhc3NvY2lhdGlvbnMgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vYXNzb2NpYXRpb25zLmpzJztcbmltcG9ydCBsYW5ndWFnZVNldHRpbmdzIGZyb20gJ3NldHRpbmdzL2xhbmd1YWdlL2NvbmZpZy5qcyc7XG5cbmZ1bmN0aW9uIGlzTGFuZ0V4aXN0ICggZGF0YSwgbGFuZ3VhZ2UgKSB7XG4gICAgZm9yICggbGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKyApIHtcbiAgICAgICAgaWYgKCBkYXRhWyBpIF0ubGFuZ3VhZ2UgPT09IGxhbmd1YWdlIClcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICggeyBhbm5vdW5jZW1lbnRGaWxlRGF0YSwgfSA9IHt9ICkgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG5cbiAgICBsYW5ndWFnZVNldHRpbmdzLnN1cHBvcnQuZm9yRWFjaCggKCBsYW5nICkgPT4ge1xuICAgICAgICBpZiAoICFpc0xhbmdFeGlzdCggYW5ub3VuY2VtZW50RmlsZURhdGEuYW5ub3VuY2VtZW50RmlsZUkxOG4sIGxhbmcgKSApXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIGBNaXNzaW5nIGxhbmd1YWdlIGZvciBhbm5vdW5jZW1lbnRGaWxlSTE4bjogJHsgbGFuZyB9YCApO1xuICAgIH0gKTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnRGaWxlLmNyZWF0ZSggYW5ub3VuY2VtZW50RmlsZURhdGEsIHtcbiAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG1vZGVsOiB0YWJsZS5hbm5vdW5jZW1lbnRGaWxlSTE4bixcbiAgICAgICAgICAgICAgICBhczogICAgJ2Fubm91bmNlbWVudEZpbGVJMThuJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIGFubm91bmNlbWVudEZpbGUgPT4gKCB7XG4gICAgICAgICAgICB1cGxvYWRUaW1lOiBhbm5vdW5jZW1lbnRGaWxlLnVwbG9hZFRpbWUsXG4gICAgICAgICAgICB0eXBlOiAgICAgICBhbm5vdW5jZW1lbnRGaWxlLnR5cGUsXG4gICAgICAgICAgICB1cmw6ICAgICAgICBhbm5vdW5jZW1lbnRGaWxlLmFubm91bmNlbWVudEZpbGVJMThuWyAwIF0udXJsLFxuICAgICAgICAgICAgbmFtZTogICAgICAgYW5ub3VuY2VtZW50RmlsZS5hbm5vdW5jZW1lbnRGaWxlSTE4blsgMCBdLm5hbWUsXG4gICAgICAgIH0gKSxcbiAgICApO1xuXG4gICAgdGFibGUuZGF0YWJhc2UuY2xvc2UoKTtcblxuICAgIHJldHVybiBkYXRhO1xufTtcbiIsImltcG9ydCBhc3NvY2lhdGlvbnMgZnJvbSAnbW9kZWxzL2Fubm91bmNlbWVudC9vcGVyYXRpb24vYXNzb2NpYXRpb25zLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCB7IGFubm91bmNlbWVudElkLCB0YWdJZCwgfSA9IHt9ICkgPT4ge1xuICAgIGNvbnN0IHRhYmxlID0gYXdhaXQgYXNzb2NpYXRpb25zKCk7XG5cbiAgICBjb25zdCBhbm5vdW5jZW1lbnRUYWdEYXRhID0gdGFnSWQubWFwKCBpZCA9PiAoIHtcbiAgICAgICAgYW5ub3VuY2VtZW50SWQsXG4gICAgICAgIHRhZ0lkOiAgICAgICAgICBpZCxcbiAgICB9ICkgKTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0YWJsZS5hbm5vdW5jZW1lbnRUYWcuYnVsa0NyZWF0ZSggYW5ub3VuY2VtZW50VGFnRGF0YSApXG4gICAgLnRoZW4oXG4gICAgICAgIGFubm91bmNlbWVudFRhZ3MgPT4gYW5ub3VuY2VtZW50VGFncy5tYXAoXG4gICAgICAgICAgICBhbm5vdW5jZW1lbnRUYWcgPT4gKCB7XG4gICAgICAgICAgICAgICAgYW5ub3VuY2VtZW50SWQ6ICAgYW5ub3VuY2VtZW50VGFnLmFubm91bmNlbWVudElkLFxuICAgICAgICAgICAgICAgIHRhZ0lkOiAgICAgICAgICBhbm5vdW5jZW1lbnRUYWcudGFnSWQsXG4gICAgICAgICAgICB9IClcbiAgICAgICAgKVxuICAgICk7XG5cbiAgICB0YWJsZS5kYXRhYmFzZS5jbG9zZSgpO1xuXG4gICAgcmV0dXJuIGRhdGE7XG59O1xuIiwiaW1wb3J0IGNvbmZpZyBmcm9tICdzZXR0aW5ncy9zZXJ2ZXIvY29uZmlnLmpzJztcbmltcG9ydCBjb25uZWN0IGZyb20gJ3NldHRpbmdzL2RhdGFiYXNlL2Nvbm5lY3QuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdGVhY2hlckRhdGFiYXNlID0gYXdhaXQgY29ubmVjdCggJ2ZhY3VsdHknICk7XG4gICAgY29uc3QgdGFibGUgPSB7XG4gICAgICAgIGNvbmZlcmVuY2VJMThuOiAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvY29uZmVyZW5jZV9pMThuYCApLFxuICAgICAgICBjb25mZXJlbmNlOiAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL2NvbmZlcmVuY2VgICksXG4gICAgICAgIGRlcGFydG1lbnRJMThuOiAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvZGVwYXJ0bWVudF9pMThuYCApLFxuICAgICAgICBkZXBhcnRtZW50OiAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL2RlcGFydG1lbnRgICksXG4gICAgICAgIGVkdWNhdGlvbkkxOG46ICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvZWR1Y2F0aW9uX2kxOG5gICksXG4gICAgICAgIGVkdWNhdGlvbjogICAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvZWR1Y2F0aW9uYCApLFxuICAgICAgICBleHBlcmllbmNlSTE4bjogICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL2V4cGVyaWVuY2VfaTE4bmAgKSxcbiAgICAgICAgZXhwZXJpZW5jZTogICAgICAgICAgICAgdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy9leHBlcmllbmNlYCApLFxuICAgICAgICBob25vckkxOG46ICAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL2hvbm9yX2kxOG5gICksXG4gICAgICAgIGhvbm9yOiAgICAgICAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvaG9ub3JgICksXG4gICAgICAgIGxhYkkxOG46ICAgICAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvbGFiX2kxOG5gICksXG4gICAgICAgIGxhYjogICAgICAgICAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvbGFiYCApLFxuICAgICAgICBvZmZpY2VJMThuOiAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL29mZmljZV9pMThuYCApLFxuICAgICAgICBvZmZpY2U6ICAgICAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL29mZmljZWAgKSxcbiAgICAgICAgcGF0ZW50STE4bjogICAgICAgICAgICAgdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy9wYXRlbnRfaTE4bmAgKSxcbiAgICAgICAgcGF0ZW50OiAgICAgICAgICAgICAgICAgdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy9wYXRlbnRgICksXG4gICAgICAgIHByb2ZpbGVJMThuOiAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvcHJvZmlsZV9pMThuYCApLFxuICAgICAgICBwcm9maWxlOiAgICAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL3Byb2ZpbGVgICksXG4gICAgICAgIHByb2plY3RJMThuOiAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvcHJvamVjdF9pMThuYCApLFxuICAgICAgICBwcm9qZWN0OiAgICAgICAgICAgICAgICB0ZWFjaGVyRGF0YWJhc2UuaW1wb3J0KCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vbW9kZWxzL2ZhY3VsdHkvdGFibGVzL3Byb2plY3RgICksXG4gICAgICAgIHB1YmxpY2F0aW9uSTE4bjogICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvcHVibGljYXRpb25faTE4bmAgKSxcbiAgICAgICAgcHVibGljYXRpb246ICAgICAgICAgICAgdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy9wdWJsaWNhdGlvbmAgKSxcbiAgICAgICAgc3BlY2lhbHR5OiAgICAgICAgICAgICAgdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy9zcGVjaWFsdHlgICksXG4gICAgICAgIHRlY2hub2xvZ3lUcmFuc2ZlcjogICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvdGVjaG5vbG9neV90cmFuc2ZlcmAgKSxcbiAgICAgICAgdGVjaG5vbG9neVRyYW5zZmVySTE4bjogdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy90ZWNobm9sb2d5X3RyYW5zZmVyX2kxOG5gICksXG4gICAgICAgIHRpdGxlSTE4bjogICAgICAgICAgICAgIHRlYWNoZXJEYXRhYmFzZS5pbXBvcnQoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9tb2RlbHMvZmFjdWx0eS90YWJsZXMvdGl0bGVfaTE4bmAgKSxcbiAgICAgICAgdGl0bGU6ICAgICAgICAgICAgICAgICAgdGVhY2hlckRhdGFiYXNlLmltcG9ydCggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L21vZGVscy9mYWN1bHR5L3RhYmxlcy90aXRsZWAgKSxcbiAgICB9O1xuXG4gICAgLy8gVHJhbnNsYXRpb24gcmVsYXRpb25zaGlwLlxuICAgIC8vIGBjb25mZXJlbmNlYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUuY29uZmVyZW5jZS5oYXNNYW55KCB0YWJsZS5jb25mZXJlbmNlSTE4biwge1xuICAgICAgICBhczogICAgICAgICAnY29uZmVyZW5jZUkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAnY29uZmVyZW5jZUlkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ2NvbmZlcmVuY2VJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYGRlcGFydG1lbnRgIGhhcyBtYW55IHRyYW5zbGF0aW9ucy5cbiAgICB0YWJsZS5kZXBhcnRtZW50Lmhhc01hbnkoIHRhYmxlLmRlcGFydG1lbnRJMThuLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdkZXBhcnRtZW50STE4bicsXG4gICAgICAgIGZvcmVpZ25LZXk6ICdkZXBhcnRtZW50SWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAnZGVwYXJ0bWVudElkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgZWR1Y2F0aW9uYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUuZWR1Y2F0aW9uLmhhc01hbnkoIHRhYmxlLmVkdWNhdGlvbkkxOG4sIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ2VkdWNhdGlvbkkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAnZWR1Y2F0aW9uSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAnZWR1Y2F0aW9uSWQnLFxuICAgIH0gKTtcblxuICAgIC8vIGBleHBlcmllbmNlYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUuZXhwZXJpZW5jZS5oYXNNYW55KCB0YWJsZS5leHBlcmllbmNlSTE4biwge1xuICAgICAgICBhczogICAgICAgICAnZXhwZXJpZW5jZUkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAnZXhwZXJpZW5jZUlkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ2V4cGVyaWVuY2VJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYGhvbm9yYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUuaG9ub3IuaGFzTWFueSggdGFibGUuaG9ub3JJMThuLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdob25vckkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAnaG9ub3JJZCcsXG4gICAgICAgIHNvdXJjZUtleTogICdob25vcklkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgbGFiYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUubGFiLmhhc01hbnkoIHRhYmxlLmxhYkkxOG4sIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ2xhYkkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAnbGFiSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAnbGFiSWQnLFxuICAgIH0gKTtcblxuICAgIC8vIGBvZmZpY2VgIGhhcyBtYW55IHRyYW5zbGF0aW9ucy5cbiAgICB0YWJsZS5vZmZpY2UuaGFzTWFueSggdGFibGUub2ZmaWNlSTE4biwge1xuICAgICAgICBhczogICAgICAgICAnb2ZmaWNlSTE4bicsXG4gICAgICAgIGZvcmVpZ25LZXk6ICdvZmZpY2VJZCcsXG4gICAgICAgIHNvdXJjZUtleTogICdvZmZpY2VJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHBhdGVudGAgaGFzIG1hbnkgdHJhbnNsYXRpb25zLlxuICAgIHRhYmxlLnBhdGVudC5oYXNNYW55KCB0YWJsZS5wYXRlbnRJMThuLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdwYXRlbnRJMThuJyxcbiAgICAgICAgZm9yZWlnbktleTogJ3BhdGVudElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3BhdGVudElkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgcHJvZmlsZWAgaGFzIG1hbnkgdHJhbnNsYXRpb25zLlxuICAgIHRhYmxlLnByb2ZpbGUuaGFzTWFueSggdGFibGUucHJvZmlsZUkxOG4sIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ3Byb2ZpbGVJMThuJyxcbiAgICAgICAgZm9yZWlnbktleTogJ3Byb2ZpbGVJZCcsXG4gICAgICAgIHNvdXJjZUtleTogICdwcm9maWxlSWQnLFxuICAgIH0gKTtcblxuICAgIC8vIGBwcm9qZWN0YCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUucHJvamVjdC5oYXNNYW55KCB0YWJsZS5wcm9qZWN0STE4biwge1xuICAgICAgICBhczogICAgICAgICAncHJvamVjdEkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAncHJvamVjdElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2plY3RJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHB1YmxpY2F0aW9uYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUucHVibGljYXRpb24uaGFzTWFueSggdGFibGUucHVibGljYXRpb25JMThuLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdwdWJsaWNhdGlvbkkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAncHVibGljYXRpb25JZCcsXG4gICAgICAgIHNvdXJjZUtleTogICdwdWJsaWNhdGlvbklkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgdGVjaG5vbG9neVRyYW5zZmVyYCBoYXMgbWFueSB0cmFuc2xhdGlvbnMuXG4gICAgdGFibGUudGVjaG5vbG9neVRyYW5zZmVyLmhhc01hbnkoIHRhYmxlLnRlY2hub2xvZ3lUcmFuc2ZlckkxOG4sIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ3RlY2hub2xvZ3lUcmFuc2ZlckkxOG4nLFxuICAgICAgICBmb3JlaWduS2V5OiAndGVjaG5vbG9neVRyYW5zZmVySWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAndGVjaG5vbG9neVRyYW5zZmVySWQnLFxuICAgIH0gKTtcblxuICAgIC8vIGB0aXRsZWAgaGFzIG1hbnkgdHJhbnNsYXRpb25zLlxuICAgIHRhYmxlLnRpdGxlLmhhc01hbnkoIHRhYmxlLnRpdGxlSTE4biwge1xuICAgICAgICBhczogICAgICAgICAndGl0bGVJMThuJyxcbiAgICAgICAgZm9yZWlnbktleTogJ3RpdGxlSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAndGl0bGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gUHJvZmlsZSByZWxhdGlvbnNoaXAuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGBjb25mZXJlbmNlYC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLmNvbmZlcmVuY2UsIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ2NvbmZlcmVuY2UnLFxuICAgICAgICBmb3JlaWduS2V5OiAnY29uZmVyZW5jZUlkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGBkZXBhcnRtZW50YC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLmRlcGFydG1lbnQsIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ2RlcGFydG1lbnQnLFxuICAgICAgICBmb3JlaWduS2V5OiAnZGVwYXJ0bWVudElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGBlZHVjYXRpb25gLlxuICAgIHRhYmxlLnByb2ZpbGUuaGFzTWFueSggdGFibGUuZWR1Y2F0aW9uLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdlZHVjYXRpb24nLFxuICAgICAgICBmb3JlaWduS2V5OiAnZWR1Y2F0aW9uSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAncHJvZmlsZUlkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgcHJvZmlsZWAgaGFzIG1hbnkgYGV4cGVyaWVuY2VgLlxuICAgIHRhYmxlLnByb2ZpbGUuaGFzTWFueSggdGFibGUuZXhwZXJpZW5jZSwge1xuICAgICAgICBhczogICAgICAgICAnZXhwZXJpZW5jZScsXG4gICAgICAgIGZvcmVpZ25LZXk6ICdleHBlcmllbmNlSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAncHJvZmlsZUlkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgcHJvZmlsZWAgaGFzIG1hbnkgYGhvbm9yYC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLmhvbm9yLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdob25vcicsXG4gICAgICAgIGZvcmVpZ25LZXk6ICdob25vcklkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGBsYWJgLlxuICAgIHRhYmxlLnByb2ZpbGUuaGFzTWFueSggdGFibGUubGFiLCB7XG4gICAgICAgIGFzOiAgICAgICAgICdsYWInLFxuICAgICAgICBmb3JlaWduS2V5OiAnbGFiSWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAncHJvZmlsZUlkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgcHJvZmlsZWAgaGFzIG1hbnkgYG9mZmljZWAuXG4gICAgdGFibGUucHJvZmlsZS5oYXNNYW55KCB0YWJsZS5vZmZpY2UsIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ29mZmljZScsXG4gICAgICAgIGZvcmVpZ25LZXk6ICdvZmZpY2VJZCcsXG4gICAgICAgIHNvdXJjZUtleTogICdwcm9maWxlSWQnLFxuICAgIH0gKTtcblxuICAgIC8vIGBwcm9maWxlYCBoYXMgbWFueSBgcGF0ZW50YC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLnBhdGVudCwge1xuICAgICAgICBhczogICAgICAgICAncGF0ZW50JyxcbiAgICAgICAgZm9yZWlnbktleTogJ3BhdGVudElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGBwcm9qZWN0YC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLnByb2plY3QsIHtcbiAgICAgICAgYXM6ICAgICAgICAgJ3Byb2plY3QnLFxuICAgICAgICBmb3JlaWduS2V5OiAncHJvamVjdElkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGBwdWJsaWNhdGlvbmAuXG4gICAgdGFibGUucHJvZmlsZS5oYXNNYW55KCB0YWJsZS5wdWJsaWNhdGlvbiwge1xuICAgICAgICBhczogICAgICAgICAncHVibGljYXRpb24nLFxuICAgICAgICBmb3JlaWduS2V5OiAncHVibGljYXRpb25JZCcsXG4gICAgICAgIHNvdXJjZUtleTogICdwcm9maWxlSWQnLFxuICAgIH0gKTtcblxuICAgIC8vIGBwcm9maWxlYCBoYXMgbWFueSBgc3BlY2lhbHR5YC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLnNwZWNpYWx0eSwge1xuICAgICAgICBhczogICAgICAgICAnc3BlY2lhbHR5JyxcbiAgICAgICAgZm9yZWlnbktleTogJ3NwZWNpYWx0eUlkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gYHByb2ZpbGVgIGhhcyBtYW55IGB0ZWNobm9sb2d5VHJhbnNmZXJgLlxuICAgIHRhYmxlLnByb2ZpbGUuaGFzTWFueSggdGFibGUudGVjaG5vbG9neVRyYW5zZmVyLCB7XG4gICAgICAgIGFzOiAgICAgICAgICd0ZWNobm9sb2d5VHJhbnNmZXInLFxuICAgICAgICBmb3JlaWduS2V5OiAndGVjaG5vbG9neVRyYW5zZmVySWQnLFxuICAgICAgICBzb3VyY2VLZXk6ICAncHJvZmlsZUlkJyxcbiAgICB9ICk7XG5cbiAgICAvLyBgcHJvZmlsZWAgaGFzIG1hbnkgYHRpdGxlYC5cbiAgICB0YWJsZS5wcm9maWxlLmhhc01hbnkoIHRhYmxlLnRpdGxlLCB7XG4gICAgICAgIGFzOiAgICAgICAgICd0aXRsZScsXG4gICAgICAgIGZvcmVpZ25LZXk6ICd0aXRsZUlkJyxcbiAgICAgICAgc291cmNlS2V5OiAgJ3Byb2ZpbGVJZCcsXG4gICAgfSApO1xuXG4gICAgLy8gQW55IG9uZSB3aG8gdXNlIHRoaXMgbW9kdWxlIHNob3VsZCByZW1lbWJlciB0byBjbG9zZSBjb25uZWN0aW9uLFxuICAgIC8vIGxpa2UgYHRhYmxlLmRhdGFiYXNlLmNsb3NlKClgLlxuICAgIHRhYmxlLmRhdGFiYXNlID0gdGVhY2hlckRhdGFiYXNlO1xuXG4gICAgcmV0dXJuIHRhYmxlO1xufTtcbiIsImltcG9ydCBhc3NvY2lhdGlvbnMgZnJvbSAnbW9kZWxzL2ZhY3VsdHkvb3BlcmF0aW9uL2Fzc29jaWF0aW9ucy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICggeyBsYW5ndWFnZSA9ICd6aC1UVycsIHByb2ZpbGVJZCA9IDEsIH0gPSB7fSApID0+IHtcbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuXG4gICAgY29uc3QgZGF0YSA9IHt9O1xuXG4gICAgLy8gUHJvbWlzZS5hbGwgdXNlcyBpdGVyYXRvciwgc28gaXQgd2lsbCBrZWVwIHRoZSBvcmRlciBvZiB0aGUgZWxlbWVudHMgaW4gYXJyYXkgdGhhdCBwYXNzZWQgaW5cbiAgICBbXG4gICAgICAgIGRhdGEuY29uZmVyZW5jZXMsXG4gICAgICAgIGRhdGEuZGVwYXJ0bWVudHMsXG4gICAgICAgIGRhdGEuZWR1Y2F0aW9ucyxcbiAgICAgICAgZGF0YS5leHBlcmllbmNlcyxcbiAgICAgICAgZGF0YS5ob25vcnMsXG4gICAgICAgIGRhdGEubGFicyxcbiAgICAgICAgZGF0YS5vZmZpY2VzLFxuICAgICAgICBkYXRhLnBhdGVudHMsXG4gICAgICAgIGRhdGEucHJvZmlsZSxcbiAgICAgICAgZGF0YS5wcm9qZWN0cyxcbiAgICAgICAgZGF0YS5wdWJsaWNhdGlvbnMsXG4gICAgICAgIGRhdGEuc3BlY2lhbHRpZXMsXG4gICAgICAgIGRhdGEudGVjaG5vbG9neVRyYW5zZmVycyxcbiAgICAgICAgZGF0YS50aXRsZXMsXG4gICAgXSA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgICAgICBbXG4gICAgICAgICAgICB0YWJsZS5jb25mZXJlbmNlLmZpbmRBbGwoIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmNvbmZlcmVuY2VJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2NvbmZlcmVuY2VJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY29uZmVyZW5jZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdob3N0RGF0ZScsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgY29uZmVyZW5jZXMgPT4gY29uZmVyZW5jZXMubWFwKFxuICAgICAgICAgICAgICAgICAgICBjb25mZXJlbmNlID0+ICgge1xuICAgICAgICAgICAgICAgICAgICAgICAgaG9zdERhdGU6ICAgY29uZmVyZW5jZS5ob3N0RGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZlcmVuY2U6IGNvbmZlcmVuY2UuY29uZmVyZW5jZUkxOG5bIDAgXS5jb25mZXJlbmNlLFxuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgdGFibGUuZGVwYXJ0bWVudC5maW5kQWxsKCB7XG4gICAgICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5kZXBhcnRtZW50STE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdkZXBhcnRtZW50STE4bicsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RlcGFydG1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW10sXG4gICAgICAgICAgICAgICAgd2hlcmU6ICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgZGVwYXJ0bWVudHMgPT4gZGVwYXJ0bWVudHMubWFwKFxuICAgICAgICAgICAgICAgICAgICBkZXBhcnRtZW50ID0+ICgge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVwYXJ0bWVudDogZGVwYXJ0bWVudC5kZXBhcnRtZW50STE4blsgMCBdLmRlcGFydG1lbnQsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5lZHVjYXRpb24uZmluZEFsbCgge1xuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUuZWR1Y2F0aW9uSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdlZHVjYXRpb25JMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbWFqb3InLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzY2hvb2wnLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAnZGVncmVlJyxcbiAgICAgICAgICAgICAgICAgICAgJ2VuZFllYXInLFxuICAgICAgICAgICAgICAgICAgICAnbmF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0WWVhcicsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgZWR1Y2F0aW9ucyA9PiBlZHVjYXRpb25zLm1hcChcbiAgICAgICAgICAgICAgICAgICAgZWR1Y2F0aW9uID0+ICgge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVncmVlOiAgICBlZHVjYXRpb24uZGVncmVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kWWVhcjogICBlZHVjYXRpb24uZW5kWWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hdGlvbjogICAgZWR1Y2F0aW9uLm5hdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0WWVhcjogZWR1Y2F0aW9uLnN0YXJ0WWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ham9yOiAgICAgZWR1Y2F0aW9uLmVkdWNhdGlvbkkxOG5bIDAgXS5tYWpvcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjaG9vbDogICAgZWR1Y2F0aW9uLmVkdWNhdGlvbkkxOG5bIDAgXS5zY2hvb2wsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5leHBlcmllbmNlLmZpbmRBbGwoIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLmV4cGVyaWVuY2VJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2V4cGVyaWVuY2VJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGVwYXJ0bWVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29yZ2FuaXphdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgJ2VuZFllYXInLFxuICAgICAgICAgICAgICAgICAgICAnc3RhcnRZZWFyJyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICBleHBlcmllbmNlcyA9PiBleHBlcmllbmNlcy5tYXAoXG4gICAgICAgICAgICAgICAgICAgIGV4cGVyaWVuY2UgPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRZZWFyOiAgICAgIGV4cGVyaWVuY2UuZW5kWWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0WWVhcjogICAgZXhwZXJpZW5jZS5zdGFydFllYXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXBhcnRtZW50OiAgIGV4cGVyaWVuY2UuZXhwZXJpZW5jZUkxOG5bIDAgXS5kZXBhcnRtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgb3JnYW5pemF0aW9uOiBleHBlcmllbmNlLmV4cGVyaWVuY2VJMThuWyAwIF0ub3JnYW5pemF0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICAgICAgICBleHBlcmllbmNlLmV4cGVyaWVuY2VJMThuWyAwIF0udGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5ob25vci5maW5kQWxsKCB7XG4gICAgICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5ob25vckkxOG4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAnaG9ub3JJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaG9ub3InLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAnaG9ub3JZZWFyJyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICBob25vcnMgPT4gaG9ub3JzLm1hcChcbiAgICAgICAgICAgICAgICAgICAgaG9ub3IgPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBob25vclllYXI6IGhvbm9yLmhvbm9yWWVhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhvbm9yOiAgICAgaG9ub3IuaG9ub3JJMThuWyAwIF0uaG9ub3IsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5sYWIuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUubGFiSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdsYWJJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYWRkcmVzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAnbGFiV2ViJyxcbiAgICAgICAgICAgICAgICAgICAgJ3RlbCcsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgbGFicyA9PiBsYWJzLm1hcChcbiAgICAgICAgICAgICAgICAgICAgbGFiID0+ICgge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFiV2ViOiAgbGFiLmxhYldlYixcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbDogICAgIGxhYi50ZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiBsYWIubGFiSTE4blsgMCBdLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAgICBsYWIubGFiSTE4blsgMCBdLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5vZmZpY2UuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUub2ZmaWNlSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdvZmZpY2VJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYWRkcmVzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICd0ZWwnLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUlkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9IClcbiAgICAgICAgICAgIC50aGVuKFxuICAgICAgICAgICAgICAgIG9mZmljZXMgPT4gb2ZmaWNlcy5tYXAoXG4gICAgICAgICAgICAgICAgICAgIG9mZmljZSA9PiAoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbDogICAgIG9mZmljZS50ZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiBvZmZpY2Uub2ZmaWNlSTE4blsgMCBdLmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5wYXRlbnQuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUucGF0ZW50STE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICdwYXRlbnRJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaW52ZW50b3InLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYXRlbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYXRlbnRPd25lcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdhcHBsaWNhdGlvbkRhdGUnLFxuICAgICAgICAgICAgICAgICAgICAnY2VydGlmaWNhdGlvbk51bWJlcicsXG4gICAgICAgICAgICAgICAgICAgICdleHBpcmVEYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgJ2lzc3VlRGF0ZScsXG4gICAgICAgICAgICAgICAgICAgICduYXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAnbnNjTnVtYmVyJyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICBwYXRlbnRzID0+IHBhdGVudHMubWFwKFxuICAgICAgICAgICAgICAgICAgICBwYXRlbnQgPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBsaWNhdGlvbkRhdGU6ICAgICBwYXRlbnQuYXBwbGljYXRpb25EYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2VydGlmaWNhdGlvbk51bWJlcjogcGF0ZW50LmNlcnRpZmljYXRpb25OdW1iZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBpcmVEYXRlOiAgICAgICAgICBwYXRlbnQuZXhwaXJlRGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzc3VlRGF0ZTogICAgICAgICAgIHBhdGVudC5pc3N1ZURhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYXRpb246ICAgICAgICAgICAgICBwYXRlbnQubmF0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgbnNjTnVtYmVyOiAgICAgICAgICAgcGF0ZW50Lm5zY051bWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIGludmVudG9yOiAgICAgICAgICAgIHBhdGVudC5wYXRlbnRJMThuWyAwIF0uaW52ZW50b3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRlbnQ6ICAgICAgICAgICAgICBwYXRlbnQucGF0ZW50STE4blsgMCBdLnBhdGVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGVudE93bmVyOiAgICAgICAgIHBhdGVudC5wYXRlbnRJMThuWyAwIF0ucGF0ZW50T3duZXIsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5wcm9maWxlLmZpbmRPbmUoIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLnByb2ZpbGVJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ3Byb2ZpbGVJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdlbWFpbCcsXG4gICAgICAgICAgICAgICAgICAgICdmYXgnLFxuICAgICAgICAgICAgICAgICAgICAnbmF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgJ3BlcnNvbmFsV2ViJyxcbiAgICAgICAgICAgICAgICAgICAgJ3Bob3RvJyxcbiAgICAgICAgICAgICAgICAgICAgJ3Bvc2l0aW9uJyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICBwcm9maWxlID0+ICgge1xuICAgICAgICAgICAgICAgICAgICBlbWFpbDogICAgICAgcHJvZmlsZS5lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgZmF4OiAgICAgICAgIHByb2ZpbGUuZmF4LFxuICAgICAgICAgICAgICAgICAgICBuYXRpb246ICAgICAgcHJvZmlsZS5uYXRpb24sXG4gICAgICAgICAgICAgICAgICAgIHBlcnNvbmFsV2ViOiBwcm9maWxlLnBlcnNvbmFsV2ViLFxuICAgICAgICAgICAgICAgICAgICBwaG90bzogICAgICAgcHJvZmlsZS5waG90byxcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICAgIHByb2ZpbGUucG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICAgICAgICBwcm9maWxlLnByb2ZpbGVJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUlkLFxuICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIHRhYmxlLnByb2plY3QuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgIGluY2x1ZGU6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUucHJvamVjdEkxOG4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAncHJvamVjdEkxOG4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3VwcG9ydCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdjYXRlZ29yeScsXG4gICAgICAgICAgICAgICAgICAgICdlbmRZZWFyJyxcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0WWVhcicsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgcHJvamVjdHMgPT4gcHJvamVjdHMubWFwKFxuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0ID0+ICgge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6ICBwcm9qZWN0LmNhdGVnb3J5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kWWVhcjogICBwcm9qZWN0LmVuZFllYXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFllYXI6IHByb2plY3Quc3RhcnRZZWFyLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogICAgICBwcm9qZWN0LnByb2plY3RJMThuWyAwIF0ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBvcnQ6ICAgcHJvamVjdC5wcm9qZWN0STE4blsgMCBdLnN1cHBvcnQsXG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICB0YWJsZS5wdWJsaWNhdGlvbi5maW5kQWxsKCB7XG4gICAgICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5wdWJsaWNhdGlvbkkxOG4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAncHVibGljYXRpb25JMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAncHVibGljYXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAnY2F0ZWdvcnknLFxuICAgICAgICAgICAgICAgICAgICAnaXNzdWVZZWFyJyxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgICBwdWJsaWNhdGlvbnMgPT4gcHVibGljYXRpb25zLm1hcChcbiAgICAgICAgICAgICAgICAgICAgcHVibGljYXRpb24gPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeTogICAgcHVibGljYXRpb24uY2F0ZWdvcnksXG4gICAgICAgICAgICAgICAgICAgICAgICBpc3N1ZVllYXI6ICAgcHVibGljYXRpb24uaXNzdWVZZWFyLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHVibGljYXRpb246IHB1YmxpY2F0aW9uLnB1YmxpY2F0aW9uSTE4blsgMCBdLnB1YmxpY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgdGFibGUuc3BlY2lhbHR5LmZpbmRBbGwoIHtcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdzcGVjaWFsdHknLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUlkLFxuICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSApLFxuICAgICAgICAgICAgdGFibGUudGVjaG5vbG9neVRyYW5zZmVyLmZpbmRBbGwoIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLnRlY2hub2xvZ3lUcmFuc2ZlckkxOG4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAndGVjaG5vbG9neVRyYW5zZmVySTE4bicsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2F1dGhvcml0eScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3BhdGVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JlY2VpdmVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGVjaG5vbG9neScsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdlbmREYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgJ25zY051bWJlcicsXG4gICAgICAgICAgICAgICAgICAgICdzdGFydERhdGUnLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUlkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9IClcbiAgICAgICAgICAgIC50aGVuKFxuICAgICAgICAgICAgICAgIHRlY2hub2xvZ3lUcmFuc2ZlcnMgPT4gdGVjaG5vbG9neVRyYW5zZmVycy5tYXAoXG4gICAgICAgICAgICAgICAgICAgIHRlY2hub2xvZ3lUcmFuc2ZlciA9PiAoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZERhdGU6ICAgIHRlY2hub2xvZ3lUcmFuc2Zlci5lbmREYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbnNjTnVtYmVyOiAgdGVjaG5vbG9neVRyYW5zZmVyLm5zY051bWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZTogIHRlY2hub2xvZ3lUcmFuc2Zlci5zdGFydERhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JpdHk6ICB0ZWNobm9sb2d5VHJhbnNmZXIudGVjaG5vbG9neVRyYW5zZmVySTE4blsgMCBdLmF1dGhvcml0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGVudDogICAgIHRlY2hub2xvZ3lUcmFuc2Zlci50ZWNobm9sb2d5VHJhbnNmZXJJMThuWyAwIF0ucGF0ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVjZWl2ZXI6ICAgdGVjaG5vbG9neVRyYW5zZmVyLnRlY2hub2xvZ3lUcmFuc2ZlckkxOG5bIDAgXS5yZWNlaXZlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlY2hub2xvZ3k6IHRlY2hub2xvZ3lUcmFuc2Zlci50ZWNobm9sb2d5VHJhbnNmZXJJMThuWyAwIF0udGVjaG5vbG9neSxcbiAgICAgICAgICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIHRhYmxlLnRpdGxlLmZpbmRBbGwoIHtcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiAgICAgIHRhYmxlLnRpdGxlSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzOiAgICAgICAgICd0aXRsZUkxOG4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0aXRsZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICdlbmREYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0RGF0ZScsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgdGl0bGVzID0+IHRpdGxlcy5tYXAoXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlID0+ICgge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5kRGF0ZTogICB0aXRsZS5lbmREYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnREYXRlOiB0aXRsZS5zdGFydERhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogICAgIHRpdGxlLnRpdGxlSTE4blsgMCBdLnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApLFxuICAgICAgICBdXG4gICAgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbn07XG4iLCJpbXBvcnQgYXNzb2NpYXRpb25zIGZyb20gJ21vZGVscy9mYWN1bHR5L29wZXJhdGlvbi9hc3NvY2lhdGlvbnMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoIGxhbmd1YWdlID0gJ3poLVRXJyApID0+IHtcbiAgICBjb25zdCB0YWJsZSA9IGF3YWl0IGFzc29jaWF0aW9ucygpO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRhYmxlLnByb2ZpbGUuZmluZEFsbCgge1xuICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAnZW1haWwnLFxuICAgICAgICAgICAgJ3BlcnNvbmFsV2ViJyxcbiAgICAgICAgICAgICdwaG90bycsXG4gICAgICAgICAgICAncG9zaXRpb24nLFxuICAgICAgICAgICAgJ3Byb2ZpbGVJZCcsXG4gICAgICAgIF0sXG4gICAgfSApXG4gICAgLnRoZW4oXG4gICAgICAgIHByb2ZpbGVzID0+IFByb21pc2UuYWxsKCBwcm9maWxlcy5tYXAoXG4gICAgICAgICAgICBhc3luYyAoIHByb2ZpbGUgKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgW1xuICAgICAgICAgICAgICAgICAgICBkZXBhcnRtZW50cyxcbiAgICAgICAgICAgICAgICAgICAgb2ZmaWNlcyxcbiAgICAgICAgICAgICAgICAgICAgbGFicyxcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUkxOG4sXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlcyxcbiAgICAgICAgICAgICAgICBdID0gYXdhaXQgUHJvbWlzZS5hbGwoIFtcbiAgICAgICAgICAgICAgICAgICAgdGFibGUuZGVwYXJ0bWVudC5maW5kQWxsKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmNsdWRlOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogICAgICB0YWJsZS5kZXBhcnRtZW50STE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2RlcGFydG1lbnRJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RlcGFydG1lbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQ6IHByb2ZpbGUucHJvZmlsZUlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVwYXJ0bWVudHMgPT4gZGVwYXJ0bWVudHMubWFwKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcGFydG1lbnQgPT4gKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlcGFydG1lbnQ6IGRlcGFydG1lbnQuZGVwYXJ0bWVudEkxOG5bIDAgXS5kZXBhcnRtZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZS5vZmZpY2UuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUub2ZmaWNlSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ29mZmljZUkxOG4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYWRkcmVzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGVsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZDogcHJvZmlsZS5wcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZpY2VzID0+IG9mZmljZXMubWFwKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9mZmljZSA9PiAoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVsOiAgICAgb2ZmaWNlLnRlbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogb2ZmaWNlLm9mZmljZUkxOG5bIDAgXS5hZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZS5sYWIuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUubGFiSTE4bixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM6ICAgICAgICAgJ2xhYkkxOG4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiV2ViJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZDogcHJvZmlsZS5wcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJzID0+IGxhYnMubWFwKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYiA9PiAoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiV2ViOiAgbGFiLmxhYldlYixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogICAgbGFiLmxhYkkxOG5bIDAgXS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICB0YWJsZS5wcm9maWxlSTE4bi5maW5kT25lKCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUlkOiBwcm9maWxlLnByb2ZpbGVJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0gKSxcbiAgICAgICAgICAgICAgICAgICAgdGFibGUudGl0bGUuZmluZEFsbCgge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5jbHVkZTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6ICAgICAgdGFibGUudGl0bGVJMThuLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhczogICAgICAgICAndGl0bGVJMThuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdlbmREYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3RhcnREYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJZDogcHJvZmlsZS5wcm9maWxlSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZXMgPT4gdGl0bGVzLm1hcChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZSA9PiAoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kRGF0ZTogICB0aXRsZS5lbmREYXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydERhdGU6IHRpdGxlLnN0YXJ0RGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICAgICB0aXRsZS50aXRsZUkxOG5bIDAgXS50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBdICk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCB7XG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiAgICAgICBwcm9maWxlLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAgICAgICAgcHJvZmlsZUkxOG4ubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgcGVyc29uYWxXZWI6IHByb2ZpbGUuZW1haWwsXG4gICAgICAgICAgICAgICAgICAgIHBob3RvOiAgICAgICBwcm9maWxlLnBob3RvLFxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogICAgcHJvZmlsZS5wb3NpdGlvbixcbiAgICAgICAgICAgICAgICAgICAgcHJvZmlsZUlkOiAgIHByb2ZpbGUucHJvZmlsZUlkLFxuICAgICAgICAgICAgICAgICAgICB0aXRsZXMsXG4gICAgICAgICAgICAgICAgICAgIGRlcGFydG1lbnRzLFxuICAgICAgICAgICAgICAgICAgICBvZmZpY2VzLFxuICAgICAgICAgICAgICAgICAgICBsYWJzLFxuICAgICAgICAgICAgICAgIH0gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKSApXG4gICAgKTtcblxuICAgIHRhYmxlLmRhdGFiYXNlLmNsb3NlKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbn07XG4iLCIvLyBSb3V0ZXIgZm9yIGAvYWJvdXRgXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb25maWcgZnJvbSAnc2V0dGluZ3Mvc2VydmVyL2NvbmZpZy5qcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIFJlc29sdmUgVVJMIGAvYWJvdXRgXG5yb3V0ZXIuZ2V0KCAvXlxcLyQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvYWJvdXQvaW5kZXguJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC9hYm91dC9hd2FyZGBcbnJvdXRlci5nZXQoIC9eXFwvYXdhcmQkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL2Fib3V0L2F3YXJkLiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJlc29sdmUgVVJMIGAvYWJvdXQvY29udGFjdGBcbnJvdXRlci5nZXQoIC9eXFwvY29udGFjdCQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvYWJvdXQvY29udGFjdC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL2Fib3V0L2ludHJvYFxucm91dGVyLmdldCggL15cXC9pbnRybyQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvYWJvdXQvaW50cm8uJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC9hYm91dC9mYWN1bHR5YFxucm91dGVyLmdldCggL15cXC9mYWN1bHR5JC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9hYm91dC9mYWN1bHR5LiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJlc29sdmUgVVJMIGAvYWJvdXQvZmFjdWx0eS9baWRdYFxucm91dGVyLmdldCggL15cXC9mYWN1bHR5XFwvWzAtOV0rJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9hYm91dC9mYWN1bHR5LWRldGFpbC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL2Fib3V0L3N0YWZmYFxucm91dGVyLmdldCggL15cXC9zdGFmZiQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvYWJvdXQvc3RhZmYuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIiwiLy8gUm91dGVyIGZvciAvYW5ub3VuY2VtZW50XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb25maWcgZnJvbSAnc2V0dGluZ3Mvc2VydmVyL2NvbmZpZy5qcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIFJlc29sdmUgVVJMIGAvYW5ub3VuY2VtZW50YFxucm91dGVyLmdldCggL15cXC8kLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL2Fubm91bmNlbWVudC9pbmRleC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCAvYW5ub3VuY2VtZW50L2FjdGl2aXR5XG5yb3V0ZXIuZ2V0KCAvXlxcL2FjdGl2aXR5JC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9hbm5vdW5jZW1lbnQvYWN0aXZpdHkuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgL2Fubm91bmNlbWVudC9hbGxcbnJvdXRlci5nZXQoIC9eXFwvYWxsJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9hbm5vdW5jZW1lbnQvYWxsLiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJlc29sdmUgVVJMIC9hbm5vdW5jZW1lbnQvcmVjcnVpdG1lbnRcbnJvdXRlci5nZXQoIC9eXFwvcmVjcnVpdG1lbnQkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL2Fubm91bmNlbWVudC9yZWNydWl0bWVudC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCAvYW5ub3VuY2VtZW50L1tpZF1cbnJvdXRlci5nZXQoIC9eXFwvXFxkKyQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvYW5ub3VuY2VtZW50L2Fubm91bmNlbWVudC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iLCIvLyBSb3V0ZXIgZm9yIC9ob21lXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb25maWcgZnJvbSAnc2V0dGluZ3Mvc2VydmVyL2NvbmZpZy5qcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIFJlc29sdmUgVVJMIGAvYFxucm91dGVyLmdldCggL15cXC8kLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL2hvbWUvaW5kZXguJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUm91dGUgdG8gbG9naW4gcGFnZVxucm91dGVyLmdldCggJy9sb2dpbicsICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9ob21lL2luZGV4LiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJvdXRlIHRvIHNlYXJjaCBwYWdlXG5yb3V0ZXIuZ2V0KCAnL3NlYXJjaCcsICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9ob21lL2luZGV4LiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJvdXRlIHRvIGNhbGVuZGVyIHBhZ2VcbnJvdXRlci5nZXQoICcvY2FsZW5kYXInLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvaG9tZS9pbmRleC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iLCIvLyBSb3V0ZXIgZm9yIC9yZXNlYXJjaFxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJ3NldHRpbmdzL3NlcnZlci9jb25maWcuanMnO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3Jlc2VhcmNoYFxucm91dGVyLmdldCggL15cXC8kLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc2VhcmNoL2luZGV4LiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJlc29sdmUgVVJMIGAvcmVzZWFyY2gvZ3JvdXBzYFxucm91dGVyLmdldCggL15cXC9ncm91cHMkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc2VhcmNoL2dyb3Vwcy4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3Jlc2VhcmNoL2xhYnNgXG5yb3V0ZXIuZ2V0KCAvXlxcL2xhYnMkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc2VhcmNoL2xhYnMuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC9yZXNlYXJjaC9wdWJsaWNhdGlvbnNgXG5yb3V0ZXIuZ2V0KCAvXlxcL3B1YmxpY2F0aW9ucyQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvcmVzZWFyY2gvcHVibGljYXRpb25zLiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiIsIi8vIFJvdXRlciBmb3IgL3Jlc291cmNlXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb25maWcgZnJvbSAnc2V0dGluZ3Mvc2VydmVyL2NvbmZpZy5qcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIFJlc29sdmUgVVJMIGAvcmVzb3VyY2VgXG5yb3V0ZXIuZ2V0KCAvXlxcLyQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvcmVzb3VyY2UvaW5kZXguJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYHJlc291cmNlL3J1bGVgXG5yb3V0ZXIuZ2V0KCAvXlxcL3J1bGUkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc291cmNlL3J1bGUuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYHJlc291cmNlL3JlbnRgXG5yb3V0ZXIuZ2V0KCAvXlxcL3JlbnQkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc291cmNlL3JlbnQuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYHJlc291cmNlL2ZpeGBcbnJvdXRlci5nZXQoIC9eXFwvZml4JC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9yZXNvdXJjZS9maXguJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYHJlc291cmNlL2llZXRgXG5yb3V0ZXIuZ2V0KCAvXlxcL2llZXQkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc291cmNlL2llZXQuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYHJlc291cmNlL3NpdGVtYXBgXG5yb3V0ZXIuZ2V0KCAvXlxcL3NpdGVtYXAkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3Jlc291cmNlL3NpdGVtYXAuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYHJlc291cmNlL2FsdW1uaWBcbnJvdXRlci5nZXQoIC9eXFwvYWx1bW5pJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9yZXNvdXJjZS9hbHVtbmkuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIiwiLy8gUm91dGVyIGZvciAvc3R1ZGVudFxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJ3NldHRpbmdzL3NlcnZlci9jb25maWcuanMnO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3N0dWRlbnRgXG5yb3V0ZXIuZ2V0KCAvXlxcLyQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvc3R1ZGVudC9pbmRleC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3N0dWRlbnQvY29sbGVnZWBcbnJvdXRlci5nZXQoIC9eXFwvY29sbGVnZS8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9zdHVkZW50L2NvbGxlZ2UuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC9zdHVkZW50L2NvdXJzZWBcbnJvdXRlci5nZXQoIC9eXFwvY291cnNlJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9zdHVkZW50L2NvdXJzZS4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3N0dWRlbnQvaW50ZXJuYXRpb25hbGBcbnJvdXRlci5nZXQoIC9eXFwvaW50ZXJuYXRpb25hbCQvLCAoIHJlcSwgcmVzICkgPT4ge1xuICAgIHJlcy5zZW5kRmlsZSggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2h0bWwvc3R1ZGVudC9pbnRlcm5hdGlvbmFsLiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJlc29sdmUgVVJMIGAvc3R1ZGVudC9pbnRlcm5hdGlvbmFsYFxucm91dGVyLmdldCggL15cXC9pbnRlcm5zaGlwJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9zdHVkZW50L2ludGVybnNoaXAuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC9zdHVkZW50L21hc3RlcmBcbnJvdXRlci5nZXQoIC9eXFwvbWFzdGVyJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC9zdHVkZW50L21hc3Rlci4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3N0dWRlbnQvcGhkYFxucm91dGVyLmdldCggL15cXC9waGQkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3N0dWRlbnQvcGhkLiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbi8vIFJlc29sdmUgVVJMIGAvc3R1ZGVudC9zY2hvbGFyc2hpcGBcbnJvdXRlci5nZXQoIC9eXFwvc2Nob2xhcnNoaXAkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3N0dWRlbnQvc2Nob2xhcnNoaXAuJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIiwiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCBob21lIGZyb20gJ3JvdXRlcy9ob21lLmpzJztcbmltcG9ydCBzdHVkZW50IGZyb20gJ3JvdXRlcy9zdHVkZW50LmpzJztcbmltcG9ydCBhYm91dCBmcm9tICdyb3V0ZXMvYWJvdXQuanMnO1xuaW1wb3J0IHJlc2VhcmNoIGZyb20gJ3JvdXRlcy9yZXNlYXJjaC5qcyc7XG5pbXBvcnQgYW5ub3VuY2VtZW50IGZyb20gJ3JvdXRlcy9hbm5vdW5jZW1lbnQuanMnO1xuaW1wb3J0IHJlc291cmNlIGZyb20gJ3JvdXRlcy9yZXNvdXJjZS5qcyc7XG5pbXBvcnQgdXNlciBmcm9tICdyb3V0ZXMvdXNlci5qcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci51c2UoICcvJywgaG9tZSApO1xuXG4vLyBSZXNvbHZlIFVSTCAvYWJvdXRcbnJvdXRlci51c2UoICcvYWJvdXQnLCBhYm91dCApO1xuXG4vLyBSZXNvbHZlIFVSTCAvYW5ub3VuY2VtZW50XG5yb3V0ZXIudXNlKCAnL2Fubm91bmNlbWVudCcsIGFubm91bmNlbWVudCApO1xuXG4vLyBSZXNvbHZlIFVSTCAvcmVzZWFyY2hcbnJvdXRlci51c2UoICcvcmVzZWFyY2gnLCByZXNlYXJjaCApO1xuXG4vLyBSZXNvbHZlIFVSTCAvcmVzb3VyY2VcbnJvdXRlci51c2UoICcvcmVzb3VyY2UnLCByZXNvdXJjZSApO1xuXG4vLyBSZXNvbHZlIFVSTCAvc3R1ZGVudFxucm91dGVyLnVzZSggJy9zdHVkZW50Jywgc3R1ZGVudCApO1xuXG4vLyBSZXNvbHZlIFVSTCAvdXNlclxucm91dGVyLnVzZSggJy91c2VyJywgdXNlciApO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iLCIvLyBSb3V0ZXIgZm9yIGAvdXNlcmBcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGNvbmZpZyBmcm9tICdzZXR0aW5ncy9zZXJ2ZXIvY29uZmlnLmpzJztcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC91c2VyYFxucm91dGVyLmdldCggL15cXC8kLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3VzZXIvaW5kZXguJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC91c2VyL3Byb2ZpbGVgXG5yb3V0ZXIuZ2V0KCAvXlxcL3Byb2ZpbGUkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3VzZXIvaW5kZXguJHsgcmVxLnF1ZXJ5Lmxhbmd1YWdlIH0uaHRtbGAgKTtcbn0gKTtcblxuLy8gUmVzb2x2ZSBVUkwgYC91c2VyL2Fubm91bmNlbWVudGBcbnJvdXRlci5nZXQoIC9eXFwvYW5ub3VuY2VtZW50JC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC91c2VyL2Fubm91bmNlbWVudC9pbmRleC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3VzZXIvYW5ub3VuY2VtZW50YFxucm91dGVyLmdldCggL15cXC9hbm5vdW5jZW1lbnRcXC9hZGQkLywgKCByZXEsIHJlcyApID0+IHtcbiAgICByZXMuc2VuZEZpbGUoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9odG1sL3VzZXIvYW5ub3VuY2VtZW50L2FkZC4keyByZXEucXVlcnkubGFuZ3VhZ2UgfS5odG1sYCApO1xufSApO1xuXG4vLyBSZXNvbHZlIFVSTCBgL3VzZXIvYW5ub3VuY2VtZW50YFxucm91dGVyLmdldCggL15cXC9hbm5vdW5jZW1lbnRcXC9lZGl0XFwvKFxcZCspJC8sICggcmVxLCByZXMgKSA9PiB7XG4gICAgcmVzLnNlbmRGaWxlKCBgJHsgY29uZmlnLnByb2plY3RSb290IH0vc3RhdGljL2Rpc3QvaHRtbC91c2VyL2Fubm91bmNlbWVudC9lZGl0LiR7IHJlcS5xdWVyeS5sYW5ndWFnZSB9Lmh0bWxgICk7XG59ICk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiIsImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5pbXBvcnQgY29uZmlnIGZyb20gJ3NldHRpbmdzL3NlcnZlci9jb25maWcuanMnO1xuaW1wb3J0IGxhbmd1YWdlIGZyb20gJ3NldHRpbmdzL2xhbmd1YWdlL21pZGRsZXdhcmUnO1xuaW1wb3J0IGFwaXMgZnJvbSAnYXBpcy91cmxzJztcbmltcG9ydCByb3V0ZXMgZnJvbSAncm91dGVzL3VybHMnO1xuXG4vLyBTdGFydCBzZXJ2ZXIuXG5jb25zdCBzZXJ2ZXIgPSBleHByZXNzKCk7XG5zZXJ2ZXIubGlzdGVuKCBjb25maWcucG9ydCApO1xuXG4vLyBTZXQgc3RhdGljIGZpbGVzIHJvdXRlcy5cbnNlcnZlci51c2UoICcvY3NzJywgZXhwcmVzcy5zdGF0aWMoIGAkeyBjb25maWcucHJvamVjdFJvb3QgfS9zdGF0aWMvZGlzdC9jc3NgICkgKTtcbnNlcnZlci51c2UoICcvanMnLCBleHByZXNzLnN0YXRpYyggYCR7IGNvbmZpZy5wcm9qZWN0Um9vdCB9L3N0YXRpYy9kaXN0L2pzYCApICk7XG5cbi8vIFNldCBsYW5ndWFnZSBvcHRpb24uXG5zZXJ2ZXIudXNlKCBsYW5ndWFnZSApO1xuXG4vLyBTZXQgd2ViIHNlcnZlciByb3V0ZXMuXG5zZXJ2ZXIudXNlKCAnLycsIHJvdXRlcyApO1xuXG4vLyBTZXQgd2ViIHNlcnZlciBhcGkgcm91dGVzLlxuc2VydmVyLnVzZSggJy9hcGknLCBhcGlzICk7XG4iLCIvKipcbiAqIERhdGFiYXNlIHNldHRpbmdzLlxuICogQG5hbWVzcGFjZVxuICogQHJlYWRvbmx5IHtzdHJpbmd9IHVzZXJuYW1lICAgLSBEYXRhYmFzZSBzZXJ2ZXIgdXNlciBhY2NvdW50LlxuICogQHJlYWRvbmx5IHtzdHJpbmd9IHBhc3N3b3JkICAgLSBEYXRhYmFzZSBzZXJ2ZXIgdXNlciBwYXNzd29yZC5cbiAqIEByZWFkb25seSB7c3RyaW5nfSBkb21haW5OYW1lIC0gRGF0YWJhc2Ugc2VydmVyIGhvc3QgYWRkcmVzcy5cbiAqIEByZWFkb25seSB7bnVtYmVyfSBwb3J0ICAgICAgIC0gRGF0YWJhc2Ugc2VydmVyIHBvcnQuXG4gKiBAcmVhZG9ubHkge3N0cmluZ30gcHJvdG9jb2wgICAtIFdoaWNoIGRhdGFiYXNlIHNlcnZlciBpcyB1c2VkLlxuICogQHJlYWRvbmx5IHtzdHJpbmd9IGhvc3QgICAgICAgLSBHZXQgZGF0YWJhc2Ugc2VydmVyIHVybC5cbiAqL1xuXG5jb25zdCBjb25maWcgPSB7fTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoIGNvbmZpZywge1xuICAgICd1c2VybmFtZSc6IHtcbiAgICAgICAgdmFsdWU6ICdiYWNrZW5kJyxcbiAgICB9LFxuICAgICdwYXNzd29yZCc6IHtcbiAgICAgICAgdmFsdWU6ICduY2t1Y3NpZUAyMDE4MDQxMicsXG4gICAgfSxcbiAgICAnZG9tYWluTmFtZSc6IHtcbiAgICAgICAgdmFsdWU6ICcxNDAuMTE2LjI0NS4xMDUnLFxuICAgIH0sXG4gICAgJ3BvcnQnOiB7XG4gICAgICAgIHZhbHVlOiAzMzA2LFxuICAgIH0sXG4gICAgJ3Byb3RvY29sJzoge1xuICAgICAgICB2YWx1ZTogJ215c3FsJyxcbiAgICB9LFxuICAgICdob3N0Jzoge1xuICAgICAgICB2YWx1ZSAoIGRhdGFiYXNlTmFtZSApIHtcbiAgICAgICAgICAgIHJldHVybiBgJHsgdGhpcy5wcm90b2NvbCB9Oi8vJHsgdGhpcy51c2VybmFtZSB9OiR7IHRoaXMucGFzc3dvcmQgfUAkeyB0aGlzLmRvbWFpbk5hbWUgfTokeyB0aGlzLnBvcnQgfS8keyBkYXRhYmFzZU5hbWUgfWA7XG4gICAgICAgIH0sXG4gICAgfSxcbiAgICAncHJvamVjdFJvb3QnOiB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0ICgpIHtcbiAgICAgICAgICAgIHJldHVybiAnL2hvbWUva2lub2UvRGVza3RvcC9OQ0tVLUNTSUUtV2Vic2l0ZSc7XG4gICAgICAgIH0sXG4gICAgfSxcbn0gKTtcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlnO1xuIiwiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IGNvbmZpZyBmcm9tICcuL2NvbmZpZy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICggZGF0YWJhc2VOYW1lLCBkZWJ1ZyA9IGZhbHNlICkgPT4ge1xuICAgIGNvbnN0IGRhdGFiYXNlID0gbmV3IFNlcXVlbGl6ZShcbiAgICAgICAgZGF0YWJhc2VOYW1lLFxuICAgICAgICBjb25maWcudXNlcm5hbWUsXG4gICAgICAgIGNvbmZpZy5wYXNzd29yZCxcbiAgICAgICAge1xuICAgICAgICAgICAgaG9zdDogICAgICAgICAgICAgY29uZmlnLmRvbWFpbk5hbWUsXG4gICAgICAgICAgICBkaWFsZWN0OiAgICAgICAgICBjb25maWcucHJvdG9jb2wsXG4gICAgICAgICAgICBvcGVyYXRvcnNBbGlhc2VzOiBmYWxzZSxcbiAgICAgICAgICAgIHBvb2w6ICAgICAgICAgICAgIGNvbmZpZy5wb29sLFxuICAgICAgICAgICAgbG9nZ2luZzogICAgICAgICAgZGVidWcsXG4gICAgICAgICAgICBkaWFsZWN0T3B0aW9uczogICB7XG4gICAgICAgICAgICAgICAgdXNlVVRDOiAgIGZhbHNlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpbWV6b25lOiAnKzA4OjAwJyxcbiAgICAgICAgfVxuICAgICk7XG5cbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBkYXRhYmFzZS5hdXRoZW50aWNhdGUoKTtcbiAgICB9XG4gICAgY2F0Y2ggKCBlcnIgKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoICdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2U6ICcsIGVyciApO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoICdkYXRhYmFzZSBuZWVkIHRvIGJlIGNoZWNrZWQuJyApO1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhYmFzZTtcbn07XG4iLCJjb25zdCBkZWZhdWx0VmFsdWUgPSB7fTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoIGRlZmF1bHRWYWx1ZSwge1xuICAgICdzdGFydFRpbWUnOiB7XG4gICAgICAgIHZhbHVlOiBuZXcgRGF0ZSggJzIwMTgvMDcvMDEnICkudG9JU09TdHJpbmcoKSxcbiAgICB9LFxuICAgICdlbmRUaW1lJzoge1xuICAgICAgICBnZXQgKCkgeyByZXR1cm4gbmV3IERhdGUoIERhdGUubm93KCkgKS50b0lTT1N0cmluZygpOyB9LFxuICAgIH0sXG4gICAgJ3BhZ2UnOiB7XG4gICAgICAgIHZhbHVlOiAxLFxuICAgIH0sXG4gICAgJ2xhbmdhdWdlJzoge1xuICAgICAgICB2YWx1ZTogJ3poLVRXJyxcbiAgICB9LFxuICAgICdhbm5vdW5jZW1lbnRzUGVyUGFnZSc6IHtcbiAgICAgICAgdmFsdWU6IDYsXG4gICAgfSxcbn0gKTtcblxuZXhwb3J0IGRlZmF1bHQgZGVmYXVsdFZhbHVlO1xuIiwiY29uc3QgbGFuZ3VhZ2UgPSB7XG4gICAgc3VwcG9ydDogW1xuICAgICAgICAnemgtVFcnLFxuICAgICAgICAnZW4tVVMnLFxuICAgIF0sXG4gICAgZGVmYXVsdDogJ3poLVRXJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGxhbmd1YWdlO1xuIiwiaW1wb3J0IGxhbmd1YWdlIGZyb20gJ3NldHRpbmdzL2xhbmd1YWdlL2NvbmZpZy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICggcmVxLCByZXMsIG5leHQgKSB7XG4gICAgLy8gTm8gbGFuZ3VhZ2Ugb3B0aW9uIHByb3ZpZGVkLCB1c2luZyBkZWZhdWx0IG9wdGlvbi5cbiAgICByZXEucXVlcnkubGFuZ3VhZ2UgPSByZXEucXVlcnkubGFuZ3VhZ2UgfHwgbGFuZ3VhZ2UuZGVmYXVsdDtcblxuICAgIC8vIEludmFsaWQgbGFuZ3VhZ2Ugb3B0aW9uIHByb3ZpZGVkLCByZXNwb25zZSB3aXRoIGVycm9yLlxuICAgIGlmICggIWxhbmd1YWdlLnN1cHBvcnQuaW5jbHVkZXMoIHJlcS5xdWVyeS5sYW5ndWFnZSApIClcbiAgICAvKiBlc2xpbnQgbm8tbWFnaWMtbnVtYmVyczogJ29mZicgKi9cbiAgICAgICAgcmVzLnN0YXR1cyggNDAwICkuc2VuZCggJ2ludmFsaWQgbGFuZ3VhZ2Ugb3B0aW9uJyApO1xuXG4gICAgLy8gVmFsaWQgbGFuZ3VhZ2Ugb3B0aW9uIHByb3ZpZGVkLCBjYWxsIGBuZXh0KClgIHRvIGNvbnRpbnVlIHJvdXRpbmcuXG4gICAgZWxzZVxuICAgICAgICBuZXh0KCk7XG59XG4iLCIvKipcbiAqIFdlYiBzZXJ2ZXIgc2V0dGluZ3NcbiAqIEBuYW1lc3BhY2VcbiAqIEByZWFkb25seSB7c3RyaW5nfSBkb21haW5OYW1lIC0gV2ViIHNlcnZlciBob3N0IGFkZHJlc3MuXG4gKiBAcmVhZG9ubHkge3N0cmluZ30gcHJvdG9jb2wgICAtIFdoaWNrIHByb3RvY29sIHdlYiBzZXJ2ZXIgaXMgdXNpbmcsIGNhbiBiZSBlaXRoZXIgJ2h0dHAnIG9yICdodHRwcycuXG4gKiBAcmVhZG9ubHkge251bWJlcn0gcG9ydCAgICAgICAtIFdlYiBzZXJ2ZXIgcG9ydC5cbiAqIEByZWFkb25seSB7c3RyaW5nfSBob3N0ICAgICAgIC0gR2V0IHdlYiBzZXJ2ZXIgdXJsLlxuICogQHJlYWRvbmx5IHtzdHJpbmd9IHN0YXRpY0hvc3QgLSBHZXQgc3RhdGljIGZpbGUgc2VydmVyIHVybC5cbiAqL1xuXG5jb25zdCBjb25maWcgPSB7fTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoIGNvbmZpZywge1xuICAgICdkb21haW5OYW1lJzoge1xuICAgICAgICB2YWx1ZTogJ2xvY2FsaG9zdCcsXG4gICAgfSxcbiAgICAncHJvdG9jb2wnOiB7XG4gICAgICAgIHZhbHVlOiAnaHR0cCcsXG4gICAgfSxcbiAgICAncG9ydCc6IHtcbiAgICAgICAgdmFsdWU6IDMwMDAsXG4gICAgfSxcbiAgICAnaG9zdCc6IHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQgKCkge1xuICAgICAgICAgICAgcmV0dXJuICcnLmNvbmNhdCggY29uZmlnLnByb3RvY29sLCAnOi8vJyApLmNvbmNhdCggY29uZmlnLmRvbWFpbk5hbWUgKS5jb25jYXQoIGNvbmZpZy5wb3J0ID09PSAnODAnIHx8IGNvbmZpZy5wb3J0ID09PSAnNDQzJyA/ICcnIDogJzonLmNvbmNhdCggY29uZmlnLnBvcnQgKSApO1xuICAgICAgICB9LFxuICAgIH0sXG4gICAgJ3N0YXRpY0hvc3QnOiB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0ICgpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25maWcuaG9zdDtcbiAgICAgICAgfSxcbiAgICB9LFxuICAgICdwcm9qZWN0Um9vdCc6IHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQgKCkge1xuICAgICAgICAgICAgcmV0dXJuICcvaG9tZS9raW5vZS9EZXNrdG9wL05DS1UtQ1NJRS1XZWJzaXRlJztcbiAgICAgICAgfSxcbiAgICB9LFxufSApO1xuXG5leHBvcnQgZGVmYXVsdCBjb25maWc7XG4iLCJjb25zdCB2YWxpZFRhZ3MgPSBPYmplY3QuZnJlZXplKCBbXG4gICAgJ2F3YXJkJyxcbiAgICAnY29sbGVnZScsXG4gICAgJ2NvbXBldGl0aW9uJyxcbiAgICAnY29uZmVyZW5jZScsXG4gICAgJ2NvdXJzZScsXG4gICAgJ2V4aGliaXRpb24nLFxuICAgICdmYWN1bHR5JyxcbiAgICAnaW50ZXJuYXRpb25hbCcsXG4gICAgJ2ludGVybnNoaXAnLFxuICAgICdtYXN0ZXInLFxuICAgICdwaGQnLFxuICAgICdyZWNydWl0bWVudCcsXG4gICAgJ3J1bGUnLFxuICAgICdzY2hvbGFyc2hpcCcsXG4gICAgJ3NwZWVjaCcsXG5dICk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBpc1ZhbGlkVGFncyAoIHRhZ3MgKSB7XG4gICAgICAgIHJldHVybiB0YWdzLmZpbHRlciggdGFnID0+IHZhbGlkVGFncy5pbmRleE9mKCB0YWcgKSA8IDAgKS5sZW5ndGggPT09IDA7XG4gICAgfSxcblxuICAgIGlzVmFsaWREYXRlICggZGF0ZSApIHtcbiAgICAgICAgcmV0dXJuIGRhdGUgaW5zdGFuY2VvZiBEYXRlICYmICFOdW1iZXIuaXNOYU4oIGRhdGUgKTtcbiAgICB9LFxuXG4gICAgaXNWYWxpZFBhZ2UgKCBwYWdlICkge1xuICAgICAgICByZXR1cm4gIU51bWJlci5pc05hTiggTnVtYmVyKCBwYWdlICkgKSAmJiBOdW1iZXIuaXNJbnRlZ2VyKCBOdW1iZXIoIHBhZ2UgKSApICYmIE51bWJlciggcGFnZSApID4gMDtcbiAgICB9LFxufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXBvbHlmaWxsXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpOyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV4cHJlc3NcIik7IiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGF0aFwiKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJzZXF1ZWxpemVcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==