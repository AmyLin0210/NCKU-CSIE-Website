//- Each `cards__card` contains one faculty
mixin cards__card( profile = {} )
  -
    const i18n = Object.freeze( {
      [ LANG.getLanguageId( 'en-US' ) ]: {
        'more':   'Read more',
        'email':  'Email',
        'office': 'Office',
        'tel':    `Tel: : ${ profile.officeTel.split(',').join( ' ext. ' ) }`,
        'lab':    'Lab',
      },
      [ LANG.getLanguageId( 'zh-TW' ) ]: {
        'more':   '更多資訊',
        'email':  '信箱',
        'office': '辦公室',
        'tel':    `電話: ${ profile.officeTel.split(',').join( ' 分機 ' ) }`,
        'lab':    '實驗室',
      },
    } );

  section.cards__card.card(
    data-department-ids = `${ profile.department.join() }`,
    data-research-group-ids = `${ profile.researchGroup.join() }`
  )
    //- Faculty's photo.
    img.card__photo(
      src = `http://www.csie.ncku.edu.tw/ncku_csie/images/teacher/teacher${ profile.profileId }.jpg`,
      alt = profile.name
    )

    //- Faculty's intro.
    article.card__intro.intro

      //- Faculty belongs to some departments.
      if profile.department
        aside.intro__departments.departments
          each departmentId in profile.department
            span.departments__department( data = `${ departmentId }` )= UTILS.DepartmentUtils.getDepartmentById( { departmentId, languageId: LANG.id } )

      //- Faculty's name.
      if profile.name
        h1.intro__name= profile.name

      //- Faculty has some titles.
      if profile.title
        aside.intro__titles.titles
          each title in profile.title
            span( class = 'titles__title' )= title

      //- Faculty's email.
      if profile.email
        aside.intro__email.email
          span.email__text.text= `${ i18n[ LANG.id ].email }: `
            a.text__link( href = `mailto:${ profile.email }` )= profile.email

      //- Faculty owns some offices, including address and phone.

      if profile.officeAddress
        address.intro__address= `${ i18n[ LANG.id ].office }: ${ profile.officeAddress }`
      if profile.officeTel
        a.intro__phone( href = `tel:${ profile.officeTel }` )= i18n[ LANG.id ].tel

      //- Faculty run some labs.
      if profile.labName
        aside.intro__lab.lab
          span.lab__text.text= `${ i18n[ LANG.id ].lab }: `
            a.text__link( href = profile.labWeb )= `${ profile.labName }`

      //- Faculty's detail information link.
      p.intro__more
        a( href = UTILS.url( {
          href: `about/faculty/${ profile.profileId }`,
          query: {
            languageId: LANG.id
          },
        } ) )= i18n[ LANG.id ].more

//- main
    Construct all faculty information with `cards__card`.
//- Sort faculty based on their showing order.
- data.sort( ( facultyA, facultyB ) => facultyA.order - facultyB.order )
each profile in data
  +cards__card( profile )
